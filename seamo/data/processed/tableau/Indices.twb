<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0510.1418                               -->
<workbook original-version='18.1' source-build='2018.1.1 (20181.18.0510.1418)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='blkgrp10_shore' inline='true' name='federated.1vmhr2y11w0na212hwraf0n0hai7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='blkgrp10_shore' name='ogrdirect.0qsm3aw0g7j4wu0zoc8pk0pf7qc3'>
            <connection class='ogrdirect' directory='C:/Users/dariu/DSSG/SEAMO/Seattle-Mobility-Index/seamo/data/raw/shapefiles' filename='blkgrp10_shore.shp' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2018.1\local\proj4' password='' server='' tablename='' />
          </named-connection>
          <named-connection caption='cost_adjusted_median_income' name='textscan.0d8slhu00axovr11lqw0v15itsx9'>
            <connection class='textscan' directory='C:/Users/dariu/DSSG/SEAMO/Seattle-Mobility-Index/seamo/data/processed/csv_files' filename='cost_adjusted_median_income.csv' password='' server='' />
          </named-connection>
          <named-connection caption='BlockGroupGeocoded' name='textscan.0sypx4g08eskuh164s25z1la1gaa'>
            <connection class='textscan' directory='C:/Users/dariu/DSSG/SEAMO/Seattle-Mobility-Index/seamo/data/processed/csv_files' filename='BlockGroupGeocoded.csv' password='' server='' />
          </named-connection>
          <named-connection caption='sample_mode_choice_scaled' name='textscan.1izojme1d9bk9j0zwjqnf0mg8mqn'>
            <connection class='textscan' directory='C:/Users/dariu/DSSG/SEAMO/Seattle-Mobility-Index/seamo/data/processed/csv_files' filename='sample_mode_choice_scaled.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[blkgrp10_shore.shp].[GEO_ID_GRP]' />
              <expression op='[sample_mode_choice_scaled.csv].[block_group]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[cost_adjusted_median_income.csv].[key]' />
                <expression op='[BlockGroupGeocoded.csv].[key]' />
              </expression>
            </clause>
            <relation join='right' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[blkgrp10_shore.shp].[GEO_ID_GRP]' />
                  <expression op='[cost_adjusted_median_income.csv].[key]' />
                </expression>
              </clause>
              <relation connection='ogrdirect.0qsm3aw0g7j4wu0zoc8pk0pf7qc3' name='blkgrp10_shore.shp' table='[blkgrp10_shore.shp]' type='table'>
                <columns>
                  <column datatype='string' name='GEO_ID_GRP' ordinal='0' />
                  <column datatype='integer' name='FEATURE_ID' ordinal='1' />
                  <column datatype='string' name='BLKGRP_LBL' ordinal='2' />
                  <column datatype='string' name='BLKGRP_STR' ordinal='3' />
                  <column datatype='integer' name='BLKGRP_INT' ordinal='4' />
                  <column datatype='string' name='GRPLABEL_F' ordinal='5' />
                  <column datatype='string' name='GRPLABEL_C' ordinal='6' />
                  <column datatype='string' name='GRPLABEL_T' ordinal='7' />
                  <column datatype='string' name='TRACT_LBL' ordinal='8' />
                  <column datatype='string' name='TRACT_STR' ordinal='9' />
                  <column datatype='integer' name='TRACT_INT' ordinal='10' />
                  <column datatype='real' name='TRACT_FLT' ordinal='11' />
                  <column datatype='string' name='TRACT_DEL' ordinal='12' />
                  <column datatype='string' name='TRTLABEL_F' ordinal='13' />
                  <column datatype='string' name='TRTLABEL_C' ordinal='14' />
                  <column datatype='string' name='TRTLABEL_T' ordinal='15' />
                  <column datatype='string' name='COUNTY_STR' ordinal='16' />
                  <column datatype='integer' name='COUNTY_INT' ordinal='17' />
                  <column datatype='string' name='STATE_STR' ordinal='18' />
                  <column datatype='integer' name='STATE_INT' ordinal='19' />
                  <column datatype='string' name='LEVEL_1' ordinal='20' />
                  <column datatype='string' name='LEVEL_2' ordinal='21' />
                  <column datatype='string' name='LEVEL_3' ordinal='22' />
                  <column datatype='string' name='LEVEL_4' ordinal='23' />
                  <column datatype='real' name='GROUP_AREA' ordinal='24' />
                  <column datatype='real' name='GROUP_PERI' ordinal='25' />
                  <column datatype='real' name='Shape_area' ordinal='26' />
                  <column datatype='real' name='Shape_len' ordinal='27' />
                  <column datatype='spatial' name='Geometry' ordinal='28' />
                </columns>
              </relation>
              <relation connection='textscan.0d8slhu00axovr11lqw0v15itsx9' name='cost_adjusted_median_income.csv' table='[cost_adjusted_median_income#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='cost' ordinal='0' />
                  <column datatype='string' name='key' ordinal='1' />
                  <column datatype='real' name='adjusted_for_income' ordinal='2' />
                  <column datatype='real' name='normalized' ordinal='3' />
                  <column datatype='real' name='scaled' ordinal='4' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.0sypx4g08eskuh164s25z1la1gaa' name='BlockGroupGeocoded.csv' table='[BlockGroupGeocoded#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='key' ordinal='0' />
                <column datatype='string' name='geometry' ordinal='1' />
                <column datatype='string' name='neighborhood_short' ordinal='2' />
                <column datatype='string' name='neighborhood_long' ordinal='3' />
                <column datatype='string' name='seattle_city_council_district' ordinal='4' />
                <column datatype='string' name='urban_village' ordinal='5' />
                <column datatype='real' name='zipcode' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1izojme1d9bk9j0zwjqnf0mg8mqn' name='sample_mode_choice_scaled.csv' table='[sample_mode_choice_scaled#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='block_group' ordinal='0' />
              <column datatype='real' name='driving' ordinal='1' />
              <column datatype='real' name='bicycling' ordinal='2' />
              <column datatype='real' name='transit' ordinal='3' />
              <column datatype='real' name='walking' ordinal='4' />
              <column datatype='real' name='mode_index' ordinal='5' />
              <column datatype='real' name='mode_index_scaled' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[BLKGRP_INT]' value='[blkgrp10_shore.shp].[BLKGRP_INT]' />
          <map key='[BLKGRP_LBL]' value='[blkgrp10_shore.shp].[BLKGRP_LBL]' />
          <map key='[BLKGRP_STR]' value='[blkgrp10_shore.shp].[BLKGRP_STR]' />
          <map key='[COUNTY_INT]' value='[blkgrp10_shore.shp].[COUNTY_INT]' />
          <map key='[COUNTY_STR]' value='[blkgrp10_shore.shp].[COUNTY_STR]' />
          <map key='[FEATURE_ID]' value='[blkgrp10_shore.shp].[FEATURE_ID]' />
          <map key='[GEO_ID_GRP]' value='[blkgrp10_shore.shp].[GEO_ID_GRP]' />
          <map key='[GROUP_AREA]' value='[blkgrp10_shore.shp].[GROUP_AREA]' />
          <map key='[GROUP_PERI]' value='[blkgrp10_shore.shp].[GROUP_PERI]' />
          <map key='[GRPLABEL_C]' value='[blkgrp10_shore.shp].[GRPLABEL_C]' />
          <map key='[GRPLABEL_F]' value='[blkgrp10_shore.shp].[GRPLABEL_F]' />
          <map key='[GRPLABEL_T]' value='[blkgrp10_shore.shp].[GRPLABEL_T]' />
          <map key='[Geometry]' value='[blkgrp10_shore.shp].[Geometry]' />
          <map key='[LEVEL_1]' value='[blkgrp10_shore.shp].[LEVEL_1]' />
          <map key='[LEVEL_2]' value='[blkgrp10_shore.shp].[LEVEL_2]' />
          <map key='[LEVEL_3]' value='[blkgrp10_shore.shp].[LEVEL_3]' />
          <map key='[LEVEL_4]' value='[blkgrp10_shore.shp].[LEVEL_4]' />
          <map key='[STATE_INT]' value='[blkgrp10_shore.shp].[STATE_INT]' />
          <map key='[STATE_STR]' value='[blkgrp10_shore.shp].[STATE_STR]' />
          <map key='[Shape_area]' value='[blkgrp10_shore.shp].[Shape_area]' />
          <map key='[Shape_len]' value='[blkgrp10_shore.shp].[Shape_len]' />
          <map key='[TRACT_DEL]' value='[blkgrp10_shore.shp].[TRACT_DEL]' />
          <map key='[TRACT_FLT]' value='[blkgrp10_shore.shp].[TRACT_FLT]' />
          <map key='[TRACT_INT]' value='[blkgrp10_shore.shp].[TRACT_INT]' />
          <map key='[TRACT_LBL]' value='[blkgrp10_shore.shp].[TRACT_LBL]' />
          <map key='[TRACT_STR]' value='[blkgrp10_shore.shp].[TRACT_STR]' />
          <map key='[TRTLABEL_C]' value='[blkgrp10_shore.shp].[TRTLABEL_C]' />
          <map key='[TRTLABEL_F]' value='[blkgrp10_shore.shp].[TRTLABEL_F]' />
          <map key='[TRTLABEL_T]' value='[blkgrp10_shore.shp].[TRTLABEL_T]' />
          <map key='[adjusted_for_income]' value='[cost_adjusted_median_income.csv].[adjusted_for_income]' />
          <map key='[bicycling]' value='[sample_mode_choice_scaled.csv].[bicycling]' />
          <map key='[block_group]' value='[sample_mode_choice_scaled.csv].[block_group]' />
          <map key='[cost]' value='[cost_adjusted_median_income.csv].[cost]' />
          <map key='[driving]' value='[sample_mode_choice_scaled.csv].[driving]' />
          <map key='[geometry]' value='[BlockGroupGeocoded.csv].[geometry]' />
          <map key='[key (BlockGroupGeocoded.csv)]' value='[BlockGroupGeocoded.csv].[key]' />
          <map key='[key]' value='[cost_adjusted_median_income.csv].[key]' />
          <map key='[mode_index]' value='[sample_mode_choice_scaled.csv].[mode_index]' />
          <map key='[mode_index_scaled]' value='[sample_mode_choice_scaled.csv].[mode_index_scaled]' />
          <map key='[neighborhood_long]' value='[BlockGroupGeocoded.csv].[neighborhood_long]' />
          <map key='[neighborhood_short]' value='[BlockGroupGeocoded.csv].[neighborhood_short]' />
          <map key='[normalized]' value='[cost_adjusted_median_income.csv].[normalized]' />
          <map key='[scaled]' value='[cost_adjusted_median_income.csv].[scaled]' />
          <map key='[seattle_city_council_district]' value='[BlockGroupGeocoded.csv].[seattle_city_council_district]' />
          <map key='[transit]' value='[sample_mode_choice_scaled.csv].[transit]' />
          <map key='[urban_village]' value='[BlockGroupGeocoded.csv].[urban_village]' />
          <map key='[walking]' value='[sample_mode_choice_scaled.csv].[walking]' />
          <map key='[zipcode]' value='[BlockGroupGeocoded.csv].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>GEO_ID_GRP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEO_ID_GRP]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GEO_ID_GRP</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FEATURE_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FEATURE_ID]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>FEATURE_ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_LBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLKGRP_LBL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_LBL</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLKGRP_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BLKGRP_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_INT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_F</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_F]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_F</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_C</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_C]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_C</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_T</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_T]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_T</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_LBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_LBL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_LBL</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_STR</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TRACT_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_INT</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_FLT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TRACT_FLT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_FLT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_DEL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_DEL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_DEL</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_F</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_F]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_F</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_C</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_C]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_C</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_T</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_T]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_T</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>COUNTY_STR</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>COUNTY_INT</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>STATE_STR</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STATE_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>STATE_INT</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_1]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_1</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_2]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_2</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_3]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_3</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_4]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_4</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GROUP_AREA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GROUP_AREA]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GROUP_AREA</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GROUP_PERI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GROUP_PERI]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GROUP_PERI</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape_area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape_area]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Shape_area</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape_len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape_len]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Shape_len</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>28</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[key]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>key</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjusted_for_income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjusted_for_income]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>adjusted_for_income</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>normalized</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scaled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scaled]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>scaled</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[key (BlockGroupGeocoded.csv)]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>key</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geometry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geometry]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>geometry</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood_short</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood_short]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>neighborhood_short</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood_long</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood_long]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>neighborhood_long</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seattle_city_council_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seattle_city_council_district]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>seattle_city_council_district</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urban_village</remote-name>
            <remote-type>129</remote-type>
            <local-name>[urban_village]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>urban_village</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>block_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[block_group]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>block_group</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>driving</remote-name>
            <remote-type>5</remote-type>
            <local-name>[driving]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>driving</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bicycling</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bicycling]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>bicycling</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[transit]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>transit</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walking</remote-name>
            <remote-type>5</remote-type>
            <local-name>[walking]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>walking</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode_index]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>mode_index</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode_index_scaled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode_index_scaled]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>mode_index_scaled</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Blkgrp Int' datatype='integer' name='[BLKGRP_INT]' role='measure' type='quantitative' />
      <column caption='Blkgrp Lbl' datatype='string' name='[BLKGRP_LBL]' role='dimension' type='nominal' />
      <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
      <column caption='County Int' datatype='integer' name='[COUNTY_INT]' role='measure' type='quantitative' />
      <column caption='County Str' datatype='string' name='[COUNTY_STR]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Scaled_100' datatype='real' name='[Calculation_1819172801024282624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[scaled] * 100' />
      </column>
      <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
      </column>
      <column caption='Filter Neighborhood Null' datatype='boolean' name='[Calculation_1819172801032802307]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='NOT ISNULL([neighborhood_long])' />
      </column>
      <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
      </column>
      <column caption='Mode Index Scaled100' datatype='real' name='[Calculation_1819172801128611846]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[mode_index_scaled]*100' />
      </column>
      <column aggregation='None' datatype='integer' name='[Cost (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[cost]' peg='0' size='0.321' />
      </column>
      <column aggregation='Sum' caption='Feature Id' datatype='integer' name='[FEATURE_ID]' role='dimension' type='ordinal' />
      <column caption='Geo Id Grp' datatype='string' name='[GEO_ID_GRP]' role='dimension' type='nominal' />
      <column caption='Group Area' datatype='real' name='[GROUP_AREA]' role='measure' type='quantitative' />
      <column caption='Group Peri' datatype='real' name='[GROUP_PERI]' role='measure' type='quantitative' />
      <column caption='Grplabel C' datatype='string' name='[GRPLABEL_C]' role='dimension' type='nominal' />
      <column caption='Grplabel F' datatype='string' name='[GRPLABEL_F]' role='dimension' type='nominal' />
      <column caption='Grplabel T' datatype='string' name='[GRPLABEL_T]' role='dimension' type='nominal' />
      <column caption='Level 1' datatype='string' name='[LEVEL_1]' role='dimension' type='nominal' />
      <column caption='Level 2' datatype='string' name='[LEVEL_2]' role='dimension' type='nominal' />
      <column caption='Level 3' datatype='string' name='[LEVEL_3]' role='dimension' type='nominal' />
      <column caption='Level 4' datatype='string' name='[LEVEL_4]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State Int' datatype='integer' name='[STATE_INT]' role='measure' type='quantitative' />
      <column caption='State Str' datatype='string' name='[STATE_STR]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Shape area' datatype='real' name='[Shape_area]' role='measure' type='quantitative' />
      <column caption='Shape len' datatype='real' name='[Shape_len]' role='measure' type='quantitative' />
      <column caption='Tract Del' datatype='string' name='[TRACT_DEL]' role='dimension' type='nominal' />
      <column caption='Tract Flt' datatype='real' name='[TRACT_FLT]' role='measure' type='quantitative' />
      <column caption='Tract Int' datatype='integer' name='[TRACT_INT]' role='measure' type='quantitative' />
      <column caption='Tract Lbl' datatype='string' name='[TRACT_LBL]' role='dimension' type='nominal' />
      <column caption='Tract Str' datatype='string' name='[TRACT_STR]' role='dimension' type='nominal' />
      <column caption='Trtlabel C' datatype='string' name='[TRTLABEL_C]' role='dimension' type='nominal' />
      <column caption='Trtlabel F' datatype='string' name='[TRTLABEL_F]' role='dimension' type='nominal' />
      <column caption='Trtlabel T' datatype='string' name='[TRTLABEL_T]' role='dimension' type='nominal' />
      <column caption='Adjusted For Income' datatype='real' name='[adjusted_for_income]' role='measure' type='quantitative' />
      <column caption='Bicycling' datatype='real' name='[bicycling]' role='measure' type='quantitative' />
      <column caption='Block Group' datatype='string' default-role='measure' default-type='quantitative' name='[block_group]' role='dimension' type='nominal' />
      <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
      <column caption='Driving' datatype='real' name='[driving]' role='measure' type='quantitative' />
      <column caption='Geometry1' datatype='string' name='[geometry]' role='dimension' type='nominal' />
      <column caption='Key' datatype='string' name='[key]' role='dimension' type='nominal' />
      <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
      <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
      <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
      <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
      <column caption='Normalized' datatype='real' name='[normalized]' role='measure' type='quantitative' />
      <column caption='Scaled' datatype='real' name='[scaled]' role='measure' type='quantitative' />
      <column caption='Seattle City Council District' datatype='string' name='[seattle_city_council_district]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Transit' datatype='real' name='[transit]' role='measure' type='quantitative' />
      <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
      <column caption='Walking' datatype='real' name='[walking]' role='measure' type='quantitative' />
      <column caption='Zipcode' datatype='real' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Cost (bin)]' derivation='None' name='[none:Cost (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blkgrp Str)' hidden='true' name='[Action (Blkgrp Str)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BLKGRP_STR]' />
        </groupfilter>
      </group>
      <group caption='Action (Cost (bin))' hidden='true' name='[Action (Cost (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cost (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (In Urban Village)' hidden='true' name='[Action (In Urban Village)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1819172801032105986]' />
        </groupfilter>
      </group>
      <group caption='Action (Mode Index (bin))' hidden='true' name='[Action (Mode Index (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighborhood Long)' hidden='true' name='[Action (Neighborhood Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neighborhood_long]' />
        </groupfilter>
      </group>
      <group caption='Action (Show Neighborhood Short if No Broader Term)' hidden='true' name='[Action (Show Neighborhood Short if No Broader Term)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1819172801037238276]' />
        </groupfilter>
      </group>
      <group caption='Action (Show Neighborhood Short if No Broader Term,Neighborhood Long)' hidden='true' name='[Action (Show Neighborhood Short if No Broader Term,Neighborhood Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1819172801037238276]' />
          <groupfilter function='level-members' level='[neighborhood_long]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='STATE_STR, COUNTY_STR'>
          <field>[STATE_STR]</field>
          <field>[COUNTY_STR]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/dariu/Documents/My Tableau Repository/Datasources/blockgroup_geocoded_affordability.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/03/2018 12:53:13 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[BLKGRP_INT]' value='[Extract].[BLKGRP_INT]' />
            <map key='[BLKGRP_LBL]' value='[Extract].[BLKGRP_LBL]' />
            <map key='[BLKGRP_STR]' value='[Extract].[BLKGRP_STR]' />
            <map key='[COUNTY_INT]' value='[Extract].[COUNTY_INT]' />
            <map key='[COUNTY_STR]' value='[Extract].[COUNTY_STR]' />
            <map key='[FEATURE_ID]' value='[Extract].[FEATURE_ID]' />
            <map key='[GEO_ID_GRP]' value='[Extract].[GEO_ID_GRP]' />
            <map key='[GROUP_AREA]' value='[Extract].[GROUP_AREA]' />
            <map key='[GROUP_PERI]' value='[Extract].[GROUP_PERI]' />
            <map key='[GRPLABEL_C]' value='[Extract].[GRPLABEL_C]' />
            <map key='[GRPLABEL_F]' value='[Extract].[GRPLABEL_F]' />
            <map key='[GRPLABEL_T]' value='[Extract].[GRPLABEL_T]' />
            <map key='[Geometry]' value='[Extract].[Geometry]' />
            <map key='[LEVEL_1]' value='[Extract].[LEVEL_1]' />
            <map key='[LEVEL_2]' value='[Extract].[LEVEL_2]' />
            <map key='[LEVEL_3]' value='[Extract].[LEVEL_3]' />
            <map key='[LEVEL_4]' value='[Extract].[LEVEL_4]' />
            <map key='[STATE_INT]' value='[Extract].[STATE_INT]' />
            <map key='[STATE_STR]' value='[Extract].[STATE_STR]' />
            <map key='[Shape_area]' value='[Extract].[Shape_area]' />
            <map key='[Shape_len]' value='[Extract].[Shape_len]' />
            <map key='[TRACT_DEL]' value='[Extract].[TRACT_DEL]' />
            <map key='[TRACT_FLT]' value='[Extract].[TRACT_FLT]' />
            <map key='[TRACT_INT]' value='[Extract].[TRACT_INT]' />
            <map key='[TRACT_LBL]' value='[Extract].[TRACT_LBL]' />
            <map key='[TRACT_STR]' value='[Extract].[TRACT_STR]' />
            <map key='[TRTLABEL_C]' value='[Extract].[TRTLABEL_C]' />
            <map key='[TRTLABEL_F]' value='[Extract].[TRTLABEL_F]' />
            <map key='[TRTLABEL_T]' value='[Extract].[TRTLABEL_T]' />
            <map key='[adjusted_for_income]' value='[Extract].[adjusted_for_income]' />
            <map key='[bicycling]' value='[Extract].[bicycling]' />
            <map key='[block_group]' value='[Extract].[block_group]' />
            <map key='[cost]' value='[Extract].[cost]' />
            <map key='[driving]' value='[Extract].[driving]' />
            <map key='[geometry]' value='[Extract].[geometry1]' />
            <map key='[key (BlockGroupGeocoded.csv)]' value='[Extract].[key]' />
            <map key='[key]' value='[Extract].[key1]' />
            <map key='[mode_index]' value='[Extract].[mode_index]' />
            <map key='[mode_index_scaled]' value='[Extract].[mode_index_scaled]' />
            <map key='[neighborhood_long]' value='[Extract].[neighborhood_long]' />
            <map key='[neighborhood_short]' value='[Extract].[neighborhood_short]' />
            <map key='[normalized]' value='[Extract].[normalized]' />
            <map key='[scaled]' value='[Extract].[scaled]' />
            <map key='[seattle_city_council_district]' value='[Extract].[seattle_city_council_district]' />
            <map key='[transit]' value='[Extract].[transit]' />
            <map key='[urban_village]' value='[Extract].[urban_village]' />
            <map key='[walking]' value='[Extract].[walking]' />
            <map key='[zipcode]' value='[Extract].[zipcode]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='481' timestamp-start='2018-08-03 00:53:13.670' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>GEO_ID_GRP</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GEO_ID_GRP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GEO_ID_GRP</remote-alias>
              <ordinal>0</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FEATURE_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FEATURE_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FEATURE_ID</remote-alias>
              <ordinal>1</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_LBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BLKGRP_LBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_LBL</remote-alias>
              <ordinal>2</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BLKGRP_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_STR</remote-alias>
              <ordinal>3</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[BLKGRP_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_INT</remote-alias>
              <ordinal>4</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_F</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_F]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_F</remote-alias>
              <ordinal>5</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_C</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_C</remote-alias>
              <ordinal>6</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_T</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_T]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_T</remote-alias>
              <ordinal>7</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_LBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_LBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_LBL</remote-alias>
              <ordinal>8</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_STR</remote-alias>
              <ordinal>9</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TRACT_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_INT</remote-alias>
              <ordinal>10</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_FLT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TRACT_FLT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_FLT</remote-alias>
              <ordinal>11</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_DEL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_DEL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_DEL</remote-alias>
              <ordinal>12</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_F</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_F]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_F</remote-alias>
              <ordinal>13</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_C</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_C</remote-alias>
              <ordinal>14</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_T</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_T]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_T</remote-alias>
              <ordinal>15</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTY_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_STR</remote-alias>
              <ordinal>16</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[COUNTY_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_INT</remote-alias>
              <ordinal>17</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE_STR</remote-alias>
              <ordinal>18</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[STATE_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE_INT</remote-alias>
              <ordinal>19</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_1</remote-alias>
              <ordinal>20</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_2</remote-alias>
              <ordinal>21</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_3</remote-alias>
              <ordinal>22</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_4</remote-alias>
              <ordinal>23</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GROUP_AREA</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GROUP_AREA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GROUP_AREA</remote-alias>
              <ordinal>24</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GROUP_PERI</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GROUP_PERI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GROUP_PERI</remote-alias>
              <ordinal>25</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shape_area</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shape_area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shape_area</remote-alias>
              <ordinal>26</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shape_len</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shape_len]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shape_len</remote-alias>
              <ordinal>27</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Geometry</remote-name>
              <remote-type>128</remote-type>
              <local-name>[Geometry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Geometry</remote-alias>
              <ordinal>28</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>spatial</local-type>
              <aggregation>Collect</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cost</remote-alias>
              <ordinal>29</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>key1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>key1</remote-alias>
              <ordinal>30</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>adjusted_for_income</remote-name>
              <remote-type>5</remote-type>
              <local-name>[adjusted_for_income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>adjusted_for_income</remote-alias>
              <ordinal>31</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized</remote-alias>
              <ordinal>32</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>scaled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[scaled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>scaled</remote-alias>
              <ordinal>33</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>key</remote-name>
              <remote-type>129</remote-type>
              <local-name>[key (BlockGroupGeocoded.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>key</remote-alias>
              <ordinal>34</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geometry1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geometry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geometry1</remote-alias>
              <ordinal>35</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighborhood_short</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighborhood_short]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighborhood_short</remote-alias>
              <ordinal>36</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>89</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighborhood_long</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighborhood_long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighborhood_long</remote-alias>
              <ordinal>37</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seattle_city_council_district</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seattle_city_council_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seattle_city_council_district</remote-alias>
              <ordinal>38</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>urban_village</remote-name>
              <remote-type>129</remote-type>
              <local-name>[urban_village]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>urban_village</remote-alias>
              <ordinal>39</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zipcode</remote-name>
              <remote-type>5</remote-type>
              <local-name>[zipcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zipcode</remote-alias>
              <ordinal>40</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>block_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[block_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>block_group</remote-alias>
              <ordinal>41</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>driving</remote-name>
              <remote-type>5</remote-type>
              <local-name>[driving]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>driving</remote-alias>
              <ordinal>42</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>128</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bicycling</remote-name>
              <remote-type>5</remote-type>
              <local-name>[bicycling]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bicycling</remote-alias>
              <ordinal>43</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>transit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[transit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>transit</remote-alias>
              <ordinal>44</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>88</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>walking</remote-name>
              <remote-type>5</remote-type>
              <local-name>[walking]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>walking</remote-alias>
              <ordinal>45</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mode_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mode_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mode_index</remote-alias>
              <ordinal>46</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>397</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mode_index_scaled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mode_index_scaled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mode_index_scaled</remote-alias>
              <ordinal>47</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>397</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.517995' measure-ordering='alphabetic' measure-percentage='0.482005' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='GEO_ID_GRP' />
        <field-sort-custom-order field='FEATURE_ID' />
        <field-sort-custom-order field='BLKGRP_LBL' />
        <field-sort-custom-order field='BLKGRP_STR' />
        <field-sort-custom-order field='BLKGRP_INT' />
        <field-sort-custom-order field='GRPLABEL_F' />
        <field-sort-custom-order field='GRPLABEL_C' />
        <field-sort-custom-order field='GRPLABEL_T' />
        <field-sort-custom-order field='TRACT_LBL' />
        <field-sort-custom-order field='TRACT_STR' />
        <field-sort-custom-order field='TRACT_INT' />
        <field-sort-custom-order field='TRACT_FLT' />
        <field-sort-custom-order field='TRACT_DEL' />
        <field-sort-custom-order field='TRTLABEL_F' />
        <field-sort-custom-order field='TRTLABEL_C' />
        <field-sort-custom-order field='TRTLABEL_T' />
        <field-sort-custom-order field='COUNTY_STR' />
        <field-sort-custom-order field='COUNTY_INT' />
        <field-sort-custom-order field='STATE_STR' />
        <field-sort-custom-order field='STATE_INT' />
        <field-sort-custom-order field='LEVEL_1' />
        <field-sort-custom-order field='LEVEL_2' />
        <field-sort-custom-order field='LEVEL_3' />
        <field-sort-custom-order field='LEVEL_4' />
        <field-sort-custom-order field='GROUP_AREA' />
        <field-sort-custom-order field='GROUP_PERI' />
        <field-sort-custom-order field='Shape_area' />
        <field-sort-custom-order field='Shape_len' />
        <field-sort-custom-order field='Geometry' />
        <field-sort-custom-order field='key (BlockGroupGeocoded.csv)' />
        <field-sort-custom-order field='geometry' />
        <field-sort-custom-order field='neighborhood_short' />
        <field-sort-custom-order field='neighborhood_long' />
        <field-sort-custom-order field='Calculation_1819172801037238276' />
        <field-sort-custom-order field='Calculation_1819172801032802307' />
        <field-sort-custom-order field='seattle_city_council_district' />
        <field-sort-custom-order field='urban_village' />
        <field-sort-custom-order field='Calculation_1819172801032105986' />
        <field-sort-custom-order field='zipcode' />
        <field-sort-custom-order field='cost' />
        <field-sort-custom-order field='key' />
        <field-sort-custom-order field='adjusted_for_income' />
        <field-sort-custom-order field='normalized' />
        <field-sort-custom-order field='scaled' />
        <field-sort-custom-order field='Calculation_1819172801024282624' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affordability' type='sheet' worksheet='Affordability Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordability' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affordability' type='sheet' worksheet='Affordability Histogram' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordability' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affordability' type='sheet' worksheet='Affordability Neighborhoods' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordability' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affordability' type='sheet' worksheet='Affordability Urban Villages' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordability' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mode Choice' type='sheet' worksheet='Mode Index Neighborhoods' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mode Choice' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mode Choice' type='sheet' worksheet='Mode Choice Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mode Choice' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mode Choice' type='sheet' worksheet='Mode Choice Stats' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mode Choice' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mode Choice' type='sheet' worksheet='Mode Choice Histogram' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mode Choice' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Affordability Histogram'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column aggregation='None' datatype='integer' name='[Cost (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[cost]' peg='0' size='0.321' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cost]' derivation='Count' name='[cnt:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Cost (bin)]' derivation='None' name='[none:Cost (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[cnt:cost:qk]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Cost (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Affordability Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='Scaled_100' datatype='real' name='[Calculation_1819172801024282624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[scaled] * 100' />
            </column>
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[BLKGRP_STR]' derivation='None' name='[none:BLKGRP_STR:nk]' pivot='key' type='nominal' />
            <column caption='Scaled' datatype='real' name='[scaled]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1819172801024282624]' derivation='Sum' name='[sum:Calculation_1819172801024282624:qk]' pivot='key' type='quantitative' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Longitude (generated)]' field-type='quantitative' max='-13600313.591388131' min='-13635007.956226623' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Latitude (generated)]' field-type='quantitative' max='6064318.4906755844' min='6022479.2751931725' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801024282624:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801024282624:qk]' />
              <lod column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[clct:Geometry:nk]' />
              <lod column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:BLKGRP_STR:nk]' />
              <geometry column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[clct:Geometry:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Latitude (generated)]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Affordability Neighborhoods'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Filter Neighborhood Null' datatype='boolean' name='[Calculation_1819172801032802307]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='NOT ISNULL([neighborhood_long])' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1819172801032802307]' derivation='None' name='[none:Calculation_1819172801032802307:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighborhood_long]' derivation='None' name='[none:neighborhood_long:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]'>
            <groupfilter function='member' level='[none:Calculation_1819172801032802307:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]' value='232' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Affordability Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary Statistics&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[cost]' derivation='Median' name='[med:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Multiple Values]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Affordability Urban Villages'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[cost]' derivation='Median' name='[med:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1819172801032105986]' derivation='None' name='[none:Calculation_1819172801032105986:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]' direction='DESC' using='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]' value='232' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='670' />
                <format attr='maxwidth' value='670' />
                <format attr='minheight' value='40' />
                <format attr='maxheight' value='40' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='2' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#000000' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]</rows>
        <cols>([federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk] + [federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk])</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Mode Choice Histogram'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[mode_index]' derivation='Avg' name='[avg:mode_index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mode_index]' derivation='Count' name='[cnt:mode_index:qk]' pivot='key' type='quantitative' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Mode Index (bin):qk]' field-type='quantitative' max='0.90952500000000003' min='0.41177500000000006' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[cnt:mode_index:qk]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Mode Index (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Mode Index (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Mode Choice Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column caption='Mode Index Scaled100' datatype='real' name='[Calculation_1819172801128611846]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[mode_index_scaled]*100' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[BLKGRP_STR]' derivation='None' name='[none:BLKGRP_STR:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1819172801128611846]' derivation='Sum' name='[sum:Calculation_1819172801128611846:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mode_index]' derivation='Sum' name='[sum:mode_index:qk]' pivot='key' type='quantitative' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]'>
            <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Longitude (generated)]' field-type='quantitative' max='-13591088.784606533' min='-13641270.739656137' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Latitude (generated)]' field-type='quantitative' max='6067426.8225458078' min='6019303.6143700331' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801128611846:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801128611846:qk]' />
              <lod column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[clct:Geometry:nk]' />
              <lod column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:BLKGRP_STR:nk]' />
              <tooltip column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:mode_index:qk]' />
              <geometry column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[clct:Geometry:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Latitude (generated)]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Mode Choice Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary Statistics&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[mode_index_scaled]' derivation='Avg' name='[avg:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mode_index_scaled]' derivation='Median' name='[med:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]'>
            <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Multiple Values]' value='p0%' />
            <format attr='height' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]' value='240' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Mode Choice Urban Villages'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mode_index_scaled]' derivation='Avg' name='[avg:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[mode_index_scaled]' derivation='Median' name='[med:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1819172801032105986]' derivation='None' name='[none:Calculation_1819172801032105986:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]'>
            <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]' direction='DESC' using='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]' value='232' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='670' />
                <format attr='maxwidth' value='670' />
                <format attr='minheight' value='40' />
                <format attr='maxheight' value='40' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='2' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]</rows>
        <cols>([federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk] + [federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk])</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Mode Index Neighborhoods'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Filter Neighborhood Null' datatype='boolean' name='[Calculation_1819172801032802307]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='NOT ISNULL([neighborhood_long])' />
            </column>
            <column datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[mode_index_scaled]' derivation='Avg' name='[avg:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1819172801032802307]' derivation='None' name='[none:Calculation_1819172801032802307:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighborhood_long]' derivation='None' name='[none:neighborhood_long:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]'>
            <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]'>
            <groupfilter function='member' level='[none:Calculation_1819172801032802307:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]' value='232' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Affordability'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='94734' id='16' param='horz' type='layout-flow' w='95173' x='2412' y='4388'>
            <zone h='94734' id='13' param='horz' type='layout-flow' w='95173' x='2412' y='4388'>
              <zone h='94734' id='5' param='horz' type='layout-flow' w='95173' x='2412' y='4388'>
                <zone h='94734' id='3' type='layout-basic' w='95173' x='2412' y='4388'>
                  <zone h='85669' id='1' name='Affordability Map' show-title='false' w='42971' x='2412' y='4388'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9065' id='6' name='Affordability Map' pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801024282624:qk]' type='color' w='42971' x='2412' y='90057'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32712' id='9' name='Affordability Histogram' w='42244' x='55341' y='10318'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5930' id='10' name='Affordability Stats' show-title='false' w='42244' x='55341' y='4388'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='23600' id='11' name='Affordability Urban Villages' w='52202' x='45383' y='43030'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32492' id='14' name='Affordability Neighborhoods' w='52202' x='45383' y='66630'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32712' id='20' type='empty' w='9958' x='45383' y='10318'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5930' id='21' type='empty' w='9958' x='45383' y='4388'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='3510' id='17' type='empty' w='95173' x='2412' y='878'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98244' id='18' type='empty' w='1929' x='483' y='878'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98244' id='19' type='empty' w='1932' x='97585' y='878'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Mode Choice'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98244' id='30' param='horz' type='layout-flow' w='99034' x='483' y='878'>
            <zone h='98244' id='25' param='horz' type='layout-flow' w='99034' x='483' y='878'>
              <zone h='98244' id='23' type='layout-basic' w='99034' x='483' y='878'>
                <zone h='94734' id='16' param='horz' type='layout-flow' w='95170' x='2412' y='4388'>
                  <zone h='94734' id='13' param='horz' type='layout-flow' w='95170' x='2412' y='4388'>
                    <zone h='94734' id='5' param='horz' type='layout-flow' w='95170' x='2412' y='4388'>
                      <zone h='94734' id='3' type='layout-basic' w='95170' x='2412' y='4388'>
                        <zone h='3513' id='20' type='empty' w='47587' x='49995' y='95609'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='3515' id='21' type='empty' w='95170' x='2412' y='4388'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='87706' id='22' name='Mode Choice Map' show-title='false' w='47583' x='2412' y='7903'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='5050' id='27' name='Mode Choice Stats' show-title='false' w='44072' x='53510' y='7903'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='3513' id='26' name='Mode Choice Map' pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801128611846:qk]' show-title='false' type='color' w='47583' x='2412' y='95609'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='36992' id='28' name='Mode Choice Histogram' w='44072' x='53510' y='12953'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='12075' id='32' name='Mode Choice Urban Villages' w='44072' x='53510' y='49945'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='33589' id='34' name='Mode Index Neighborhoods' w='44072' x='53510' y='62020'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='38529' id='35' type='empty' w='3515' x='49995' y='57080'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='12404' id='36' type='empty' w='3515' x='49995' y='44676'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='27224' id='37' type='empty' w='3515' x='49995' y='17452'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='9549' id='38' type='empty' w='3515' x='49995' y='7903'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='3510' id='17' type='empty' w='95170' x='2412' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98244' id='18' type='empty' w='1929' x='483' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98244' id='19' type='empty' w='1935' x='97582' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Affordability Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801024282624:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09lp5xg06z8zjy11wyry712ss8ta].[none:key (BlockGroupGeocoded.csv):nk]</field>
            <field>[federated.09lp5xg06z8zjy11wyry712ss8ta].[none:key:nk]</field>
            <field>[federated.1amspho1o7bv7q1888a3t0h6g01t].[none:geometry:nk]</field>
            <field>[federated.1amspho1o7bv7q1888a3t0h6g01t].[none:key:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:BLKGRP_STR:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Affordability Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Affordability Neighborhoods'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801037238276:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Affordability Urban Villages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:urban_village:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Affordability Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Affordability'>
      <viewpoints>
        <viewpoint name='Affordability Histogram'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Affordability Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Affordability Neighborhoods'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801037238276:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
                    <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801037238276:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>5.5815669205769511</value>
                  <value>%null%</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Affordability Stats'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Affordability Urban Villages' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Mode Choice Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801128611846:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09lp5xg06z8zjy11wyry712ss8ta].[none:key (BlockGroupGeocoded.csv):nk]</field>
            <field>[federated.09lp5xg06z8zjy11wyry712ss8ta].[none:key:nk]</field>
            <field>[federated.1amspho1o7bv7q1888a3t0h6g01t].[none:geometry:nk]</field>
            <field>[federated.1amspho1o7bv7q1888a3t0h6g01t].[none:key:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:BLKGRP_STR:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mode Choice Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Mode Index (bin):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mode Index Neighborhoods'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801037238276:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mode Choice Urban Villages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:urban_village:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mode Choice Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='Mode Choice'>
      <viewpoints>
        <viewpoint name='Mode Choice Histogram'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mode Choice Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mode Choice Stats'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Mode Choice Urban Villages' />
        <viewpoint name='Mode Index Neighborhoods' />
      </viewpoints>
      <active id='22' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Affordability' width='192'>
      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
      vPe50nDrEAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Affordability Histogram' width='192'>
      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
      IsJX16IAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Affordability Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5Bt2XXf99v75Bs6vdfdL82bwQQMBoMZYEgkEiBFiqQBgsEAaVsiFUip
      iqblsl2yP+iLvumDvrhcLkmlUpVNk5IIBtiCmASCBAiCJBJJYADMYPK8eWFe7Nx944l7+8O+
      +9x9T99+ARyAmOFbVe9197nnnrjW2mv9VxLD4VBnWQaA1hqtNWEYopRCa01RFIRhCIBSqt5P
      CHHod/vT7uduc6mqKrTWBEGAEAIp5cy+WZYhhKDVahFF0aHv36XXhrIsYzweI6VEKYXneTUP
      3Oz9VlUFmPe8t7fH2toaUsp6X611fY6NjQ0WFhZIkmRmu3sNVVUdes+e59XHcnnI8uV4PGZl
      ZaXmzZuR3b+qqvpYB8M+Smt8pVR90KqqiOMYrTVlWSKEQClFWZb1A1BK1Tfr3pDWut7uPrh5
      Ny2EqB9iVVX1hdmL8zyPLMvI85wgCPA875Y3eZfunMIwZDweU5YlUsr6nQBUSqEx786+R09K
      BKLmgyzL8H2/5gWl1AzTVlWF7/ukaVoLgBCCsqrwJkrP8p39vlWG9vdqckwBVKrCkx77+/t0
      Op1DwnEUVVVFWZYz+0d+yDhLjQAAlGVJkiT1TTSZt6kF3AdzFNnPmhfpahL7AK0Q1g/b8yiK
      gjzPSZLkljd5l+6cpJSEYVivuC6Ns/GM4gNIopjAM+/Lvherwd13V1UVQRAQBAHdhQX2dndr
      haq1ZpiOaMctpMM/VohcfqqqimE6RmlVb0+CCCEEnufNWBo3o6IoZnhVCEEYBAS+j8zzHKVU
      zfzuTk1BOEribiYE7j7zbtJKpn1gVgt5nkdVVbd9k3fpm6MgCOrfZxST5xP4Pq14VvlY60BK
      ObNq28/su62qirIqyQsjXGmaMhgMAGhHCZ6U9TEmZ0ejyYqccZ5STM4BU16RUjIYDFhcXMTz
      POI4vuX9KaVmBNRaNFbR+1EU1RdtpUoIQVEUtUD4vj9zk81VwF0djtL6N6OjhEMIUWuhu/St
      Iftu7XsVQiCkQJfTdy/yiVnj7BeG4YypA1O73fUF9/f2Odg/qJnv7NmzdLvdWogsv3mexPNC
      EEV9LIDADyirCjCrju/79QpgzaWbkWv+uP6NNdf9po1vT66Uqk/WNHVcaXI/b64EdlvzQu2D
      LYoCz/Pqm50nQPMcobv02pEQYmblFUIghcSTHhpNfzhwdybPc1qtVv2erAnrOtCWuTzPw5OG
      l7rdLjs7O7WvYfnG8prlkSgIa74CiMOpc7yX5nQXuzVPuN87inzfR0pJURRUqkJNrq+oStAa
      3960S649Z382nSSX+eeRy8jzmFopRRiGVFVVrzY3O85d+taQEKJWRjB9977n4XseWkNZGQ06
      Go1oxUltmrrmjosMWaaUUtLpdNjY2GA8HhMEAWEYIqWsla77PXv+eQqvaWrleU4YhrdEgYQQ
      aAHDbAxaoxq87ZdlOWNmuBLsavYmQ7swmZXiefs1qSkM7iojhCDLspml9GZCdpdeG8rznF/7
      9EfJ/QyFZUSMyVNohJTIQJL3cvyOjxD2PQqqtOTS9T0qH6y9nlQeJ+9ZQiJAgFagqgo11Hzx
      yhcmqI6of6qRIuyE9U9PSMgFfmy0t041fuxTjiu6Sx1AICQkYcKPvPe/mvFj5pFdnSy5/OvH
      cTxj79sdXMz0KBNnnpRax+Yo273pP8zb1hSuu/StpU6ng4orRvHw0LtWIwUC/LZPOkqJutHM
      +ypkwY1yl3zqJrJUBhxfSmbeo9aawWhIe7HFRLQAgUSQZhlJN2bcT0naxrHNRjlhGCCkYLyb
      Ei/EDDeGJEGMqhRBN0APNformh99z4duagq14oT9CagihEAzFQKplCIvi5pxm5LiPgzXa3f3
      tbEE63HPM2eOWg3sMd0bcL121wG/S98aklJyZukeYHaFrt/xHBO5fl9zVmeldQ3e3NJ/E9P9
      wOG3Jh9aEwmzogAIKfjq/ld47uXnbnl/STRFjMTk/nzPQ/aGfQLfB2F2tN71UXBn0/xxVw13
      v/pkc7R883jWD7DCY1cQ66DdpW8tCSFYipYObZuSdv43NFVyszg+QEaFVocRvcZZsQxfn0VP
      BU+VUz5TmSLbzBG+cMyvyXcKWFlcueU9upZE/X0Nvu/5oKdSbaGp5sXP0+CudnYZ3UWI5t88
      M4LjriB2FZFS0m63bwvqukt/dRJCzlVsZtvk/VWQXs8ATbAcIAMJUnDKb0Mo6/2kD9lmTrDo
      47ePWsGNCaQnq4UQAq2gGlXIRCJ9gSoVMpDIUJKciI1ZXVDzqxACGQleuXaOUydO3fT+WkmL
      3qA/o8ArrfBDP6hvGmYDB65Q1PZTg3GBGsq8Va7Q7AOfNaFsMMwyfxiGd7X/t5H6We8mAMZE
      ICS0T7RAQLafMd5MCddDlk93iI5N0Rj7voteSbqVER0P3UOB0KhMUY0rtABdTZznExFFryRq
      ecjYI+8VhEshWmmqbMKTpUYXyphB0nzvhc3neb/+vpuaWoHvEwYheZ7XKR7awqCWuV0sOAzD
      GqefFwuwB7Da3tX4wCEzqikcLvODEaI8z2sTLI7ju+jPt4mUUmwMNsDBG3QFoA1z6gmTqgn2
      7knCxZByWBkXwGELzVSjBws+XiFJNzOi1XDyuVkn8p2CaNkwd66KicKdHENr/I6H3tdkWxmD
      Yc7zG9sEAyjaIDQsXo544LvWANgcGZi11WodeY9CCLqtNpnvm3OWBQhhBGCemdHUzvMQoKOC
      X81kOff4TV/BZiHarFPf94nj+C76822kC69e4EZ1DelPE9RGl0f4bZ9qXPHK9V2UBx18HliP
      p9ZAI+tXa41gqrS01ghfEB2PyLYyUNRJcNKTiEQihcBXimwzI1gKuPTKDvrKxHTWcOr4AlpC
      EQO5IovMufJqeu7Ii28LLAnD0KRBoEii2AR7bXgZmMnmbNI8hMhSM0gGzDi0zf3dY9iEqiiK
      iKKIOI7v2v3fRtJa8+cvfwkROlA0gqATEK2GlIOS8Z5CBaDzkmvn9kBASwYEUpJt50hfHkL+
      3Pc93shAa7KtnO599UmQFovv+Ii2YPeVPgd+QWl5WcNSL6fICpSv8EtBzmHzeiU6dltp0UVR
      1KCLVbC+Uoper0er1aoPcjOtXj+khsNkBcSiN26+RtN3AJMEFwRBnafh+z5Jchg7vhsI+9ZS
      WZZcH1xDtAVFv0RllTFFHH6OMoGqoKTi1cKkRtwXdVm6bwlVKkaXxiagVVqo0lkJBOhCEZ+J
      ZuBt4TXeqYbLgx5FNPvdV3SPOAXVUqjQb0Ckhjdawe1lC1tzPYqimk/9druN53mkaVqnRMNh
      KNP1A9yagNqjnmj8IAhmhKXpGzSl1zq/TTPJLdZot9t34wHfIirLklzlRjOOKsKVADTk+0W9
      zyMPreMnHvvXhrw03gPXzEETLAYzjq6r9JRSjG+khqm1Y0nMswjUrJKcKk5HWNy4wcRv6GeD
      28oLCkPjBFvmL8sSv9vtkiQJu7u7aK3p9/t0Op1DWtfV4M3VwDrBLpO6jG+Xx2ZekCtEbgXQ
      eDyuc9S11gyHQ+I4JgzDu6vBa0xxHNPxuxywh5DCQJuN2JcXS7zEo7Ma85aDY2jAV/ODZM1U
      GbtNCEHQ9RlfTSlHJV7sMbo2Bg3luMRPfNbjNqU0AbEqU4hQokqFn0gWA03geWRFiRdJAk8y
      vDjCj30u5Of5vU//Lv/1Bz5803v1PI8gCEjTtDaDfDB4/srKCru7u8RxPCMEzZXAdXDtkuLa
      VHY/mHWk51WLWWfKwp5gNFKapjWsan+maVrXLdyl15Yiv2H6NnXMZHPQ8VleMPumG9mc8Bio
      SoEGJdQU8pkcO1gI8JY8xjdSgm5AlVbmYwXtMy1ap827FUKQbmUESz7FfonsCsLYpF+nmxnx
      mskQzbYzwuUQ6UueufYMHyp+7JbQeZZltRIXFgWyJ7WauN1u0+v16HQ6M4lEhwMkhmFtbrhL
      rvC4ed9NzSClrBPirPZ397dxAetf3KXXlg56B2xmm+AbqLNWTrki28mpsgovkqZGANDSgB0z
      wjL5texXFP0CObHva46ojInsSQ9VGGugSisDjWoor4yN4NgDiomJZE8hJ8cr9cyCEy6H5HsF
      0fGQVA7Z3d1lfX39pvdr+a+uB6iqisFgYJaDSVpsEAQsLi7S7/dptVp18bpbtugude5qANNc
      Htcmm+cX2JXBOr+2vM4Nqt0KSbpL3zxprfnqi1+liis8JDIWlP2SoOsTLgWIwNjtqlSoQqP1
      5F0YK2VyEGuPQzkqSU7Gh1aQdMs0XSj2ClCCaCUkPyjqY+xuDznY2keIyVeFICwEb1paNde0
      U1HqkqpQ+Ik/zTDwBbqaVHYtBZy/dP6WAtBqtdja2qLVahkFbPPALeN5nlc7CYuLi4xGI9I0
      PZTW0FwJ5iE21glyt5VlyXA4ZDgcUlVVbWrlec54PK73tSWR7nHu0mtLu/u7fOnqF2qG9RcD
      xtdTeucG4IMMjO3vtz2CBR+/6xMsBASLAdIXU+WvYXRljBfLw+YTUBVG+6MF8XqEF3u1Q6yU
      IvcU/aikF5YchCUHQcHQq0CDTCTxiYj4ZEzrdFLnGNX85xmfxYskF29cvOU9h2FIFEXTakcX
      lvR9v3ZkrbnR7XYZDAZUVTUTaXMT1oBDqwFM4wOWgQeDAVJKut0uYLT79vY2CwsLdR2Am006
      L5foqNSKu3RndH3jOv/2t38ZlsYEkV+nByT3JVR7JV5ofTpNvlugxs4KAFSZwseUSRa9EhkI
      vIWpH1iNK8qhUWCjV1MQgmpUodAIT5D3CkQo0Nrg+36h0dZfECAKTTEq8SIPJVUtWKpQ6GJi
      kguNyhXlsMRre1zdv3JbaNCxY8fo9/um9tkyrXVikyQ5VO/peR69Xo/BYEC73TYnnzC1NY/m
      kTWD+v0+ABZytb8HQUBRFFy9epVutztjRtmbaJpcdwXgtaGXL77CN3bOo3c1ifBphyHtOMDz
      BL1eymrZpX3CpBAHCwHhYjBdzfXErJk4uTIRxCdMbXmlFQLI9nKS1RilFTtJxoWtAcFYUPQ0
      QgqWq5B7T8VI4bOy1ObU2grGnrLvVpPuZIhFgZYClDbJcuNqxnwKlwKKfonf8Rnlw9onvRkJ
      IYjjmJdeeskIgP1n7X27E1A7xUVRUBQF/X6/1uCuyTMvgGW1fpIkNQRlTR73+EtLSxwcHNRC
      4F6oPaZ1hm3Ox50Kwbwg3t9kevShR9CfhdxX5CLnQOcwmnwoIXsl575wFb81yRZGG/9UWnBD
      TxxgU0QvPOHGp4x9HUjyXsGwKqki8KRGeRrtmb5DQXtS4B5Jgo4/Y0UopRA9QbQ8i1CpQs3E
      HIQwqwkaxvmY/qDPsZVjt7z/MAx54IEH8C0umiTJXAhJCFOUYrvFtVoter0e7XZ7LuZrKU1T
      sixjYWGhhpzmpTfbbFOLNjV/NmMINj7gRo2b5MKr9uHleU6WZbUN+DddCHqDPmEh8EsPWQmC
      sdleBIrhkmYYVDx/aYvVdsvY2NsGxJDCPNNYSKL1GOE0zzKrw2xWcTkqGcsSKlBaUpWKZOTh
      6Wk9cDEqGF6bHCcQhMsBVOAHxlooR6UxpzSo/DAo4ice5bjCW/A4d+ncbQkAmBiIL6WsmfQo
      EkLQ7XYNDjsRll6vV29rMtNwOMTzPBYXF+uVwDV/msd2TRx7Y9YHaZpCAOPxmDzP6/wh99qV
      UvT7fYQQLCwsGEw5TRmPx3XA7m96t7lxOuaXPvubjNqTliS5ppJQxBrtC8TEsx3FJZeVSX0Q
      +WxXwHv8DksaU++bKsr+FKJWSqFzjfSMU+xJCZ5ASoEvQXiC0pvWkwTtwKBHwPhGiu/75Flu
      /Ia0ItvNSU6YjoV693BHwmAhIN3MCLo+56+8wnueeM9tPQchhHGCb0cbWkGxJw3DkOFwOLcG
      wJo8lqmTJLlpj0+tNa1Wi9FoVK9C9iat6dOUeptDVJblzMriClGapkRRVAc/atQhz//Gplvn
      ec6/+u1f4ms7L9XbykDjFxLtA9rk4gjM77Mli44pkimybZNCES4H5Lsl0WqIqhTS8xCyMseR
      AqFAe/Y41DW57vGmKRKT/UpTM1CKEr/to6VJe9Bao7SqVyLzZWt6wzAf3tHz8AeDAb7v18Uo
      SqkjMzItZj8ej9Fa0263D8GfzWBZEAQ3NVfch2Ah2fq+Gsd1t1sNXpYlvV6POI7rTmGW0Q8O
      DmYi1/b3oiopVUWn1f4bJQRZlvF/feKjfO7a12a2u89AVoJoJNCeIB6bjE2BgFLTynyOne0a
      rV5CcGzaVKvKFF4i8Zg0RegXJinOE0glqDD+bTKUlC1qZ1cIMYOceqGpH8j3clpnEsP8TtCt
      ShXZjdz87QTKqlFFNVb02/3bQoIs+RbOLMuy7tWZZdmRKQe+789NfbVMZ30Gu+12HNYgCOqG
      Szb41oRSZ16SU7bpdqGwPoPWug7oNQtz0iwly3MqVdFKWnh/AwRAKcVffuNJ/vNX/pBnDy6Y
      /J0jVn6hIY80ZTjpoYPGy8HXgnIRVu7rID3J8NURamSc4WJgYNKZHDEN6WZGlVckhURKD1lq
      +u0SFQnU2FkBHPM3Oh5NtzO7QoCx95P1+HAQtlQU+wX9To8bmzduWSJpybfOimU83/ex/UKt
      xr8ZNSFK+8DnYfhHXoTvU5YlcRwzGo1qBrfHstRcLq2j6zrLbhPWeY60EMIUQ2hFURZ44Ru3
      /brWmt29XT726d/mUxe+hEIjpabyDwc0rVlS8682GH84BF9J0kWIM3AjXcIzkGi4ElLul8ZB
      DWx7RUm8FtE7X3DyWJfjDyySH+Q89coNUNpUl1VqerxG3pBWChkf7ijY/HvWdwQZC5699Mzt
      C0AYhmxsbNQOq6WyLOc6is0OYi4j1hfvxBVsQtutyF09YNrMqGkG2fPYWoNWq8V4PK59DDeQ
      NrdIQ4MvPbSWs3bkG4hsTtXnn/ocX3zhC2RlxjsePkm6kSE7Hjdu9Lghx/W+rhlicX6hNNFI
      ULYEYiRAKyMcEyERnsBLpq3Mg4WA4asjOve3a5scID4eEkvjCwTdgEdOrqIFFPsF+a7hJSEF
      w1fHeG2JF0o0UI0UvecGBAu+yVDFyEg1LCm71QRqNaiR9GQdyAO4tHfptuNF/t7eHsePH58x
      H2zbwnkHcDX9Uduax7qVALi5QXYVsCuPdYJhNqnO5i5prWfSt+M4nkmga96D29W4yHPCN1jh
      fVmWPPnck3zu/J+yu7dLdDyiFZpnKUNJay3mVCBJtnx0Bdd6fYo2mOIScwwv19yztMj1coDy
      DXZv1fPuxT79NKclfJJT0147XuLhtyamr7NKeO0pGKKURlYgfYEWgng1qt9RtpODBC/0GG+n
      tM4k6EqT7eTEJ6er9OiyQuUVKCbF8mp6HRPBOzjYv23F69u8CNdx6HQ6RxagzHMujorSWoz/
      VuT2mgyCgOFwODNQwTVnLI7fZHBrymVZdqjLnTt0wa1xbgry653G4zH/6XP/HxfK88hE4I0l
      5aAkXJmN1sfLISeWlgFYuBbz8qvbIM2ziirJmx9cJ+z43Hh2iJPTiVKavYMx23HOahbR3kgB
      CDse2oOiXyASASXGzGmQLpVJtFsOoVkRJkBGAhEKo9XDydQgXzC4OKR9tmUQJV8QLE6V1vh6
      iiqUqUbTJi2jHM2W596MfOswWm3qIinzyGLobnlb01G1+f23Qn9givlbP8B+32VOq7XDMKw1
      vGv/21ylZiTR7Tptz+UKqvud1ztprfmNT/865/uvEK8ajRmuhIyvp2h8xKT/fpO8WFLGAi9T
      rOmY+x49jhdJqkxhmd+EBTRlVbEdmZLJfpaxvbkFWrNwxWcxiFl/YBFdaeSCJNuak7zoPmeN
      KYiZbC6HFdHJiHxQEHWmkd7kREy2nR9538FCQHojQ0hBflDgtSWL64u3rdzq7tAWsbGtpI+C
      kmw8wGpbi7645glw2zi7O6wApjEGm/Lg3kgcx3UQzHYZtg67y9hFUcygP1ZgmlNF7IrwRgiK
      XbtxjZduvEj7bOvwy7epDM3NDq5+ptPlxFuX69z76f+a+quizv80TrNnjrErcjw8TrW8Og2i
      SivSjazO8xdCorKKcGmivQW0Tk0BlnwvryPJ480MGRhN78WyrjU273M2Fd9LJMIThCsh4UpA
      vl+y19vjlYvnePjBt9zyufnWvLABIjtO5mYDCKxp4w5XGI1G5Hlef367WtUy6/QGTZ6GTcG2
      jG1XJlvZb3/CdJ6B25/I1ezzTDP7vTcCDYYDPvbl3yQ6FRmbeXUWSqx/t5H0nYzzl3bQ0lRw
      Fb4izUouv7SLhWO00vgjTVSALCEeCvwMikTUeUGyhHAoqLRAyYrBjTHdUyZj2O/4xGsRlZqu
      1tW4QmWHUb2yX5qGWGshCIiOhwQdn3w3p8wUlWPSuFyltSbfyYnXo7rIPo4l6bWMjc3N2xcA
      O60jy7KasW+HOVyo0501ZaPAt0OWkZs2uTutpt1u406y0VofasNit1uNblcWF0lyHXNrPr0R
      WrCMx2N66gAZCopSHSnwdpMqNb2wBAHKM1HVvSwjLdXMM4kiyFpTwVESwlSgpMArNaoSZC1F
      KTWFV9HeH9UCYDrQGt4YX01p39M6VD+s0gl0PahonTWrQZlVSF9MBGEiyM7Fq1JROGkXVaoQ
      ngPFFxo8+MPnPomOFN/3xPff9B0f+mSeM3s75ArNnTBVMwfIUrvdpt/v1xmg/X6f8Xg88z2X
      lFJ18Mvdp5ln5F6fLcV8vdPq8VXeefxdaG3QmHJUTWMmk33c+y/zo51Ed9W1xS7276KlKSJF
      FZhjydIIhYvDzwMX6mcspvuAYd5yXOF3J0iR0lTDqkaT3OuuYVopkMHkny+IjoWkmybVJd8r
      KAcVyXpMfDriU8/+Ic+8+MxNn53Y39/XTabXWrO8vHzTL84ji8TcCWPZwgTrQ7i+h01sc5P1
      3B6lrhOe53mdVQrUjn1TGK3/oLVJ5bidhkqvB8qyjP/jv/zvFO2C9Nq0gi/fKwiXA4phyfX9
      PjI0Dm6RVVShRisbBzDceaLbIewG7FwfMKScpucDfg6VbwpXhBZoodFolryI1nJEhIdUZpaA
      Vpq0X7BXpsgSvJbPgheSdEKTJr2fs/jwAsWw5ODSgHghoMorKMz3VamI1iKkL+i90CdYNLMC
      8v1ixo9QuTZOe1EhQ1kXzIPJJ1rZWeYX/s7/QBwfkdlgJUxKObfC607odmFPl1xzpcncMPUH
      kiSZmS3lXl9zwo2rPdxkvSa69EbqNRSGIR2vyx67JKeTuuuakILkZMxoI2U3Kya5+xAAecdA
      m1Ia51ZW0F1NaJ9I2D0YMfZnNXk0FOSxTWybav1OHLP2oGmvPro2nmZ2XuyzNcwodUmgApLQ
      Z3mC6SulGNwYUY5KBkXO4vqkP9VWRrwaoUpFvleYaPRSSHwiQvrG4U1OzE6HLPolQgnCbuCk
      VWjwBbvxFk997t/x1vf8I7oLyzPvX4hJNqi1m63jaxny2+Ek2jygZmjeMnkcxxwcHNSVZ/Zz
      146vqmqmig2mOUQW3rXfsedwI8xvBKqqirw0rcsFh+s0pthNnW8AFXVaAmCCS0zegdIIW3ro
      U9vgfglazR5XaKcdvpg9jR2F5CopIQRKa75xfRMtYNVzki9tgpsniI6bYGw2KaoH6uZZLllw
      qrYc0GibbLcYsDXc4Npzv0rhnUIInyq9QeB7xMe/Z9oWxW1DYlGWb4cAHLL1XBt08hI7nQ79
      fp/FxSm+a6/NTpN3YwDusVxyg2ZCiHpleb1TVVXkec72lR3ajyT1cygOilnYxKH7FpeIlkOK
      XoGXeHihhy51nRy42mlzemkZVSiuXzmgDCHQcOrMEsKfPWjZL6dZt0qhlUb6km43QhxoPN80
      Py5KZyCewESYG4rIfXeVqoypBbVgeLGk90Ifv+sjPFNkP5nf6lyRABRCSATwagrv7+4g5a4x
      9UxVL/noP01NIGsi1CnDRXFbg4hfa3IZ2XVikySZSZGwwtrsPWo/c49lt9m/rY/yRkCAgLph
      2Fp3jSGm/to4leAvTBofA6tVjNQSoSA5HtI6kZD6Er/j48ceKlfkBwYG9xOPZDVC5YozwTLx
      akS6mRHawRgT0lpTjQ1jV7milbbRV6A6UeGFEqlAC5MWf6m3z/HtDtFxMx20LEqQgqwo2Llk
      iphCNz9L45YIA6YXkMo0ycmYwcUh6WaGyhSy7WYGTB1nIQTbfYVS4MlZwQ0DMS2Kb9rTNsD1
      rTYTXLjT/mumP9vgWJ7nhxplWe0/71pdp9yF96ywvBEGcLj3PcpH6ErXqQDlsESWwpQjZpoH
      3raG9CVVXpHvFTc77FRxuEyjYXwtPbQC6MI8/3w75xc+9Iu0W23+ze/8a+holNAEI5O5prTH
      lW9sc/LRFcggUj5oQZaXvNjfRQjBA8EC8cCpA54E1YpAIIuJyZspimFBtBohgMqvKFKTAiHE
      ZEYZ4PUyYiH4gfsCvAlaZa0z+1M2taRbQHK74eTXgtyEt3nJb2CgUVuFZmMXllxzzU14s/g/
      TH2AqqreMG3YbdeOVy+/ykD2ybYyRIBxdJd8vMhDSPO3pbrTmn2/N3nN5aia+Tzo+gTdwPQH
      6gZ4bQ88yCdt0tutNmura3zonR/C2w64Xy7TkSFVCDqWbLdznr26xSs3dkEZ+z1rOcqrAl2a
      f+n1zOQVVaYWWOea9HpGuOijc43ONSo33SJELtC5YnwjM5MtM80xrfnZt8U8eMpF+vREQAyC
      NQODWBiy3vXbIACWWa1T6wavmj9hGh+wtQtN+NZtqAXz4wye570h4E/3XX3uK58jWAoo+6bR
      bJOqsTPMgqnCm0e1Aqw0Rb+YRV08UQuTnqRH+/sByekWj559lOPHjgPwPe/4Xr7rke9m/2Cf
      f/PJf81Lm1sM/Yoq1rTGoHyoQtN8a6Z+JJI1zFkODeSpK43XkviJTzkuTTKdc/jgDR8AACAA
      SURBVK1lYd53sBSgSm262vkCsVvRTSbpMHOcZ2BqAtkH8u1GRoQQdd1ulmW33L+pzd2Irr1+
      N1PU/dyaRG8UzW8F/tKrl3hm6+n6s/GNtP5dVxrpCcphRTbMUVKQjQrGo5zFvKQaVLTSkDKU
      UEGZVkBO2a/IwhxdTBpjlYpqrJCFmkxrNCkRZVrygXf/KI889Mihrh9RFBGFEbItWI0S1N6Q
      sTOIIx4K8AxiU8fKvKYza7JIhfTcTdPnkCqy3ZwgsgPXJ7sJgWJWidemzzTFyTjBTWY5CkX5
      VlEQBGRZNhNAm3cN1uzpdrv0er2ZmoBmP1I3xcPCcE2U6PVMlvmFEHz1wpPkBwV+7NO5vzUz
      fGJ8IyVai4iAV5/ZZlOllL6GEK4fpESp4PF7T5pVY+o/onI1E1RKNzLa9yYzx1ZKUd2oOL1+
      mvW1wz05n3r2Kf6f3/2PpHHOdplSxIows8UrgjzREAhUHYyDytVNNnWj0HWnuiZLlv2S5FiM
      F8mZ79id69iPE9muIVoxSYWwjNF0Pr9dAmCL8psj7ZvMb/e10OhoNJoxA+bBnvbemgl3r3ey
      cY6vPvVVnt96Fr/tIUNhgkeeqP/ZZla2O4PMNWE6TU2Y5IlOU6UFh7TszShIA87ec/ZQEFRr
      zW/84cd5Jd7nih6SehWlrxnHFbI0J9JMMHuhTT2CBKVnR/QaR5i62OWQBKAR0wmt5vPatXEd
      eF033p3eu8B3Sx+bwa9vRTDMBt7cjFGb8FZVFb1ebwaidDV50+m19ctxHM9kgdpjNv0He7w3
      wgpgkxf/6NynqLoV3QVTFTfeSBlcHBIuhaZbwrgy8QANpdYULUj6EKSCKgQqzaVzu3SDgMWV
      ae/X/GAiSBhbvzgozKRISZ1eXaUV97cfmAuXP/3801zubxB5UxzfKwUFmiLUSBTJwLRi8ZWk
      3Y3QaGSmGV01OV/5foFWmmJvmvlb9ErTH1QZG0YViipVqFIjA0HZK6kW/UmahOJTzxoFebYj
      uP90xLnLGWvLPisLnjGB7ITGJiT4rWKUNE3rAJR9cHb1aWL6VlhsM6smxXFMr9eb6TnU9Acs
      NZ3qNwIlScLffuiH+cTV36sVW7Iek+2YGgkv8BjlBc9f2EULCMegQxh3NMEI8rbxJcZyjK8l
      6+vTNOqqrGacXyEnkVnHBMoGOdcGV7l64ypnTp6pt9/YvMFv/+VvcdAq0A5kGo0EY9+MWY1y
      QdbWqEiwlHrc/7gZeTq6NqZ1aloN2DqdMGJM64yJ/6SbJlWiHFVopQi6wXT7WkS+VxAs+jXS
      9YxSZPs5T+8I/L2CSkh+wivptCQvXEyRUsq6SW2TXsuBFEqpmVbrLlKT5znD4RDbo8ilqqpq
      rL9ZeG/9Adt1WohpKnazIN5FGt4ITrClx9/yOEk/QeWz9+u3fYK2jwwlpa9RPlMbX9fWT/2z
      2XbczQLVykCGWmmjcW02qdJUUcXvPPlb9fu8euMqv/YXv0ruzQc03CHVAoPZK62pLALpZIvW
      WRtCN44wuQm7ZWLjA4TLwQzMm+3lBEmAdyyElRBvOeQTF0s+9sUhjz/YmlaEWSH4VmhIpRTD
      4bAehN2s2bXoTxPbd5n+qPx9d7qM+5nL7K5jrbV+3adBa63Z3Nxgf+sCcavLB976QT76xx/F
      TzyChYBqWOG1pz5P/SxKiMam9aGfA9L06zT5Opp8p7AnoBpW07+BwVbKS1d2UCjCSrJ2vIPK
      FYvrLbbY5OOf/TjDcsD1/BoFOQLBY2traA07e0N2+2MEsDQMOHvvCqUsOZftm4nvmAZcVhia
      nd/knHflRR7jG2OC7vzu5Fprgl7Go55CqoKX9wTZyiQRbz3h/QuKnWFrigIBtRDYRrivxQpg
      U5qVUjNNtdwEtXkpzjANWNmotP1e01GO43imdbv7ENwosz22G2t4PZHWmlcvPs/+5c+wkuxy
      siO4csXn/if+Z5ZbS5Qnjc0so4B8t2DUG5N0fN7qraCBrdGArSRDatPJOWuZbFDQ6ImJY6ly
      ujBrrUnKkGKzTy4VYxQHo31kqnjHiRZ48FzxDALwYo/sSl6bLAD7MiPFvLcEWH5Tl/F2Bq8e
      TDJRpyuC7USntLuiNd6TxkCxgWsRzD4ncZDxU2cCTq0Yi2LrmZRrmQKtua8oWFlYpnXv3+NQ
      xMTF0F8LBrEmj8Xhm2iMXTpdh1gIUfslVmM3g3QuuQ2w5vUIdc9pIdHXmwCMx2Neee6POSa+
      wgNrthW55vhCTr9/wPc/9gP8wcu/X0OXfuIzLEb14DmA3QPT/1xrjVdI/FSTh46p43BRlVZk
      Tp2uLAXznz5MQ2uTv4JGqgTTuI0vJ4FKrZGlRguBqJhEdBWqUnXKgsoVxaA0qQ8Do4yrbGI9
      TIJw9rpVrtj7+gHtB1oEZcVPnfI5uewMbhxX/PCiZGun4LGzMeHJ/45jx0/NCkATNfmrmkJZ
      ltVmFY4QuExpmdFdEWAa4rc/3WCWGwG2+7daLfI8p9Pp1NfeRJvsdossvR6iwVbr9179L5w5
      NkRKMHXm5p4OhprTSyu8Z3Wdp595msuXLhkGFKZLWtVXhH5AqaYQtxKadME0vvJSgRaQy5Jr
      L+1hIZu2DKmGFcGSj/R90l6BEg0QYYJKTmSkNlXKQcmoHJtr8ASDjTFFVUyUWDxpZGDQH5TE
      q4RJX0CjRor0emZSHwqNLhVeLMl7OdIWyNvTT+RA5QYJCpcDso2Un3k05p7VYIZ/f/KxhCQS
      DI7HqJWfZu3kvcAkEuySdVDn9QC9E7LjTrXWjLOUvCzwpEcrmrZd0VrXAuJeR57nM9VcLvPb
      v12hsUEhO8Rjno3vfsdFvr7TV4GtzRtUGx/n7KprjhpvViBI05LPfvJXWD39dh5/85tZuNLl
      ub3nCM8EdOnygYc/yPqxE1y7eo1/f/FjXGdkVkEUgeeRJhotjQDslaYVutaah5Il4tDMCBNS
      4Mce4sA4rTOKcZ59Hnu0Tid1q8Rgz6+Hb7hFSXmkIdRUYAZ0M5keeSyiGJakGylVqvASD+lL
      /JZJgc62chBmWoxSimwvp/uQaXRc9gpa8awfKYQgjgTX9xK6Zz/CqdMP1u/db0Z/3V46tmnu
      nVROWaYejUZTrd6w3y0T2uxOKwxug1sb2W36BVYYDgVLMD7MaDSqC+jnCXCNJ0+uMUmS71hU
      aGvzBtuvfJxTi6UTwZxluL1eyfH4CnsXL+F5gu+9r8WZ5Yf40lMbrJ89STEq0cuaxx9/nH+2
      vsa/+I3/k1f1zjSwxNErvZAmIS1cDfAjyULqowKo8wgKTbaVU/ZnwYfxTkZWlPXfXgmdsek+
      7isYX88gE0RDAZkpshldNwMSTaZnaVovts2AvtGlMa03mYbJYTdALprzDS+NGF8Z0z41baYs
      So1NYNVaMxjDQfUAXuctnP2uRw+VRoqdnR3tOqAWj7dmRhRFM8PxjqKqqmZ6BVnzRAjBOM9M
      I1opaUUG4w2C4JADDIdreW0wzg10uVmizZfX6/XqOQYWQm12km4Ku02s+05YDbTWDIdDLr7w
      Wbrqqyx1nPXezeOdJLUI7GoKz10Y89b7EwSweRBxofcopfK59+xZzt57H61Wi739Pf70Lz7H
      rz/zScqsIA0qlDgcKX8oWWL1gUWqoUk1DhZ8it2S6Fho0qE1pHspfuTjtZw+rgiuvLjD5Wo4
      mQ0sJ/XDoFRFeKApliTh2ATilG+K4ZNUkrY0Z/0OywsxycmE0dURrdMto+lzRbgUzvh5WS9H
      wAwS1N3L+MePT+NCV9J38pZ3fOjId1ur9qO0we0yhZSSXq83Y7tPNevssa2g2ePbFcE+RHdV
      sqWa9rtNe74JcUZRVBe+u+e0x3VjEHaVGAwGdLvdv9Ya4fF4zMXzL1L0nicqX+LssUYftznM
      D9QNr8xzmPpwa4sZ7ehJslzz5W/8Kf/5hTbfffxdfOD7PsCP/9CH+OrGC3zj6ssEpaSIDtdK
      uOetBmbYRbabm5NPVGzeL6hChT/y0MJMkvdir16k6iwCe91C1D8FgkpOBl9bnF9M7sOq8Mk9
      eolHOTARYFuLUBUV6bWUhYe7s9c7YbkbOyV5oZBLNwc7ah+gmUbQND1uRUKYznKDwaD+2/6s
      jz1hQle728/dplbN7zVreV1Bal5rFEX0+/3aDGqaSk0T6jvF/CmKnKL/PGvRS7SXpmW61sE0
      3GG2SWlgQqv5Z5+L4bay0nz+5TGRL7hRgF5W/GX/z3n6177OL/z4L/LPfvp/5F9+9F9xZfMa
      SmmGcUkhp02K7ZhTIcBf9ImWQlSpCJdNVwelFXgaL/bxYomuNOlGRnIqNpi+Y35KLSZwKySp
      xD8QVJ4mGppb8pRksRVRKk1QmszV8Y2UclQyujaq83t6L/eJjkUmDUJAuBAyvpFyXCkWE4kQ
      EOSKb5zTdFqSotR0vJtbL0eqPJtsdScMYgdSuAXrQK2hNBwyeVxGtM63pVutRu45XPOo2QJx
      XgzA/SwMw7/2LnELC4s89p6/y/WrF7h06ZOcWtjE8+xzctW/ZXg5/UyYSCrAcKz5k4spg7Hi
      iu8TtAMwHcuRgSBbzfijr3+aD7//I/zLX/zn7O/v0+/3ieOYT3z5j/j4859BSGHm8xYVRa+s
      yypRkG3nCE9Q5SbYJpgULqEQGAUX4JEMnblt/qSjnNJoz7RTCXPJYEUhBCyMPe59x6pzb+a+
      g+M+0rOBOkHRMXn+gTM1RgjBE3nKd90fYmuALZ987cURy+2TN33uflObNjXqnTCGlLLu32lJ
      a00YBPieX1+wpeaq436nadrY39193Kiym7hnO1vY1Waev2DvLYqiI1vBf7tJCMGpM/dz4tQ/
      4ZUXvwz7n2V1YVwDLVprpDB5+HaQnU2VFAIu7ZR8PvXIFmLyosBrTRtOaetDAM8PnuV7N97H
      6dOn66npKysr/MMP/h0qrfitlz5LL8s4vrCADDzUpJhdSIiORQhfMLxiYJ3r5/bpjTNSUSER
      cA28HDKnrZSXQdQ3l1t4pgyskoq4by4/1LM8Ud+rNDMclFnm8Bc88s2Csm+cZNsC0nzPMH9Z
      wY2dnJUFn2HqcWICdx5F9YgkN+XAZZY7NRHiOJ5Bd2rtKw+jNs363nnxh6bAuA/HvUYrBPPy
      fZrDNqQ03attg93vNJJS8tAj72Fr4wwHl/7v2hGuH4XGKRbX2I5rlz2fbMH4Pl5b8sDWkBPH
      DB6uhOBJ5aPaft36RGszPvaX/99fZvnkEmM54nvvfz9lb8yF8bnZFdiaYRPq91I2LwxIW5oq
      NmkWto1QM3VBasi6Jurc3RZUoQSpJ+1WmGmzYu6zmdqiUdq4CtFaiMoU6eZsrpEUgsGo4uVX
      U164lPHWN8Xc+9D7bgng+LMnmgag3Iu5E7ImhQuDNnN0mjCm7exmMz6bnzcFw5oythcQzJYH
      uuaba/pIKesJ9d8JGv9WtLp+mpc230elPo9nKjeMzpfOUGrqPLAZgFSGktXVkPc8GKG0xpOS
      49dyPtErIPD48gt/yQtXF0jHKfvhLqPItKH8va/9Dn/3XT9L+KLkKpcRgaY8qKhGY4qDEhkI
      8ARFWTGOFWFpZv4qqXl47TjJasTmywfcGA5rIfVKM4IVoAg0eVeT7EERGcFx48hNi8SSRYAr
      pWBHsDr00VtjqkozCBQ7BwXnLue8+9EWi90AsfBe3vz2H73lM/abNbRHIS53QpbBmuWITaav
      b05MC9jtzTcF0zJ4Ewq153Cv2/d9xuNxjfELIeopkn/dtv6d0oOP/hAvfn3IevA1ru8UM9FX
      yxTmd0E+nm0cqxwPT2vN/WsBj+6OeS72+Ub5FGLfDJcb3hgSri5R+RXeis/FvQt8+Ps/whef
      +gJPHnyZ+IQZLJ6XQ752/poxW8YCIhPMqnyNn5uePV7ssbiScPL0Sn3e7Qt9zg/2UQICPGQu
      kVoRjozT67UO127U4EipkD2ParGCClaKY/zMT/ws1y6/QqSvE5bnWG6N2OtXPP5QAgiCpSd4
      y3f92G3xr9/E16WUpGla28ffDNliFRdudOkobW2pGRmeh+TY35vncH9aQex0Oq87xrckpeTh
      d/wkX/hMj5Z6nvWVYBKNhRcvpTx0T2yQIIBJwpkA0q2MCy1B8LKmm0heOlA8f71AroSQ54Qr
      k3YygEzMs7Hv7C/3/5wrf3KFD7zrg8QXEj5/9c+QS4AQ6FgaTD8z/kilNVQa5Ql2rg05szpb
      HCOEYKEb8y75MK1Wi3e+93Eevv8hPv7F3+cTFz/PGEga/lntCCvNSu84YiQoBiUf/P4PsL52
      guWlZVaPG6f5YH+bq8/+KmeP9VEarg7fzAOP//htK2/fDsOwZoItTYzj+JvummbhSFuy2Iw2
      uzdq7f+jMPjmUuiaR/b7rrBZnN86yHZluBNI9zuNpJS8+fEfYeeFV1jqTv2ZY4sVx5YC5CSq
      GyQeasF2VCjZPZnwx5dHhGs+3kIAfU28GjG+PjYriRRID+K1iPGNDBmaae6yI7kSvcq/+6N/
      i9zzuGf5LAc7+5SLFYuvegy9EqkEpap4dH2VIAkQwlRrgcnNSTezOmfnbOde/vu/94tcu3aN
      3/zD3+DY6jL/5MM/z/6vHvCV7efZqcZ0zh+wdt8CQoqZYNfB6ID3Pvg9/MD7fmCuEltYPMbV
      YB2t+9zY9XnTOz9CeAeTP2UQBPi+j+/7NdO/Fs6hPUazR48li8I0TSOYToB0ndbminCzlGZ3
      my2zHAwGf6Xcpr9uWl8/SRU9PPOs7jsVceGqdQbFTOCs/l0KvNAzdvbksYTHwroxlpjYUsl6
      ROtUQrQakW8W5FumDDGPM14NLxLLmFP5aQgkeazJWiZu4y95hCsB4YqpFhteNuhQvBYRr0ec
      Wj3Fz/zIz6K15uUrL7Ett/iDF36f0WjEP/+5/5V/8RP/FCEl50f7vPLcJsWonLmueCni4Qcf
      PnIFF0LwwNt/mmsHx1hslexsXb6j5yotbm7NIDtyqN/vs7u7O3cQxe1QE193xxjVNwgz7dRd
      h7ZZNON+xwqFC3NasqtZswuEnYX8ehaCxZPvZpxN2TwKBFldCabroNjkT7u1nqhoq62EJ9CT
      rEq73ZIZf+qRnIxpnUpI1hP8wGNvaYeDeJ8fe+xv8WD3DJWvCbwAvW8S2LSG9tkWQduvawF0
      CR985EN0O12uX7/On776JwgJWZTyya/8PgBve+gRfuHd/w0hAVsi47mXN0j3p4U4x+Tq3I4T
      LkVRhOi+nSTS9HdeuqNnWneFcKOu1qwA2NvbO6Shb5fcjs32n9Xubn5/0/FuBrGOcpjd67Xk
      oljuCgST5KjB4Ju+n79uWl07zd7g8Mpc28zO35biY2Zs0pu3R3z/Erw7y3hXliO2MvrnBqQb
      GcX+bDmsrqbpFUIYyNXzPPJWxos8y2Nn7uF7O28lqCTvO/t9POa/g+TVFumV3FR42QW40rRi
      A0Pu7O9QhWXtvb84ep6XLryElJIf/74P8L/94D/ilLdCKTS714aooUYfwA++8wcJ/Gk9+LxB
      fwBn7ns719LHOHH2nXf0TH2bfOaSCx9qrdnb22NxcfGQKXIrssxuh1c0mb5ZCzAb0ucQk8+L
      E7jkfq+ZGerGHixC9HrzCYqiAK149UbBqdWAwJcTRMjAokvjgsFVxY6QqLQi282JVszcrbcv
      epxZm/gHlebrWxU6kkRrEexAtpubOQKXxxT9Ai0mbdZzM9G9nKBL1ajilfgc7bjDP/2Rn+eJ
      tz9Bq9VCKcXV61f5D5/4FarlkkopHkseZ31tnc3tTT57/jOmqa6e+GqB4GsXn+Th+x9GCMH9
      6/fw6NIptncjimGOvObx5je9mZNrJ7l0+RKj0YiTJ07y1Ree5NEHHmN15fiMYkxaHR5+4iN3
      /E795pC6Zp6OtdP39/fr4NGdRE7tWFMXbbIm17waXnfFaFKT8ZtF8jY2IITJS7JzBez57L8s
      y257iuV3Epk4ieTaVsnBQLHU9djeL7l0PeNgUPHjT3T42kbJ1yYmZbZlhhae6OUsnZ46htd2
      CtLFAPJphFdVmnQzM70+fQz0KSVqVFGVinDBIGrj6ynJyRitFV+49DlOnDjB/ffdj5SSe07f
      w9//0D/kPz7579Gh5vTaaYQQvHDpBfZ9U2yTbmWowijB8VJav+8szxh0+8QnAtTVEk4rni+e
      pfexHnGUsLayxpef+jIX/HP82ZN/xg899sO87W1vI0mSGnX8ZkjabhCWIW2KMkwjrjZWYLWn
      nQZ5uy/Npie7Gr6p+V0NPy8Q14wTuOQKgLX3tdZ1QM7u4w7kfi07Xny7KMtSfE+z0JY8en/M
      YscjjjyWF3w6LY/FjlPOikkg05Xmcl/xa18ZkRfm3r90o0K2PMeYEETHI+O4Ho8cn6AGV+s9
      3XfVEz3+w5d+hb945i/qd3Lfmfv4B9/9c3zw9I/yzkffhdaalp9gGzlIKWmdTmidThAxbG9v
      Gwuju8i7l95LPszRqEnrdLghr9Nd6LKZb6C7ChEKTq6f5L777mN/f58rV67w8ssvc/78eXq9
      3lxQ5WbkNzF7l1xn0vf9un3hnZIblQVmbPQgCA45woeigELMONOuD+Bep03Gsy/K1jSkaWoc
      pcYq8HqJCFtaWFjkM+cjfuDtGs8TLHY8WpFkoe2x0D6MkggJ2XaGTjyGx0I+/1LKQ6s+V0PH
      pta6TrGoW6FrkLUSUnjSm6u4ZGhal//Ry5/ikXsfYXFhEYA3nXkTbzrzJsDUhP/Spz/GftFD
      CsFqklCWJcWg4BXvHN948WlOHT/NC5ef56XdlwhaIeGpkHQrI1mPKZcqvrr7JJ1Bl1E0hK5m
      PT7BufPn2B3tcvrUKfqjPlu7W7z5xMO0khZRFNFut+l0OjPBz3nvup4U7+7QjMgCdZGKO5/3
      dsk1ddy8Hdcudx3hJurj7j8vTaKJArnfsc2zbKcL+508z8myrBaM1wNJKXn7O38QWf7BUQVi
      dcmikIJoNaIcmhm8MpRc2dO8erVCrPhoix7ZRFNl+v4U/XICm05JCEfzM12N/cQn3x+jliu+
      9OwX+eD3HE49ePb557iq9yhD8/7W446xNPqgqpI/8/6EhZ1Ftne2iU9FU16xl+eB9hXDqI9I
      JaPemK+GT6KWKtRI8ZyIGV1JkYEgLVL+/of+AXmeMxgM2NjYqEf/ttvt+p9VfEKI2RFJtg7Y
      hRabdraFSu+UcZoaxP37VjW6zSCa66cAhwrcmwLk3pebF2Qj3q+nQRn3v/ldvPT1a5wQT+F7
      k+egoTcwUGQ6Mk6rmnBQupXRvtcgMbvr0ynyWoHnm1Rjr2XKDkUo8GIPL5IUA6MUTVt106tH
      5ZrRbk5RKnwhEVKY1IuT8PXrX+MHs799KHtgeXmZIBN4CJQGnZgCdr/rkW/n5AcF+919RNCY
      2GPfIQKv65GnOdHZkLZIMKngkjzNJ6uWJjmZsDG4gdaaTqdDp9OZ4VfbeG1zc7NWjO1222SD
      WrhwHhrjmiMudm8ZtigKbH/Ro5xj17xqCpb9/VbRWvca5uH+br5Rc4WyQ7xbrdah4vrhcEir
      1XrdmENSSh56+09y7qmS9eg5zqwFfP3FMSeP+whgNdA8lyoIjB/gt3xGV8bExyK8luNbSSME
      Qpjc//BYaObzVpp0KyVejQHNxfM7DELTxiTIBKMFDQN4/NgqrRMJYk9QjkqI4RsvPs07H3/X
      zPUWeUEZahQgCyivlajlCi/wCRdDRGgadQlPkO/lBEsT7RyYDhDaNn0OBFWqCFrGVK60qlc/
      264x8ZMZE91qeZsHduzYsdr/G4/HDIfD6ZRItz2iy2RHaeR+v38oyLW4uHikj+CmR7uwpmti
      uZCs/axp77ufwaz2n2e6Nc/jpmbYuoHBYECr1XrdmEOe5/Hg23+Kl5+OWQ2f5ImHp4hW4MPn
      Lk9ngwULPsWgQJcN4KDSyGCqeKKVkHw3n5hNHsHk+1UAeTBRWpXzbCbnixZDdl44YKfI6O59
      +ZAAfPTXP4rumFYsBWaWl7/g44c+vvLItnL8tQAP0Jki3ciIjhthValCJEbD69rmmxPsU2aY
      x6Do14ruKLIQuQVnfNfBtAXk9iHDVHu7ufb2QDbXxjLpUTk9bj6Om+Jg/3Y1utue0d1nnl9g
      r68oihr5sddqP7PXpZSZJN90xq15NBqNKIqihtW+0wXB8zze8sRP8Mrzy7TGn6E7eefdtofX
      G6MliO5EmUhBvlvgdd05SZOA14S01lTpZGV0zmM7cVqTxOFDcxghkC3Jbj/lue3zh9LpP/KT
      HyZ6+hOc277OdjnCjyS2u7RCIzxQpTJaPBSEqwHZToautJn7OzkHpUaGs7UqqjTXGx83A/y8
      4vBg9FtRza3ugAm7KrhM0IQsm75Bs7e/S/NSFuz5XHizWRg/7zjuDAMrgGEY1sxt4xZ2P4su
      WcmXUpLmGb405xqMhrSSFnIiKNZhtujBd7ogPPDI+7lycZkb13+X9aWc0Bf8L+9N+OTzKecm
      r1eGEhk1ilQCWSevwaS5VFYxujKmHFaMKlPVpyunr76mbqYLkB0UyECQdELYh6Eaz1TmATzx
      xBOk4Rh1+VOET2+b7tWbOclpY2KJRFIOKjPWCOP7Jmsx6fZswYsdomEuZRKeFiZjFE9QZRXt
      47OtMW+HZBNnb9rilnldRmpq41tJnV1lXKGx3R7sw7LntNp6Htbv/m6FtGnTu6uMvXa3PFJK
      SaUqysm/wA9Is3TmGdi8oddLrODMfY9y4rH/icvDx9kfGl6NfTE1eybpPlprE9kda5MEI6AY
      G1TPSzzCxZDWmYSFhzu0ziS0ziQI73D0XwDZfk66m3PlhZ2ZZaGY88zWknWz2qSa+HiEDOV0
      ZkAsqcZTpWaryepRrMJEucOlwMwowFHGhaJKK/KDnPa9LUpKivLm0y+b5NtePuZcszfqMqpl
      Xmuru0xlUZSbaUsbTJsXDHMFykaOLa5vyUVv3G3u8Zt+y5FOPYJ88qA8sfwS2wAAIABJREFU
      ISddRma/45qGrwfqdLo88t0fZmvjXVy+8GkeXb3EsX7OhT7c2CuoVkyA6x7vXnIyNrIbnE5O
      c333Omp1qkhGV8dIXxKtGb+qrXzyQQlaENiuKJXgfLhPEWpa+Kz0zbP84be+j1YjhV4IQZql
      aKHpHI8d00vXQjPYS9kdjPFKYRpvCQhyQacbESgf0ZYGmdovalMMQEaSYlCSrJrjLvgLtFt3
      tgr4rnZv5s5bj9l1ii3DW23pzhW42UrQXD1cM8v9Z7f5vl+jS65P0CymceMD8yBbd+WwAuT7
      vmm0FJiXXKrq0DEtYvR6IiEEayfOsLr+8+zt7ZI+/3E+eOIaWe7zuy+EvOuhH+HeE/fxO1/6
      LR4RbyNvZYzFmN2DHeSKJFqN6L/QJ1wOSTcyhBQEgSRLQChAQtaGcARlCFrCKCgZbmcQQTqe
      pjZYur55jc9d+FMqVbH0QJe8V1Kl9nkL0JqDMmdLpyR9QWqSBljTMWv3LDHaSAnbcsYvMT6B
      QuWK9slWLUgnF07esclazweYZ/e7hfIwdYTdm3TNj5tpTJtKMW+VsdQUCIsKuULjXot7zU3B
      dR+WjXTbVSL0Azyn/3xeFfXxra/wemicexQJIVhZOUb7nT/H1uY1yqzPP/5vHyJJ/n/23jPY
      suy67/vtfeJNL7/O3dPdMz09CZgBMCASIQIkAQIMAkzYoCiJFEmZdtkuq6SS/U0fbH9RWXap
      SuUg2ZJdFGRbTCBBiKQIJhBCGGAGM5iA6Qnd0zm+fv3STSfu7Q/77nP3Pe++nu6eATlpVb2+
      t+8998S1V/yvtRqjeyOI44hC5/jSJ1owiNFwWRDtikz7wUiS9wvSrCQeGkbVo8erfGhuCsrA
      VPOuDgcQwddPfZe/M/y5SgrfWLvBbzz+66yLtUqQXTy7RuT7tEWr8ukm3e7RNYxeVV6i1cj8
      lmMhmt3Iad/VqjaM0waf+tDOHeB2oomQjZuRdZ3TaVLUvdmu5N6JrF3umhhu/L/uZLtml7tf
      pdREBwkXZer6Be5isVMoLQJ0YpEIgVd6JHmKFBJferTb7Te883srFEURBw4e2fa58WcdIeEL
      wrmAtVNdGgshak0RzYXk/YLVMDW1xaWmtSmq8KcAsqZGeeBhMNCpLLixdoO1jTW2eps898pz
      dIMtdG5gKf3LQzZ0hhxmlM8oRGT2lyYlom33PX4uAK29TYYrCcHiZM2IkGK8SjTsDvbQbrVv
      +x75buRkJ5yN+74ea7dO480iJtOSU+6x3O3cBWi3m2aKzM3NVaOR3PN3z9mmwacVzVSfaY0q
      S7LcXIMXvjUmyN+UlEAIiVCCtuywMdxARIKZvU3On1pj312zZP2c7qUB0ah9ulcIishMdUeD
      zE1ffzwoPE3clwhd8IUv/Rvae5p02m0ui0vVIS+9sMaVtI/yIEw011sJ+ahb3LQCRssWwhME
      rQCdqZqPpymGJdlaxu7du/nMRz97R8/NrzOOm6hyF4X9fpoTC7xqJnXaDLLxxUw6rPbVLZh3
      tYU1p+qQCLcuuI4Jcr+3iyaOY8IwpJE06A16ppnUm8jxvVP6/Md+jjAMKYqCVqvF6o1VXrzw
      Ao+d/xb7DyteOr3CUrvJRpkybCnCRJDOaPzE+KAyN+1MvFTjZYKyFCgJoDl99QIi85jrNOjs
      ajDcyEAoNtYH6AYEfchbgjIcC0Q/F6iB6SwRDEbayVOjXqRG0OeDgjJRJiw7as6br+ckF1N+
      +uN/nZnOzB3di4n5AG483jKslGYcp9a6wtbXJzq+mv1vzZ2dfIBpsX8rpV0YhWXsIAgYDofM
      zc1NJO4Gg0FV0lk/ThRFbG1t0Wq18DxvYqp53IiRnmQwGNx20c+bjYQQzM7OTny2a3kXu5Z3
      8Z5738tXn/4qZfItTly9hqckcU/gZ0biozVxKZAlFL7Gy2Ewq8jLEiHMPb+hU5JS0b+Ukt3Y
      IA0U3kARad/MKRaCxhYUEcgS1GgyfBnCsFoURkP58SgZm5phGe3DTbZe7hHOBRSDknA24PCD
      hzlyaLuZd6vkAxXK02ZxXRvc4ntsLYCNFllmfDXb373x9eyuxei4mqRewlj3P1zNMBgMaDab
      VTbYvndNHiElWWHAe/Y6l5eXt52zLeLv9/vbsplvF+q0O/zMR36GKIzIiz/hxRur0JREfUEW
      a5Tt5jyisEdlsrsQd88TZEKTjBi68KCRGAlfBBrVMCNS474gaUF7zUSW0CbapHzwWqJqu55t
      5bQPt0jXU1oHGvgdn+R6SjEs0TPbzevbIb8oCvqjopG8yPG96VEXGx2xeYFpptPNqO4rhGFI
      s9msbHVL7kKwC9FCsO2is/CFbtdgP4QwbVgsxiNJkgrrYfc3HA7ptNs3nQNgr63f79Nut9/6
      vsAUEkLwiUc/QT/pkz//dU5114Fxy3OYhEPsVKMLTv5FaIoQitj0DfWUGZrhlSNbPoKkZTSC
      yDRlQ5DlJb0rQ/xYIn05yh+A1xrxTycgEzmb/jpfefyP+PQHbz8CBOBrNIUewSCEJAymP/Rp
      kRp7w+rmyzQKgoB+v19JiqIoqlphu59piTEbwnQzvG4BDYxnENtFYBeEe0M6nVof+SkkhJlY
      X49lv91ISslnPvIZsjIle/pbXB10qRrvMyoh0AagJqQENaWYShtGFxq8oQBpfIfS0/iFNnkF
      Df5AY3soxgNJ0jBCdSNJWbm+wrKKWWw0CBcDtNKIcGSmNzxkr0QrePLqE3x48yPMzc3d/rXu
      pD3qUr0eDXJhDPam3Yxs/yHLzGVZ0u/3t3WSdt/b7azd756Hu/CsX2Jt+NeC6rT7fDsvADDa
      8Gc/8jnef+BhwkzSXBf4A403UHgDTbxhYHJeoghSgRwqRKrMMO1SIXONl2hkBs2hjyyhFAox
      8h+EMotAByaa5KWANp+JXCNLg/G5HqRcHpqZE6jJkLjf8QzSVXHHNR2+lILQN21686IgzTMQ
      gmjUiiIrcpQezXBFVFLbZZJbYRgpJc1mk62tranxfdfcsu/tAnBHJNnv7atdDLYfqP08CILK
      7q8fyyWLDX+rxP5fTwrDkF/8zC+ymg/4+rmnQAjiVJLIAk/65H5JI/XoRYpA+MjCwEyaqc9g
      VqE80FoZhvYk+BKZjp5vJsgjTelptDQaIm2YSJNXmvaLjS1zHgHbIfEwmkl8I4UZtn13q+R7
      0iP0Tf+eoizJS5NksgugKE2LCyklnWYbNTI/XNjyrdQJC2FwPv1+/5a2nfb/en7ASn6rIex7
      myxzMU7WZLI+gl0kaZpW27+ZKsP+sigMQ/7h5/8LPn3mZf7H3/8X9LIuzdxnGJd4hSCnNCON
      lCZpaeK+NXMg88xEeokgGoyyyZKRJAc1wvnLXOOh8UtJ0tZmcF4Gg45C+4IgM8ydDgvOfO8y
      AAsyJssK9h2fp+E3CMI7e3Zy0oZ3YvHCmjWTq68oi8o5tSHKWy2Ud236W6UgCCpUZh0T5JpC
      lvktUM/mCsqyJMsyhsMhg8GAjY0NBoMBSZJUER+3luAd2k6BH/DQ0fv4Rz/9X7Icz5MHGk9L
      wkKSh5pG4pGEo2eqIfMVGk1rU6JKBZ4gbWiGbUXaUAS5oAjGzK88KGMDhFOjmQGlp9G+zTqb
      11JrtsKCraBgJR1w3U/J0pLji/cR3UY/UJek63hWJgiaJMvoDvuTGWGlKFRZISktc95OtKSe
      VLPv6+bQTgA3YMfMtRulskX87p9dgGEYVhEj+xvXF3mHtpPnedx75Bj/6Of/Pnvby+xrtTn2
      0DLtKEJJTZyMIClCEyUCUQpKX1fMHGSCIBX4qSAPNXlsfII4MYOyKUYZ5gITDi3BT8BPQWaa
      bDOnSM0iiwaCHIWfwvWLXTxx5yFrCdsdWDFqFaB1VQ9k4rEjxi/VuLzxdtqkWOk8DWNUp3qS
      rV6Z5r66VWbuYrJ+hPt5fVu7/yzL3tECr0K+73PX/oP8D7/w33Ckcxee73Hs7iVacUgWaJoD
      D6lAKkHaUAwbimbfQ+oRbicQEAhkAVFPEGceWcskwcrYQC7CIWSj4d3aB+3BZpTz9NkrXN3q
      VeeSNzTDlqKbpHSCO8sCw2gBjIdS33zjJEspypKiGDfOuh3H0ZomdtG4C6+O4KzXG7uaw/3N
      Tg51HRdk39eZ34V9vFkKYP4qSUrJ8tIyf+9v/VfcwzHyXoEamJJGUWgGLUUpNV5pZpnlo/FJ
      w5ZCFJBLhRSCrDUyfXwTHg2GJlEmyrEJXvrmr/A0pQ8oTdgHLweEQAlNww946NhDd3494BaB
      jL+or4UJB5RxZ7XbYRwXqVnfb52B3SL6aTXBrjPsYoCm4ZbcfVvTya06m9ap4h26OcVxzN/+
      zC/wyNz7yXRJu++TNSHMJGmsCFNzz8NMoH3IQ10lwUprsQgAjfKhDAVJR1M0BFEq8XOBPzRm
      UJAKgqHJLeQxDGc0XgnNzGMu6tBsvPog951ITkpxh4GYZDQhBJ70Rn+GUewk9lvFzrsFLtUJ
      1Gx8l7GnMbNbomkjUK5JVDeD3GNMWzyWbiWZ9w5Nkud5fP6nfpb/+md+BR8PfEE0FEgkWaCI
      cs9IbwmtvodXYNCljP1OpTVKKAqpyKUiDUqGcUnhKUrfhEmVByqAMhBozxTizOYBBzsz3LN0
      mDiOX/1kdyDfRk6EEEgNvvBg1Bk49AK0VviBj9bgj5jXkx4abeAFnc4tm0HW1LBQBkv15JPL
      iBbX43afsJrE4pcajQbdbnfiOO6+6wvJ1Sb2PN4Jgd4ZeZ7Hjzz6EUSu+T+//AXWFwqioWDY
      UIQjqe3lkLSN+TJsljT6HkKMnrsQSCXwS6gAFgK0MLPH5GgeshbgO3bJ0lKbuT1NFtXs1PO6
      VfLdml4XDGcpTVN8z5/E7wvI0qyKoNwquY5rPbnlNrhyE11CjCvDpqFQ0zStkKt2HkHdvKmb
      Vy7VHel36PZJCMGepV3EzQba61J6mrD0GMYl7cJnq5ET5/6or9DIIRbGrNFaIEuBn5s64MI3
      w7TluGR43GlCQJALZr0QLzQD+drN2y+CcUnWC1PqJoRrfrhkzY9blZx1ZKe7z7rp48IgXDPH
      rVmuVKjTAiVN0yqa45o9rtNrj+WOYbLbvUN3TsfuOcbf+49/lY6KKWITvkQK0tBEgjSmyZY3
      SopFXUg6oH2B8iFrmnpjgSBraCSCxsDAsZt9j7grCBLB3TNz3PPgLmb3NkHDUnvpNZ13NSHG
      tcVdJ9FlTsswbijzVjWA3afLdHUzyB47z3OiKGJxcZGFhYUJM2scsZr0Cerkgufs/uutWdwF
      +Y79/9pISskDx+7j8+/6CVCatKGIEkkalqgQEpGTNTXhUJDHph4gjzVZrKt5wkWgq1aIpQ9J
      S5O0NUnH/MVxQGdfwygRIfCGPu8+9vBrO29XIgITJoQrFd33RVEQRVEFibiVzK5NmNWZzl18
      dnHNzs5OFKzYpJZ7Hi7+vE4uiM4Nc9Y1xztS//Ulz/P49Ec/wTGxlzCVeDk0U5+4L2nnIfH6
      qL2iNhGh5oYgHgi8UhD3BVFPEA4Fcc+YR3HPvG+MXgNlxqXmg4LB5SG79O5XnQT/auTXTQ8Y
      S0s3vGgXhCv9i6JgmCYEYcBMu4MUO0vRuvkz7buiKGg2m1Ont9iElZslDsOQJEmqBVKP97uw
      iboDbJ1ruwCt6fTOorhzunrtKr/xld/lWrFO0hhX9MnSI2sJlFcSlEbqe6VAFYK8MYn10kKQ
      NjVaCdL2ZIheaYEuILma0DrU4ujuu1/z8/KnMU5d2lqGs9I+KwuyMkdrUFrh5Rm+79OKmzue
      kHVQ7fHcYncX2tBqtbbto75IhRCVQxwEZuCznTdmr6EebnUjPrbxlmsivZMEe+10fuU8fqtk
      qRmxIEwloUajkpL1boYeemReSRkoRC7Q0t8mDNE7l9gIIYiWQ6Qn8EuPBw7d/5rPucIx1CVk
      /b01KaRn2la7Z1mWJf3BgMALiHbICViJ7dr97u/tNtNMGiHMzK/BYDDB5O57KWWVZ3Ab5gop
      icJwwkyzWKCiKKpWjO5Ey3fo9klrzdPnn2Ktvcrue+cm+Gn1zBb9NEHmBYNmCcrU0Ag/qJKv
      E8IKTUP63DM7hy4VKlXIhofINcVWQbQU0slnWFpcfs3n7cO4aZU9EZfx3UyrUgpVKrQyeNYq
      fSYlRZ6T5dmOCwBM9rDb7W7r5mDzAjdLaNgSR8vctuWJPX8hRLXAKn8GTRCGtFvtiTE5O4VF
      3+rMX8+mv57UH/RZSVcQwbi/axV0UBp/oPELSZmOfM4cPK1hBH2QI36SuVk0fiSZOdCkGJam
      i99sgEoVWdfkrBaihdelbtt3IyN1xnQjKbY2NwoiGnGjkpau1GzGjelHGZHNGNcfhGXqpaWl
      HR+OK+ntZHtbAeaGPV2SQpIOE1Bmaog7Q8zd71udtNZcvHKR33v8SwhP8Jn3f5YDew68rsc4
      d+EcNMdoXTenNLuvyYPNBuFyMG5+nGny6wX+jE+8aKDMUkqunN7gTLZV4dJUWiKjybbuALON
      2y9/nEbSzbC6C8EFrFkn00KN637CzcKRLglhWnK45ojWZoTNzMzMLYcihTCFLc1mszq+i+l3
      fRdr6qytrbG6usrm5iZbW1v0er07mnf2ZqRXzr3CFx7/NdbiVVb9Fb7w7V/j0tVLr/7D26Az
      q2dAjn2tiWRmYArjtTQ9ffzIx/N9WvuahDMh2WaG8AXCF3hCEGQCbxQbVcW4E4V2/l1sLb7m
      c9ZaGxOonnmFcSTIjaDAduCYvWDLjK9GQRDQ6XTY2tqq7PW5ubk7mjkWBAFZlk00yXJBdFYz
      uLH/JEmqfSRJQrvdftNMhrkTyvKMrzzz71GNssJ3ZVHGqUun2L9n/+tyDK0159bOIqJJPxJc
      YVTLAVECgqBl6npVocCHpUMzzCct0tWM4ZWEYlhQ9ku82KNMFaooiRehm3anncptUa/XM1gg
      NwllL2inOPlOyMzbaSbbaDQqE8aOVXKPNa1t4jSyx81snQHjhWnhE/UMsDvnIMsyNjc3CcOw
      MpHeSqS15snvP8kNf5X8RmGq/AIBkaA3eO0MpLVmMOgTRTHpIMHPA1KZVJ0bLBlhOn4WQohq
      DoAQgsZyTP/qgHApQHoS2RKILfAXPAOyA3ShKdF4sUfvQp/vqO/w4IGHJpolWKFdb+nvnodb
      IAWjMKgLF3DDk27yyF7wtETSnbQSD4JgW4cye8xezxQ+2OqtmxXdBIG5aYP+ECklragxcbH2
      fZ3cxaCUYn19nSAIJsZovtnp8tXLfPXcn5EPcoKZAAQMryVESxFPPPUEj9zzCPv33povsLm5
      aULdLdP5+dlnn0Vm5+huXueDP/rLtPw2WZlRloqgMTmoTkpJqWtCTQjOvrBK4EsOv3cXYRwg
      SmMqSWkmUNrhdwA61wgJ4bxh+HQr4eQrJ7nr4F0TEPc6z8Ik39ZNXt9Ofa9LSvtD97Xemc1u
      /3pITruo7Kwuz/NIkoSyLCeywnUSQtBqNun2eiit6KemtFFqsU2z1OER7vVZc29jY6NqrdJs
      Nt+0HeIGgwG/8/hvk8uMMlVE4ag6TgrUoETvgS/+2Rf5pc/88i311fzSb/9rDtx1nPsfeBdz
      c3Nkmy9w7+KLnM+NGbXOGtlMiih2amqwHYG7FeT4xchUDTzTEsUbQVb8HM/30dYa8ExdgRWG
      3oxH3I45cuTIq557nfnt+36/j2+zru6APHcx2NlbtvOCDVm65s9rlZZaa7a2traZYfb4trX5
      TuR7vuk4MRh3nBBiXDMA22cPuOftvrc3OE1TBoNB1V7FaqI3g2Yoy5Ivf/P3WC2uk97Iaewx
      4WWtNPlGTngowG/7rA1v8C++/L/zSz/xK+xa2nXTfaZJj9WLj3NeXuCKXmf/fH/iXoQyZFgO
      to28qpjO2Zd5xgIUo0SZQuUKJPihR17kiJLxbDKgTBQiHPEloPol+3bd2kCMadtYwe2HYchw
      OJyI+tSdGNfssdvY7+50AdhjJElCt9ut7LdpGKRXi9QIIZhptxkmw7HTzqTaq0OvXf+gfk4w
      xh/leU6WZXiemRswDabxRiKtNd/63jd5/tr30VKjc0W6lqKVpsgV19f7zNzfMRGQhkcv6/KN
      P/sCn/zJX6Xdma2EjmsGaq35wEMxh5e7yKrl+biISmtNqcd5JIDT371GJk1NuVKjZoqXADRS
      wuH9izS6pkD+7IlVkIKuysy6UIojyws0GC8klatqaqRWimirwfKrLNqbURVShzHTWxPHhjpd
      eIDWekKiWsbfaTj2zchKfFtOaXMMroPqYv9vpfA+8AMC3yezXa2nSHf33F2V6GoC9xzdBWHN
      M2sevRFJa83JUyf5ynf/CH+Ph9/0iRZDQHDt1Aank03mooAyUXixeeZ70fy1+7pceP43OPbo
      r3Dxwmk2z/4WMphHhEvM7X43+w8d5+kzHbLhOvfdVRtUgQk4JDqZOJctUZDERmC6fiWj7cMr
      mzRmQ3oyxe/lZE2q7bXWpA7vmWdIhQIt+iU/+Z5PvKZSSLtfv578cm00l1FcKer6CnfKDBZe
      4TrhLllP/VbhCUII4igmH0WDhBiHPt1tgGrRToNl2N+4i09rTRiGlSn0RiSlFKfPnuE3v/Yb
      0IR0NcM76OChRlMhN+OC08+tcM97dyM8QcuDKJTs9S7zwmP/K7GfcnRPAVwHrnP+ypD9h47z
      3uMNDs8F2G4h2+gW0yn2tzdkyt6kgedDv6kondsqhODKZpfltGNyCCOzpxJUUrCyvnKHd2pM
      QRDg2y5pbgLDlZh1m9mmuK0NdSc4euvcWgav39C6s3IrxxBCMNuZYZgklGWB542TevVj2PaO
      064VqDRgFEVVOO2NHBlKkoSvPfY1/uJ7X6X1YIOIkMG5IflmgRgxvkoUXmpMkkAJiqRA+AJV
      WkSs5vDS5rZ969G8YM83zL/te27dFHbDoKXUbBYpQQ5FS492Pf59Eiiun99i+cgs6XqKdNtT
      K83jN77NrueXef+DP3T7N2xEnufhdzodNjc3K4a0ySn3otyEmJsJvhOn0MSOB9vMDler2GMN
      UhPanLvFRSalpN1qsbaxTpbnRGFUaS7Xt6kP6nAXhzsk2z2/NyLlRc6zzz3LN058nY3OGmKB
      qo9TY3/MpRNrXCn7eEj8BEQkkAjWwpz1l68BcEV7fOruiGY8vfJPKANAlGL7AEJLUkoCFVDg
      TAGaItjqlkXhmQa4QSbxhwKhII80QsORuTk83yO5khB0fFSqSVcyVFYimpJoxuerJ/+Mh+5+
      F41XgeDsREII4wQvLi6ytrZWmSX1jLDLRO7ndxL+HA6HU80Su6gmQq/a2PavNoPMpXazRZEX
      JEkylcnr1+aeR6vVuiOf5i+TrJP6+FOP87Xv/QVbbNE+2kQqSbFV0E8HNA81yAcFG0VKEUEp
      tOnJE2lwtDrAWk9x6UbOsf3TTTv7pMqbDKD2fZ/37/sg37j0NZjdHkCp/98+A08JM15PQX9W
      0dwwtQBSCcK5kMZSxODqEH9mXBA1vJyYk9KQhAmnz5/mwXsfvOP76YNRBQsLC6yvr1MUReV0
      TouX25vndl6+VVJKsbW1NZXJJv4vzMRxIY02uLa6QhiENBtNWq9SASSlJI4isjTdNkfMarh6
      5Mcu5jcy82utWVlZ4bsnn+D7155j/cY67aMtvMujGbpCE+4KkYE0nZgLUIVC2lYio0sexWPw
      MjObK1KCc1uKew+8SrTtJvelLEv+7RO/T1hqds92nO0nAZN14aM80y0i3hpFkkYpFwEIaWx9
      P/YpkxLRGAVHhiW+9BCBAAGvXDv1mhaAdGeB2akobuzffle38e7EGRwMBhMT42Ey2mKrsrIi
      H6lyQVGWlE4C7lbI+iZ1R9dGndyIl5SSVqv1hm+P/tSJp/g/HvvnfG/wJFk7Nfa7HvlsmGdU
      JgqvJVFaEy2EPPTIfnxXcGsq2HE4NGOKilhwJt3hoA6VybWpnwvMfe0XCVu4/VVv7tfVBR5g
      ukxr+5FZFOF8QL7l1KDHHvGeuJoZfGrt5I4DGG+F5OrG2kREZ6eQo8s0txv7t2rbzhiz5KpI
      K5lVWaI1lKVCaUUchsShmfwS32LEyfYKsse25pU9b1ucE8cx7Xb7DS35LR3ed5iO39lmUkxo
      6VG83URNNMMbKfnolnk5NHuSRk/SWZVkzfF+uq2Aly9nOx5bCIHf2M1OCsJGaTazhBeeusKJ
      Jy+TBzcPC2lAC22Ga5Sm4a0sNI2+JByIClkqhEAr15+Y3G8v6PLSmZdueqybke9Jj/5wQDNu
      GPMhjqu5W/WkGIyrs26VYdI0pdfrVfkFFypb36+URp3HYYgeNeJSStFp3V4CSghBu92ufBr3
      c3sc+/83Cy3OL/KrH/vP+fK3f49XspMIIUhW0skFIe31jLKlpaqkq/KNuSGEka6l4775DZ9v
      rgy5Z8+4QsuS1EOef+qPCJp3c2Ug2ds8hcuERdZnZfU6BSWJX1L4NlqoK/QpbPcHVFnSj6CV
      +igPspYVVgqvnFzYQhtNXm6V4Al0qdFKIwOJLjTfefHbPHjswTt6nn4jisizjCHQbDTN3NxG
      oxo0Z08CqBbI7XSEtllmC1SadjNclaiUwsfH941GiKLopjCInajO7G8Farfb/PyP/U2eOvEk
      X778ZXIyyn5pHEMB2UaOBqLl0GR+t0yXNo2uBtIx+re656PHsN4OefZCyrsPjk1bIQQHlnK0
      /jZFKbjCB7i0tZf9M5erbaQo+MoTX6UrjHNah8+7OSQ3p2S/V0rjKTOKVesRcrQc88jwSkLR
      L9BXNUHT+APJtYQyVXiBhyoU1/X1bUnNWyU/z0xRyLAYEkdxFfN2SxctWVzMrVJRFBWwzZ5c
      PSZfXwz1+PxrbXvxViMhBO978FH2zO3lX335X9I87kCMfYnf9hheGOI3feLZkEfu3Q8KLp5c
      o6d7LOYRzdgnwwij0JfkWzle2+NPV0ruWS6JHTjzVl/xjXM5gYQYYMvyAAAgAElEQVQP3/V1
      Xrh+D9nAZ/+CmSx6fT3nD5//GqU3jh5ORPJgQhPbbXzfxy8E+6Ims7ubBE0z+tRf9A1su21M
      H7Qpiunsa5igxkDS2GcEoso1MhD0znRZub7CY999jM/+5GdvaxH4URShlCLLMrrdLmEY4nke
      s7Oz1Yghm/y6ncKRoijY3NycAEdZcvHY9SSKhUS4iND6onszmS4/KNq/fz+ffN9P8Efn/pBg
      dhS1CwTZek7nqGkXOLg0RI6mfgpPIHJBJwjZdXTGRIsCI2yy1QzRFOh2SJIJ2s2xhv+jswnX
      F1pGo1xI+dGjF1nzfpzrqssC3+bSapckLAlkMNFpw10MbgBD63Fn8Xkidr9rvnJoy0IhIoEX
      eZXtbyrFIN8q8DseWowXlRxliQsK/pcv/jNowuBP+3z+Yz93yyH6akSSTfc3m83K7IjjmDAM
      K7PoVk0fi693k2Z1h83NOVgVCcYZtiNUbavDNE1JkqQqZUySZEdf4u1ED9z3APmNcQQkmgvd
      ZOoEyRyaW4LLWZ9nX7zKlZMb1XeaUZJKT0Y7VzcLVrIqLMOpOOTcaspM9lUW9z5Asfx32X//
      j+94TEv1oEnFB+iK+bXW+G2fsl+OzylTCMBv+pQDEwkKOgHZVj4RThWeIDwaEO0JOa1O8dtf
      /y263e4ttbqRSZKQpum2UUfW3re4+EajcUuSV2tdYerd7mzu9/a1/ucWvNsVbENcVoVaeHS3
      262G3b1dSUpZhQsrG3jEjcWgpEzGAYDS1/RnFXmkSSNF6Y0TA1prdKEZXjLJQ41GaTizWsCu
      cacO4QueXiuZbRWsnv8W+/YfoBDj1oY78Uc9ISmEGY3aDsKxlmBUO1yMn2e+VRDtMtrfb/uU
      vZKwE5B3x7XcRb9ERnLiWKfyl/mf//0/4Xe+8cUd8V7VPbRJIN/3txV/WH/gVotCtNasr69P
      tCa52aKpR2NcJxlMONNOb7RYHJuf0NoU09vePm9H6rQ7vGvfw+jcwdyPeCFby4j3vHrffI2m
      zAuKzZJ4T2Q/5JsvJXy1L53IkqFLStBPFBTraK3pDnvb91kLcEwLeEgFSwc64/NG2NxZ9YmN
      8gjPSP5isH0QCgJkuH3+QzDn8+LgBM++9OxNr19ubW1x48aNqTiQ2yVrsrimz7SEl0vbwmNT
      WjS69mM9jGkryN6u9LlPf47waoTSBh8gPEHvlb4pftnMGVwaMrg0NAUlrhkyes16OcVmiR95
      yEjy5ZcT/r+nh3zvSoY/O9kuX6ORbZ9LNwqWmlc5+8rzrPU3qNM0Pqo7xq65JUbJOYFASsHo
      UkwZpC/wWz5FrzBOsT3vGxnZjYx8IyffysnWc7LRe/ciL6yev6mVIOfnjRNyO5nWaaT1qMTM
      CXm6BcgWhuCiMyfsuNpNc7E/W1tbE7UI9vdhGNLpdF7ThJA3OwVBwL2774NRsihejpCxpLEv
      prE3prEvJggkMYL2UNJJJO1EIgaarUt9Xnr5OqLj4c/5yEiwttzg2kJErxFUgDaXab3Q48JW
      SRRA2r/MRx/4IQI1thBeTYhWJpDZeBSKHQs8v+lTDkvSlZRoyYRkg45P3i2QkSS5llIOSvDB
      a3uESwHx7hgvNvCIbCMnWUlJVzOy1ZxH733/juektcYvy5J2u81M59b78kzbUa/X2waYc51b
      y+T1eLAQYgJ9CuOok9a6GozR7/cnvp+ZmbmtfMRbmT758U9y+ndfYbBkEo7+jE/ZV/gdEyf/
      /H7JXY/u4tSFhCP7I7SC//e7a/zBjevIyExlr0BCI6qzjBpBLgAuZ3Ctu8Dhhz9KFMXsj5c4
      m12bEGi3ou2T6wl5b9TlO5RECyFe0ye7PqySomW/QJcapCbo+EYLNU2FWBAGxoTrFnhtg0wO
      24HRHqUZrfrvHvsyHz7+ER44/sAEf69cvcjKhcdNTbDneXdc6KG1rpCk7gFcP8CV+u42aZpO
      hFZd08YNo1mH2r7eTkTq7UDtdpuf/cjn+Mo//Z/YON4i22vuqb6W8ONLkl0L5tkqZeA2eJDm
      CiEllJox/1vBZfYrpSS9nuHPesa3kMb8TDQk8ijxCIZ8dOkgZy9Pxwq55DJ/ITTRfGjwSU0j
      NJNrKTIUqIEmWJT0XukTzgeVBrjy3BpFNNIgA4Voe2ilUV3FrkOmsN/6DFqbHMLZ5Ayn/8Np
      /sHCP2D37j3V8VcuPsnB1rPIRqNxx42hrNlTZ+y6vVfXLK5Z5GKLpvkLVovY7hWe572tTZ6d
      6MiRI9y//14+8LU1dLegTEoiCQ/fHdMYRUmUdjTx6HeunB77XuDnir1nuhy/1qf97CbHfusK
      u/7kOo3vrBE912VrNSXNDBTjfUffVWmHiYjUFJ6yzzkuJMFMUNn7MpTEuyP8hk/RLxBCMnNv
      m2LUFKu5v4E343NJD7ioB1zWAy4nfS7qAWUTot0h0XKIF0uCuQCv6dE80KC5v0HrUIMnn3ty
      MgGrRyDQ13LTlVIMh8ObtiyZlgibAHAxjv64fV3s99Z3ABMKfaMXpf9VkRCCez7/GQSw70SP
      optT9AvOXEg5eyGlKG1x+og0hCkEmZH841tqtumUJZ8bDvkZr+DYmQFHNwoePj3gw09t8t4T
      fcJNzfrWJlpr3nP8XTRGNY3T/Llqz6PnqZRiJopM359aCFXGknAmIJjxK0fZfrewu0WYmdow
      TwvTpHlErunthZKyVzK8Oqp29ARPnf8WK9cujreP9pjzudMbrrWu4BI72Xt2O3eohv1s4qId
      08deiGV8F4Hqed5brnvb60n7jx7B+/iHePcrA37kUpe/2R0w/8w6s0+v8ew31rl41ilG0vBL
      hxf4xx/ZRyMY1U0yNn/u3coqab6w6FEIQSkEdg1t/vk3kaVmq9dlZmaWf/hjv8wn9/zQ1JyP
      JTeM3WpMZvcnIn9Nj6JfGs0QSFRpvgvaPosj7S8QlEJPxvkllLky2eNA4De9SuPkC5ITJ8Yh
      US9eAJz5ALdLbruQaSpvGh5kmqaoSws3fFpPpL1d4/23SkIIHvj8Z3nqL75NcbHgpYHHBw/5
      gODdw5xnh5pXLhpT8oGFiPsPNmg3JOJCUf3e2s6xGEfp7t/t8VIYkSnon0pZTDWtlXVe/N/+
      b+Y/9XGE1izMNPjh8yc4VIRIT47gzoKiVCgBf+yVrETjbP/qepflXhu/6ZHeyCh6Q/yOjxd5
      SF+Qd3P8tkcw6zO8MqR1sInWmqX5FteuDxAYAZmpAi22g/t0MdJ4I7MvaPqcWr/Ix0bbFckm
      eHe4AGzUxw1VujZ83cSxRTDThuLZP2vm2G1skktKSbPZnChmeYd2prn5efJOi+X1LuvRpHCR
      geCeg0byHt5r+memmUasZ+gR7EABnoC1geIlT9PyBQdieHDRo1vA03ZnQhA8+xK9Z19iGHjc
      /0//e4bL+/j41vlKgJmghXl9tPD4J0nGilBoIemWGdlmTjgTEM6aVi2NPTH9swOT2BrVA/ht
      n+R6RrqeIqQgiDyizGqs0disXFGmamIBxLtjemf6+LGHFxveOrtx1rRkCUP233U/l5/5wztb
      ALaut878ro0HY6lfXxCu42v/b6W7G+O3qEFrBtnRRm/WdoV/GeT7Pgs/8kH07/4xhdJcSxRS
      gCcEfSXo9kukZCR0NFmu+HSScqxI0Ahe6Jbc1xbIWZOaer6r2B9LtFKY4aXGX6gSbwiaheLC
      N75Na3EvsndxamPlXYHgv5MRm7nmD7yQjXtjvBHkHQ3x7giVK2QkTeJrMOaHxv7YJMUAKWE+
      jukOMxa8JkpCXAiKQWE0T2lgHQhoHWyQbebE0ajFzYLHCy+e4OiRI5w/8XvsX5C3vwBsg6gg
      CCZKG2HSpq/jfOo3pMJyOBikmzlPdh9Zlr0pKrj+Kql171H6wNya4vu9jLt+cTfzMx7qXEJv
      aITJi2dNTiBJFboEfLiQaGLHStWj2L9NWhmUgquBzTPo+5IzzzzDj/z8f0R+9gnkDqiCltS0
      IvjpPOW3ZJOyAX7gdPDONSrTeAsSlQmSlQThCxN+9QRKa/xmwOJCC3FNc+j+RYQUDC4NCWZN
      4XxyLSG5Ma7xXOxmDAVoKQgEPP3MVwm6X+PQ/JpZFLdzY23Y08X5TOsT6hZF2P+75JpLbjzf
      1SR2nzb+b51i2yf0nTzAzjS7a5kNKYg0NJVmecFncdZnZT1n75IRXKsbPkf2RQzTkrPPmnu/
      FGquJuOsQLeA1Qxe6mkSBXtjt8aLartmoTh85grzew9wNV5iX3J9G/TFzevs8eGHLnb5zvG5
      iTaMIhQ0D8Um99DxKQclXuyPstzGrh9cGCB9we4DsxM4JSt0/ZZPY3dsTm0t4/CugB9/IHKE
      8ha2Yk7rmg+gta7w9y5TWyrLcgLr45oxVorXTR4Xu1PXFvXtdjKV3IyyHaf0zgLYmZL+AF+b
      x6yExJP2WY63qVhZw41c00TjAb4QbOaauVDTKzWHGnB+qDneluQjc6X6oQYtTCx9cHAPqihg
      /72I06tTUZiumfwBrbh6use5w22yJCOMR936MlPG6cWSolfgNSaTo7Y9+vBKso2f+hcHBC3z
      vcoVP7kIxw40EK6TjOb6VkwiD5sF455gmqb0+32Gw2HVQNZ2RxNCVE1sbWTGXRz2/y4OaNp2
      roSvN6mtv9YdXvv/WxnMfSc0LWz3ZiOtNesnXjKdEIUgl5Bkin4iyAtNko0GHWKfBbQemqG1
      xzDglZN9OpcMwlMimA/g4rBEI8iVC6YzvfzRJli/9MolnvrH/4x7/rOfZ+2VJxhkigON7ecG
      4xY1n1UZf3pigw0FFw/EyNmY5PyQ1j1tkAbOANuRAQDSN7XB7gwBIQXhfIC3lvL+pmbvQogn
      t/cmytsf54EHPwA4GsCaN+4837IsKyBavcGp3Vn9AndCArqfT4sc2UXmZo9djWBNIIsdej3J
      HnOYJqR5hkDgeZLADwj9O2v/+FdJgzMXaAJDT7DnbyyT54rVdcVmt+TspQQNFLbuFugOFGcv
      pzx0d4N77m3RvdBDIJgL4Uqi+eCCT6nh+e5YAwgxKlkcSVcpBK3L1xFexI33/XUWH/utiWCI
      /c3FRJNrwYyvuZZq9qiSvULwyZU+py50mZWSE08lLEWSfqYobwzZ0OD7gmHsI9s+USRJtaJ7
      cUDU8giTgmBlSJSXqFM9ZrOCzpLHha2cl0pNwwM5G+B5guNHYlBjH6GaEZYkyQQ0wYYmbRLL
      2uHTFoJL9nd1e97tMTQtR+BGjFzAnNsy3a0ge61kQ7kIwTBNKIqCUo33bwtz4iim02pX3abf
      6CSEYP79D5M8/gyFgMV5nz1LAWubOUtzHscPm8KmF84klQY4uDtged7n8mrOwd0hVz3TWyiW
      gkyZsKgv4EhT8GLtWC4FSrPx4kk68z4dWSJHZZKulu8VcHcLLg4197eMAtnKS9Yyn0diUKpg
      oy95X1Oy5mnWEsVGrrm/LbgWSrzdHkf2h0gBJ04nPHj3WM1orfnKl1b4aKgJV81nz3cVd7cE
      3z8rkG2f718a4t+7Xv1Gbmxs0O12K+fWMpplPFciu8y/kw1vt6v3F63XitoFtVMewXWCrQ/g
      /v71oCTPWNtcJ0kT8iKfgGGUZWlmF/S6bG5tmgVSi3q9Uen4hz7ARqeJBxW+/uT5jPsON5z7
      7UbtBK2GpNdXfPc7myRi7OyGQjMcKdwaYHTiOVna/JOv4y3s47I3Q5eAG16ruq9KGzBeKAVH
      muOClk4giChZKw1vzXmKVAuGCnaH8J4ZQdsX6JHctc8gDARZMfk8lgPBueHkZ76A97TgYV2w
      e7Pg6AMfrr6TUkoGg0GFBrVhSRt3rzNmXUvYWP00cgFv06S+O4/ADuuuq81p9HrAIYQQzHY6
      Nw3BWm201etyY32tml32RqdGs0nr0YfJ391k14JPXmhmOx7SYSApxj6AlMYk6j2/xfyVPveK
      svJ1awVho9bzo8DElGfUvLrKiS/8OsMPfJbnDn+Uk2KejcLY/Ws5LASTz9a8FyyHmq1MkQuf
      A6HmfL9kPhDcyDT+6CSi1QyU4sylnO+eGLA053N11YDaVjcKvn8qoSyNX2LXhRu3UlqTHv8Q
      C0tL1WcyDMMJhrfMOg2/M80HcM2b+szheh7AlRiuc2xNDjdiZPdfP96rmWC3Q4Ef0G61p37n
      LlohBEmeUaofjPP9g6Buw+fAh2dM7iRXtBqSi1czzp5PGCROu0it8TyBJ2Gu7VFoQa8UjPxP
      ZgJBz2qASSxd9W8hYF1qtiRcnZHsCteJn/8aj/7QB3kgHJJrwckBvNIvWQrHyF/7Z/nnYKw4
      PzS8MCcLLqWQOl3hDvqa7FLCPQdD5joecSQ5fzXl2ZMDTl1IuedQRBhI7moKHl8veb6ruJgo
      0pHzfn3/wxz71Ocn+Mrv9XoT88HMhTodfEeAtHrD3HoDJLudK1Gnxf/t/t3f2tqBeoSpPtfL
      LsrXa0iFEILZdof+oL9tQbr3AiCKIlpv8P6hExQoku9v8fjliPVrKcu+YDYvWRZwrYQtX/K9
      swPyxRAhJIOh4oYSfKAtWc0FJ/uK+zpgjR4hBAg9aQIh2GgI5u8OuavlcWGg+EAHIk+wsn6J
      7/zh7/DIJ36B8utf4r7upUrIep5nuj7okbZHoxV4nuRwQ3NmKDgSewyGBRva50RXsRwKfAll
      aRaiFJreQLE853P0QEzgj8KkR5o8dylhIUi4ryPxhSL2TPhTPPAh/Jr1IF1TZFoKOwiC6jtr
      27uJMCu1XeBavRNEXfpXN9T5rm4mub6Hq6FuNjHyTkiIndu8u8m6mXaH0H9zIFGFEBx96CGO
      KsWBS33mtjLYzGmXiobUHAw0D4uSo92UXXM+cSg4eiBkz1HjI+wKjcN7rq8YFIrrqWZQGnPJ
      dpGwT9LfH3DvgsfeCB7smChPqRQv9DQf2niezW/+Af6jn2CoZSVQrWntSQ8h7OgLTVkqPBTL
      oeZKLtkXaY5G5SgBp1EIko2cF1/qs3c55NyVlD1LAdfWxnXAD9zfYn5fjNZQ2HYVtuw+HWy7
      V9Iyl1uva2+ifbXSHbabQq5zXM8L2O13iuvXF9u0ijC7Lwti+kEUw0Th9IIg+1k4atD7ppH+
      wOKBw6zlmgVf8ciMoOND25t0XEUl3U3XaCnGYLKGB7Oh4GQfDjYE50eO5ZilNDma2c74uTc9
      OBjD2YFmKysplGL/+mn0ye/R+9DnGIy82IEIOVuaxSaNNz565opSKVpS4aHpap+IkjkfliLJ
      gq+ZyxXLJ7tc+OoNsjMDzj25xZVzSeWPPHtywKWNgs2FiKFT/3C99Nlz7P5t90m6YUfXprfM
      muf5Nlut3ubOpbrDXO/Hb7+rk7vg7Ku7eNw8wOtJRgP427RAPXnyZmJ+gLmFBTYZlRxKg568
      MFRcHiquJoqnvIDzizGd9hhYaAT8WFAtBIJDTYEvDI7GrSiTQpILQexN3qvQk0jP43BDcCk3
      z2v+4jOoq+dIP/4LrImY8+Eic6HTft999iPnencEm4WmkP7ERJ9ebkyaoyjeL0seGOY0rg44
      eT7l1IUUEOzfH/HQD82wocYucHHs/XRmtg9m963ja3vz18kyYFmWVYF6PTJUZxb7/3Fs3Yke
      oJFiHO/P83xi0bm+hVKKNE2rJl0/KBBcFIT0alqnrs3cGuc3OmmtOfv8M+wWJuEjhEBoRccX
      RL6J8c8ejLnv/hZaa66sjpCXmMTXCLhiGB3N1VRzoCF5dkuxGQoGbQmZZqg1y1PM2n5eorUi
      KQAkElg++zhX0yFzn/v7RL/3r5gv+jCyHgQjLYCx77VSaCm5qyF5ua85Go4F9HwIudI0vLG1
      sl8rrqWKu47EeJ7glQvZCDwHhYZcQ+vBD07lHd/awHW7243X2wVinWVXqrtZY/e39rskS1FM
      MlanERuHJQy3MZf7W5uIcztE/CDIkx7tZossy7aZbkKYvEj5JlkAWmuuXjiH+A+/SSRBK/NZ
      7Ak2cjjeAKUFG7UIH8Bdd0WsdBa4/o11DoYmSxxJuJZpIik43BT0/s4ueHaLIwH0Cs3KlLEC
      D81IXurBXU3J6V7J3R0fCey78hxXvzpg7gOfYu2xL7FQ9saaXgNCIKXpGF2WCt8XLHiKDeVx
      Y6sgV+BJyUYueMhR2C1foM4PCI6ZpJgQFsFqknhCQ75xHTi27Vx922/HZX47t9cyt2vjW1/B
      VUv2c3szXY3gSUlZjkOq9rbXnV97rLoP4naH+0ExoBCCZtwgWArY6m4xTJMJuEVRFFXE4o1M
      WmuuXr7I5pf+OctlH4CVDNZLON6C9ZGvOPJlK7KGQhhI5jo+iQez/vjb6w6TNxsS60qGUlA6
      WnPSghA0PBO52coVM6MmvbtvnOLKczmNH/8FLl85y6DbRaJRqiQdDvF9Sef8syyqAUpJZj3F
      y33NUigohWJfK+REH17ua9JSk8cefihZGWrSl4b4vuDqtZyN8yVFoklzYF9EfvH73PPoh6mT
      744sshLfNUPchWHJdmJzq7gsA9cjPlEYkQ7yCfPCxZV7njfB2PXEmd3XnXauuFUSQhAGAYvz
      CyilSNKEbt9IqEbcIAremPOB63T5z3+Xw/lmBf3cKGAlLbmcStrSZVCLf1JcuZHzrpH0dJuk
      VCQm34waNOOPJG3dFxRCYPtOHGp6XByUzARj4bZv6zzX/vTf0Pr0f8qBXbsr/svznP5wwOax
      Rzj92O9zpHcJCZQarueSvb7ZZ1Nq9saCQgvWHupw9FDIhWsZS/MhrVjSyBSHzvYRHcHFRLDn
      fTOsJNMjeBPxxLptD5NQBNiewHJDnvUssX0f+gG+9PA9D9/z8UahTTf7a6u9XIfcjQr9ZZkf
      9litZovdS7vYtbjMTLvzpnGCD3/yP+Fqa69jSsJCKFgOIJZwrl9yaVhy/lrO918Z8sqFlE7L
      3Nss12x0S/oFbDp/g9LKK7MweqXRJpsF9Es99TxyJwITSMFqMtn8bJBkxJ0ZPM+r5rOFYUi7
      2WJ2fhH/Iz/DNdFEepKlAJa8gtlw1E6HkUMOVXY7jjyyzPBOYz7g2bmY68UoqKNhLrzIS0//
      wTY/V06LzbvJKPuZjcfb712yTFNnfvsXeD6NKKYRxkRBOLFo6sd2I056By3xl0VvtuiPEILF
      3Xs5+ov/LdcOPILSpvAj9gQPzwgenJEsRJLZQHJwV8BDdzd48O6Y1qgM7JWLKb6nWfjhBZL3
      z1d/wcMd+qZ7Os1Ysv9jC6gPz6M+vEB5vEOut0NXXMm6O5aspIpCaU5m8EohSETB43/8RU6f
      egGlVLUIgiBACsHs7BxbrSVAsKcVsKXHg8o9YTTVyG0w1z3jsbJmnPn9e0Pue6TDQMNcIFi7
      kdOOChrZE2ysr02cp2+dTXsD0ywlG82EtYpQa2iEUWX3u87oNOfVvtoFY80sm8GdliOASQfa
      fai2GP7NxIx/ldRoNjn+s3+XF774f5G88D0CzzzLUAqCkf1y+mrKqUhy95GYuY7HC2eGXFsr
      uO/wFGiIc9ulFCzPjJ//ZreES8ZssrF4Adtw+MfaHt8aaB742AILIwfjOCsU5R/w0ne+yeFH
      fokgCMiyjEbcYLi1QbG4D3XhAr7wwOGTQJpooi8EKxcThIZDB0I2egXPnzYJuyQtmVOadii4
      /GIPsW+R2Tasrq0yv7BYnZfvQo/BMGc5pZoHtsfqXcZ1Z/LWk2VuKLW+n4nEjBDbnGtrG7om
      1c2oHpJ9u5IfBBz96b+NuPAC87LgaqrZG43v33vSnBfPaTgSc2jPCAhZJpw8P8LK2zCK1qx3
      C2IlSJQgvpzRjMf39erllLs8CarErRLLSwWMk2SBFBwPS4TWhJU/IAh8OLK8yamnf50HP/jL
      JElicGEKeuvrXCkCAgGp1lzOJHs9TduHy0PF8Y7HezcSXkhKOBAy0/I4fleE1ppBorh2yvRK
      VckoiiclpgDauU+WeSv485SbKcVkhlZrPdGdwSJI64vJTay5v3fJbj+tzNJKf8/zWFtbw/f9
      KhtsF5SbG7BNdO31NBqNt20jLT1KKJVCEgqDv29KU+RSKE2mQEWTiUtPwuF9ERV0QBjJfliH
      5Hc3uL5RMN/2aDe9qqJs8N11vKYc883Ih9aME5j2GLtDjxef3GDhx5bxfdf0hoX42sRcuk67
      zdGP/RR5mbOZDFluz6DykrN/9GscFAPKkdmloYJE+56gKCHwJUI4XeMKzXq/wcB/hLuPHJm4
      T75rjuyU0NJs9/ItetP+1oZO7f93Qo7WF4ireVwfo56As/vOsoxer1fdWGtWWWfaagk7Vmlx
      cfFNEb//QVBR5DR0ji8075mFx9Y1S6GBF/sChqP5g+PnCIEPLgBOa7i0krHZ0wxTxeKsj1eV
      IQqGh9oMr3YJpc3kGn7xPDmBG7PP+R4NJ5/eZM/xWW4MFjEJNzMXWm/eYH5xd9UAOc0y2lEb
      ta6Rgc9Me4Y+gqZnYkxaawYlfP+lhM6RhKN3xZy/mnH0wGTXuRjYGM7yyF/75Da+9N0b4JK7
      GLTa3st/J0kO2yc9FkVRMeo0c2laHLleQOMm7NzPXdPI5jRcPyVN07flpEkhBL31NVpSgxBc
      STQHY1gMoe2PMvOJ4rvf3KS5N8b3Bd1ByfOvJE4tgKA/LBEC3nVPg81eycuPbxIFosoldLsl
      VuwLBIXWvNAzWuaZLuBpPDQdH+5pCTwB+64mPNEP+eHP/Q183x9L/U6Hoiiq2vPA9xkME6T0
      GCRDIn8M3W968P2ued09KClLCALJ8rzPhWsZizNjobcnhO+9cpE/6f4/PPL+H2PX7n3jPFOe
      55Nxf6Vs+yPGBpHexqgTGkJPDqS2DwCoTBg3wuTuZ5rjq7WuJlS6MGxrTrkmT91fcI8NRmM0
      Go0JJGsduPdWpCxNeeHf/hayX9JpCvbHgpZn8P/WdDgsSlgr2fu+GdrNUQNipUbhRUl/qLi2
      lnN0v7GrSwX39HNajkJtDDRrQuALTexprqUGuHY1UTzQ8WxR5mQAABDMSURBVHi+V7Cv6dEr
      x/e75QuWrnc5d+IZ7nn40Ql4TRAE1VxopRSDZEjg++RFziAZYHnxaMtjUCi+c0Ox3FNs/vYq
      r3x+mYXdAVt9RSPyUMfbfPtEj7lS0eytceP8t3n++Sd5+dFP8ZEf/QmklPhhGFYS2ZWm08KZ
      1kyx29QlOWwHsWmtq6J6l6aFX+1+bObX/c5dZBPaSettC8Nua7VNnuf0+/1qf7YPjdv54q20
      IJJhwuP/8l/T+e7LXJnz2Hc8YCXVHGmOUZeGBNrAcKaav/XIXlkq0CNY9IgOxtArQWnJdzcU
      j85JZnzYGxk+yUtFqT2a3qioHnM8H5h74vc444ccefDd5ryThGazie/71UCURhQjQ58kTdjq
      dRFCokoDS/EErCWm/mCuV7L+hWtc8Yx2WntXk4/+7BLllYxjqTGfzw00+8Ocjaf+HV9LBnzs
      p37WhEFdKVrH8QPbcgJubsBK8XqDLBu9qTuhO0ls+94WUd8K1U2xugawvslgMJi4ljzPK9/C
      9jl6KznLrzzxJP7XvoMA5nqKl68qju/xeLkPG7lmX2Tu0aVEMx8Kzv3pDRSwGsyw98OfwEbZ
      lVIUUcmF60+wMjxE1NzN4L2YiI9SCK1BK25cPEd86QUWQsP8LrV9yUpmzK5Sw71tUXWf07pA
      fft3OB+GHLznOFmW0Ww2q4QoQKPRYKvfRWmNlB65GgvByJPsaWvKwwE3rhUsdxVxYfh589kB
      L757iCvXChOkYjGAlWf+jMvv+YABw7kmkJvwcjOyVgPUpYO7nX1vs8e2xUpdurjRoropZbdx
      X11/oJ6Mq5tT9jNXoidJYhIsznW5jnEVenuLaIH7P/JBnjh1Bv37f06z0BTCQAf2AqUWpKMs
      7VquubdloQ9w2pMcOfZIpbXt83jmsTMs7XuIvfsPV8/UtQa8557iwNZL2+qHARYjSctTzIUe
      FxNIStNtAsxzWiJl5eu/yeXgb7Hn4OGJUHlVKagFSTqk3WxS+j6ylJUA+8iiiV5+p1dCdywU
      g1zT/d4WIhTGCwaSUuEJDyHg3obm8T/5ItLNuLq2tWveuN9Zqi8O+zs74d0da+r+1Z1pd39W
      Gv//3Z1PjCRXecB/r6qrq6u7eqanPTPu2dld73rX2F4U71rBIeQQKXIUIiPxnwMIJBAHDhzg
      xgFx4cglEicQKFJOXIiUQ6RIREEgJ0oi2aBAYsB/gu1Zdjyse3b+9nR3/Xkcqr/qr95UL/Yu
      1tp8Uquna6ree/Xe9/993/fc/hYRngZXGrh9STt1BClhGH8s4Pk+Vz7+QQ46hTfEqoMTfQNt
      35DklNUeBEw+Rz6ZpyzLuPq+T3H2/KWKp00+nudxtL+HyzvGueEg9zjTMtyczgMhh4nht1PD
      bjLHgU42Zv+/flAebi0OE1m3uNMh8BtMZ55AVz0HIHDsU6Bvcs6ZnOsnM61GMUuL4bHhrwoC
      kNLjuvSHGI3yf9cekI+IK831tcRwP3XGsiChcOE6TqxDLW5HjNpY1pLFfQcdfyQFwA4ODkrj
      +50OcbdL9J6rAExH1Uob1lpeOMq57DjHGjavVOmGeiksv4VALl77M34dn6+09Vp3k/xDX+KF
      1St0/aL/jdCwFlhanuXlUc5BZvh1a8Bz9z1K74knGY/HDIdDfN+n2+2W9kAQBERByFKrTTOb
      lv1XnCCBizPFKfQrQZHd9vQwY5zBr45yfnGY89xhzvbYqQwniKPVDI3ImqvqzTP5LemKdQav
      IKjmtFp9cT1Cdfq8Hodru9TZAvIteQw6aE8S7K0tCmTJNnwc11eJcEEb2lpS6nHdSzDGsHzt
      3Yx+9N90DnL+dSfnTDQrCkuxHq9P4VZa5PteiQ2704RVlX+hHSOy9lmekWQpUbNVvne706H9
      nr/m5Vs3wfOxxsePOvTX1ln+wKf4t+/+HWv5EN8zLM0QNfTgmAb3f/DzNHeHDDbPkqYpu7u7
      7OzssL6+Tp7ndDpFnoacF3HkR5CfnGJyraAawyp/G4rMtitdQ5Zb1lX565NsthMsE6a5qNaT
      tfdFT45AnuelygNUCMhFUtfgdo1l14sk/cq3jFOrX3VGuOtl0hsybv6zcJw8Lw7j+315x0I0
      Mi/iSXq7GdKPvO+9/McPfkz7uZeYbk05fy2k2zhNnFsn8OKxZTvNuOwwOu0RFLD5vLoDFPNx
      5sGHgIdOMVFjDJcefy+vPvMvPNieM7PQM2wdpVyejNk4s4nneYRhSL/fZ3e3CFiTXf5ms8nK
      ygo3btwgaS2xdZKQWQtRC0YHhHnKyCtq/Wdeof4ks3MM5D06PrwyscR+NleFMFUJoBG7zg3m
      ToR+VgjD9SK5bQjiCQeu2y10+3CJyFWF6kIw9N+uq9ZtV55tt9tvuOSK3kFP07TMmAvD8A9W
      tuVuodlscvEzn+DVr32D7ihn6zDn0d7p6t1nI8M0N8QZWJtX1srdRfc9n1bztMRz51s7Vy78
      6V/wf68+D0f/P9O/LZfasJ9ZsjSrGNzGGFZXV9ne3ubMmTNYW5TtlKN8H/3o5wCYjMe0Ox1u
      3LhBr9/n5k9+Cr/4R6YfepLNa49xazik/cz3YZaXEHqG0Pd49iBnswU/ezFhdTKTABp53Aww
      QVKNSHXFaTVC6ioSGqQPLbryPC9TI11X66JaPTJOua4XQX+76pJrAGvDW+KM3qj6IqEfWgpl
      Wcbe3h6dTocoiv6g5VvuFB54+F288ueP4//7s+w+n/K0V6gHoxWfiwMfVK38Y5uyNPOxL4rY
      haqzBKoRwe56SCRv49JVkp++ROAZitMqLVM8ojCstCnzuLKywv7+Pr1er2SsYRhycnJSEAyF
      y7zf7zMajVg9f47Xrj1CtLzMxvlztLodeHY+XmstF9qGcWaKki+ZZW1s59GgrmUtCARVL4xb
      mcFFqLqMLhe0FHA3vNzJ0Nc0cbr916lXrotUL5wxhiRJmEwmrK6u0ul03pTu7uZHSPvNZpPj
      42Om0ylhGNJqte4pIRhjuPLJj/Hzn/wv/dE8Sf5gxeORuCoJRhns7d+iu7RUXtf4oO81xpRF
      EgCSNCWcuUjl3slkUhYZXhlsMkwMgxCK3VxIMTSCgMOTojCZN1NVbZaztLTE1tYWvV4PoER+
      ccO2222MKTY1Dw4O6N13H4Mvfp7xybgYZ27LEvEwSw2d5kzz4tqFSwH7P5sWleHeiOG2SD0R
      6nSRVSOguyD62du5N9176/z8i+yMOhXO7TcIAnq93ptGfuBUjoKr93qex3g8JkmSMir1XhnH
      qxsD+p/+KKPvfA9vFkVpVEizBbAFwtg0ua37213r4/GIZqNJmmc0FHOcTCaEYVjOURiGHOZz
      M9UYaJMyOj6iFRfVKawpon+xlBx/Op2ysrJS9HV8zNLS0qn1XF5e5vDwkHa7TWfWFrOe5O+b
      E8vDscGfje/Cksez5xs04jiuqD9QRUy9wEB5RpcG7cLUqs0iAnAR3u3LvQ6UhrKr59d5glyO
      pSWXVr+AO0Z+t1K07lvmSuyio6MjOp0OYRjWtvdWgzGGP/mbJ/nxfz7D/gsvEVnotqpqTW4t
      E3zCTrdS2Vuer1Mfocj5zq2FGltA446oLUUY88xALduajROD3/DxKDSEbrfLaDSi3++XhYnr
      GF8URezt7VXOj5tMJoynOcvtWVSCLfqTzTpjDI+daxShEHrArj1QZwhrcCelTvevu7fu+ilv
      wwLOfbt2XEKqM5Z1X3cSKq2LCEhb2j7Scyl9pml6zwgACmI8/+Gn+J9vfotwE+JQecosZNby
      +sUnuDzYOIXIWvpqRud5Hi0/JElTsplTQ8JLtNtZ7j26+n621galzZEf7nJfEJQVN4wxBN58
      L6jZbDIcDplMJkwmk1L9AUizlCzPicIiN2RtbY2dnR02NjZK9fTFlxNe88EaGHmGX+IRrW1g
      77+AaQTQCIpQCEEcd/dXqOx2J7Jo3VxKmOgNCmttGWxWJx2kb9dTo+2JOhVHfkM1xLpOndIL
      psdwp1GhemHl230fzQziOH5beIYuPX6V+Otf5em//wcGjRuVefrN0jke+MungPrARheZ5X0l
      TyMMmiWhawYA8/V+8NoTBEFwKtbr8OS4YEYzPArDsCQg3/c5ODgoczskpMX4M5zzG2XEca/X
      4+bNm2xsbPD6K1tsDjP8mcoX+Yb91Gf68ENc+6u/1Uy+qlfXSQT5rUEjrkzQeFwYIEEQlJlb
      mij0rrKGOq5epxa5EmCRhNBeCddglv49zyOKojdNAFrKaGR3mYiMTZD/Xun/GowxDM6f4yNf
      /QrZE09xZGcHoljL+OJVGrPjoFwJqpmK/q09d3qnXkCKGej/CQE0Go1SLZWMw8Cfh757nkeS
      JPT7fdrtNqurq6RpymQyKVRuzydsBGX4tOd55c7x3t4e0UqPXL1DlFlWf5vRTKolNhvyEiI2
      tG7rImsd4smCy8sBtNvtUl8fDoeVmH7NUdxdVK1K6D61SzYMwzJcwfVMaOTUnisNshi+79+x
      SlKX4ilErjfDWq3WPTV+F0EjCHj3kx/gNw9cZvjP36aRjYnWzxSn5Nii/INmgLJOvu+X3q0S
      rCXJMwyGxsx9KngjuKH3afS6yHe7FTFNpiRJUhrOUDDS69evl2ErcRyzvLxcSgbf97GzyIIk
      S/GNR7/fZ3t7u3BSlENUjHO2FJJl2JABuvpxXQDa7RZSwg1kM8kYw/7+/kIXoKsy3K59HcLg
      wiJ7oE6ayXsaY2i1WneMmK6BLwsriyfEfTd9vNVgjGHz8sNcf/9neeWH/8TF1fXisAxgPJ0Q
      hfOxu4ykNGpt4blpKvVVmJUb8uIyPt2e73l4GIKwqiZOp1P6/X5JfNZaDg8Py2DNKIoYDAZF
      v8xV8fX1dX7+2g5NaqIIlITzfb8qAaRQrR6cqwoJuAaySA4xkkRcuUZmHUK8ESQRxKoLVtM6
      qtyr29VGqzHmrpLlRc8VkAXXpSTFgHu7Ir+AMYazjz5G5/6zGCWNo1YL3ztd5wnmpSpdB4Jr
      K2gbSxBTnndxSp7VDE5U1JOTk9Kr02w2WVtbK5+/desWOzs7DAaDcizSxvr96zw/6BM1ArBF
      piPWstKNK1pLQ+t8LmXWcdc6NUW/kDaOFiG7q0rV2Rduf1piuO24Rmlde9JOEAR3zf11MWG9
      0MII3ooy7m8VGGNY6ffJsqw8H9pgKu/munxdTl4XO1RGi+aSRVY8vygf3F1DaV/SI7UXSPrs
      drtsb29XbBEhzM3NTcIvf4Fms8nSbGPPdYbkeT4Ph3YNmLqJcre8XbVJcwQJE5CB6cnRE/T7
      Fkcmw92a13p43UeDNobvNv1R67fSv5Z0mlu+U8CYwn0Zx3ElLkdH7+p1c9Vm+ehQapnj7qzN
      OjdwnWYh14GyPc/zSveq/AbK+CC5rgnBGFPuH0yn08qaa4IuWfkiItCcV0SfgKZ8Hetvra2o
      Uy6l68mU+xctjPTjxvToF63zBtW1E4bhXZdY1+EYeiK1aBeV6J0GxpjSkwKLvW4STSu6ucxJ
      Xdn8k/FJOR/i/ZFn5eMyST0e+W61WiWia5yUlNc0S0mygsjCMCzbXV9fZzgcluuh1TJjTJEU
      776c9vu76k1dnq87idLOImTT97ghBIu4s0y2a3y6BOD+bUzhnRLXrHvPnYAYu/J+wqH0+PWu
      9TsN4jhmMplUpLxWPUrkUesrThBjimoifqO6/nEcnzqMEaqxRUJMcl2IShwMuhCa4M3y8jJJ
      ktDpxPieVxJJGIalVBavpHiONGP+HVjRWI4d9WeRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Affordability Neighborhoods' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='46' name='Affordability Stats' width='164'>
      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
    </thumbnail>
    <thumbnail height='171' name='Affordability Urban Villages' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mode Choice' width='192'>
      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
      /nGWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Mode Choice Histogram' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mode Choice Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Mode Choice Stats' width='192'>
      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
      HVrHfzP/D6eucQ49hyPCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='Mode Choice Urban Villages' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mode Index Neighborhoods' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
