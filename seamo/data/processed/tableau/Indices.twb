<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook original-version='18.1' source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='blkgrp10_shore' inline='true' name='federated.1vmhr2y11w0na212hwraf0n0hai7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='blkgrp10_shore' name='ogrdirect.0qsm3aw0g7j4wu0zoc8pk0pf7qc3'>
            <connection class='ogrdirect' directory='C:/Users/dariu/DSSG/SEAMO/Seattle-Mobility-Index/seamo/data/raw/shapefiles' filename='blkgrp10_shore.shp' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2018.1\local\proj4' password='' server='' tablename='' />
          </named-connection>
          <named-connection caption='cost_adjusted_median_income' name='textscan.0d8slhu00axovr11lqw0v15itsx9'>
            <connection class='textscan' directory='C:/Users/dariu/DSSG/SEAMO/Seattle-Mobility-Index/seamo/data/processed/csv_files' filename='cost_adjusted_median_income.csv' password='' server='' />
          </named-connection>
          <named-connection caption='BlockGroupGeocoded' name='textscan.0sypx4g08eskuh164s25z1la1gaa'>
            <connection class='textscan' directory='C:/Users/dariu/DSSG/SEAMO/Seattle-Mobility-Index/seamo/data/processed/csv_files' filename='BlockGroupGeocoded.csv' password='' server='' />
          </named-connection>
          <named-connection caption='sample_mode_choice_scaled' name='textscan.1izojme1d9bk9j0zwjqnf0mg8mqn'>
            <connection class='textscan' directory='C:/Users/dariu/DSSG/SEAMO/Seattle-Mobility-Index/seamo/data/processed/csv_files' filename='sample_mode_choice_scaled.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[blkgrp10_shore.shp].[GEO_ID_GRP]' />
              <expression op='[sample_mode_choice_scaled.csv].[block_group]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[cost_adjusted_median_income.csv].[key]' />
                <expression op='[BlockGroupGeocoded.csv].[key]' />
              </expression>
            </clause>
            <relation join='right' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[blkgrp10_shore.shp].[GEO_ID_GRP]' />
                  <expression op='[cost_adjusted_median_income.csv].[key]' />
                </expression>
              </clause>
              <relation connection='ogrdirect.0qsm3aw0g7j4wu0zoc8pk0pf7qc3' name='blkgrp10_shore.shp' table='[blkgrp10_shore.shp]' type='table'>
                <columns>
                  <column datatype='string' name='GEO_ID_GRP' ordinal='0' />
                  <column datatype='integer' name='FEATURE_ID' ordinal='1' />
                  <column datatype='string' name='BLKGRP_LBL' ordinal='2' />
                  <column datatype='string' name='BLKGRP_STR' ordinal='3' />
                  <column datatype='integer' name='BLKGRP_INT' ordinal='4' />
                  <column datatype='string' name='GRPLABEL_F' ordinal='5' />
                  <column datatype='string' name='GRPLABEL_C' ordinal='6' />
                  <column datatype='string' name='GRPLABEL_T' ordinal='7' />
                  <column datatype='string' name='TRACT_LBL' ordinal='8' />
                  <column datatype='string' name='TRACT_STR' ordinal='9' />
                  <column datatype='integer' name='TRACT_INT' ordinal='10' />
                  <column datatype='real' name='TRACT_FLT' ordinal='11' />
                  <column datatype='string' name='TRACT_DEL' ordinal='12' />
                  <column datatype='string' name='TRTLABEL_F' ordinal='13' />
                  <column datatype='string' name='TRTLABEL_C' ordinal='14' />
                  <column datatype='string' name='TRTLABEL_T' ordinal='15' />
                  <column datatype='string' name='COUNTY_STR' ordinal='16' />
                  <column datatype='integer' name='COUNTY_INT' ordinal='17' />
                  <column datatype='string' name='STATE_STR' ordinal='18' />
                  <column datatype='integer' name='STATE_INT' ordinal='19' />
                  <column datatype='string' name='LEVEL_1' ordinal='20' />
                  <column datatype='string' name='LEVEL_2' ordinal='21' />
                  <column datatype='string' name='LEVEL_3' ordinal='22' />
                  <column datatype='string' name='LEVEL_4' ordinal='23' />
                  <column datatype='real' name='GROUP_AREA' ordinal='24' />
                  <column datatype='real' name='GROUP_PERI' ordinal='25' />
                  <column datatype='real' name='Shape_area' ordinal='26' />
                  <column datatype='real' name='Shape_len' ordinal='27' />
                  <column datatype='spatial' name='Geometry' ordinal='28' />
                </columns>
              </relation>
              <relation connection='textscan.0d8slhu00axovr11lqw0v15itsx9' name='cost_adjusted_median_income.csv' table='[cost_adjusted_median_income#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='cost' ordinal='0' />
                  <column datatype='string' name='key' ordinal='1' />
                  <column datatype='real' name='adjusted_for_income' ordinal='2' />
                  <column datatype='real' name='normalized' ordinal='3' />
                  <column datatype='real' name='scaled' ordinal='4' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.0sypx4g08eskuh164s25z1la1gaa' name='BlockGroupGeocoded.csv' table='[BlockGroupGeocoded#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='key' ordinal='0' />
                <column datatype='string' name='geometry' ordinal='1' />
                <column datatype='string' name='neighborhood_short' ordinal='2' />
                <column datatype='string' name='neighborhood_long' ordinal='3' />
                <column datatype='string' name='seattle_city_council_district' ordinal='4' />
                <column datatype='string' name='urban_village' ordinal='5' />
                <column datatype='real' name='zipcode' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1izojme1d9bk9j0zwjqnf0mg8mqn' name='sample_mode_choice_scaled.csv' table='[sample_mode_choice_scaled#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='block_group' ordinal='0' />
              <column datatype='real' name='driving' ordinal='1' />
              <column datatype='real' name='bicycling' ordinal='2' />
              <column datatype='real' name='transit' ordinal='3' />
              <column datatype='real' name='walking' ordinal='4' />
              <column datatype='real' name='mode_index' ordinal='5' />
              <column datatype='real' name='mode_index_scaled' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[BLKGRP_INT]' value='[blkgrp10_shore.shp].[BLKGRP_INT]' />
          <map key='[BLKGRP_LBL]' value='[blkgrp10_shore.shp].[BLKGRP_LBL]' />
          <map key='[BLKGRP_STR]' value='[blkgrp10_shore.shp].[BLKGRP_STR]' />
          <map key='[COUNTY_INT]' value='[blkgrp10_shore.shp].[COUNTY_INT]' />
          <map key='[COUNTY_STR]' value='[blkgrp10_shore.shp].[COUNTY_STR]' />
          <map key='[FEATURE_ID]' value='[blkgrp10_shore.shp].[FEATURE_ID]' />
          <map key='[GEO_ID_GRP]' value='[blkgrp10_shore.shp].[GEO_ID_GRP]' />
          <map key='[GROUP_AREA]' value='[blkgrp10_shore.shp].[GROUP_AREA]' />
          <map key='[GROUP_PERI]' value='[blkgrp10_shore.shp].[GROUP_PERI]' />
          <map key='[GRPLABEL_C]' value='[blkgrp10_shore.shp].[GRPLABEL_C]' />
          <map key='[GRPLABEL_F]' value='[blkgrp10_shore.shp].[GRPLABEL_F]' />
          <map key='[GRPLABEL_T]' value='[blkgrp10_shore.shp].[GRPLABEL_T]' />
          <map key='[Geometry]' value='[blkgrp10_shore.shp].[Geometry]' />
          <map key='[LEVEL_1]' value='[blkgrp10_shore.shp].[LEVEL_1]' />
          <map key='[LEVEL_2]' value='[blkgrp10_shore.shp].[LEVEL_2]' />
          <map key='[LEVEL_3]' value='[blkgrp10_shore.shp].[LEVEL_3]' />
          <map key='[LEVEL_4]' value='[blkgrp10_shore.shp].[LEVEL_4]' />
          <map key='[STATE_INT]' value='[blkgrp10_shore.shp].[STATE_INT]' />
          <map key='[STATE_STR]' value='[blkgrp10_shore.shp].[STATE_STR]' />
          <map key='[Shape_area]' value='[blkgrp10_shore.shp].[Shape_area]' />
          <map key='[Shape_len]' value='[blkgrp10_shore.shp].[Shape_len]' />
          <map key='[TRACT_DEL]' value='[blkgrp10_shore.shp].[TRACT_DEL]' />
          <map key='[TRACT_FLT]' value='[blkgrp10_shore.shp].[TRACT_FLT]' />
          <map key='[TRACT_INT]' value='[blkgrp10_shore.shp].[TRACT_INT]' />
          <map key='[TRACT_LBL]' value='[blkgrp10_shore.shp].[TRACT_LBL]' />
          <map key='[TRACT_STR]' value='[blkgrp10_shore.shp].[TRACT_STR]' />
          <map key='[TRTLABEL_C]' value='[blkgrp10_shore.shp].[TRTLABEL_C]' />
          <map key='[TRTLABEL_F]' value='[blkgrp10_shore.shp].[TRTLABEL_F]' />
          <map key='[TRTLABEL_T]' value='[blkgrp10_shore.shp].[TRTLABEL_T]' />
          <map key='[adjusted_for_income]' value='[cost_adjusted_median_income.csv].[adjusted_for_income]' />
          <map key='[bicycling]' value='[sample_mode_choice_scaled.csv].[bicycling]' />
          <map key='[block_group]' value='[sample_mode_choice_scaled.csv].[block_group]' />
          <map key='[cost]' value='[cost_adjusted_median_income.csv].[cost]' />
          <map key='[driving]' value='[sample_mode_choice_scaled.csv].[driving]' />
          <map key='[geometry]' value='[BlockGroupGeocoded.csv].[geometry]' />
          <map key='[key (BlockGroupGeocoded.csv)]' value='[BlockGroupGeocoded.csv].[key]' />
          <map key='[key]' value='[cost_adjusted_median_income.csv].[key]' />
          <map key='[mode_index]' value='[sample_mode_choice_scaled.csv].[mode_index]' />
          <map key='[mode_index_scaled]' value='[sample_mode_choice_scaled.csv].[mode_index_scaled]' />
          <map key='[neighborhood_long]' value='[BlockGroupGeocoded.csv].[neighborhood_long]' />
          <map key='[neighborhood_short]' value='[BlockGroupGeocoded.csv].[neighborhood_short]' />
          <map key='[normalized]' value='[cost_adjusted_median_income.csv].[normalized]' />
          <map key='[scaled]' value='[cost_adjusted_median_income.csv].[scaled]' />
          <map key='[seattle_city_council_district]' value='[BlockGroupGeocoded.csv].[seattle_city_council_district]' />
          <map key='[transit]' value='[sample_mode_choice_scaled.csv].[transit]' />
          <map key='[urban_village]' value='[BlockGroupGeocoded.csv].[urban_village]' />
          <map key='[walking]' value='[sample_mode_choice_scaled.csv].[walking]' />
          <map key='[zipcode]' value='[BlockGroupGeocoded.csv].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>GEO_ID_GRP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEO_ID_GRP]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GEO_ID_GRP</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FEATURE_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FEATURE_ID]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>FEATURE_ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_LBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLKGRP_LBL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_LBL</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLKGRP_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BLKGRP_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_INT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_F</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_F]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_F</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_C</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_C]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_C</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_T</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_T]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_T</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_LBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_LBL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_LBL</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_STR</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TRACT_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_INT</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_FLT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TRACT_FLT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_FLT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_DEL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_DEL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_DEL</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_F</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_F]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_F</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_C</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_C]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_C</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_T</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_T]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_T</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>COUNTY_STR</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>COUNTY_INT</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>STATE_STR</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STATE_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>STATE_INT</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_1]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_1</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_2]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_2</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_3]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_3</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_4]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_4</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GROUP_AREA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GROUP_AREA]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GROUP_AREA</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GROUP_PERI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GROUP_PERI]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GROUP_PERI</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape_area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape_area]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Shape_area</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape_len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape_len]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Shape_len</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>28</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[key]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>key</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjusted_for_income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjusted_for_income]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>adjusted_for_income</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>normalized</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scaled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scaled]</local-name>
            <parent-name>[cost_adjusted_median_income.csv]</parent-name>
            <remote-alias>scaled</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[key (BlockGroupGeocoded.csv)]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>key</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geometry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geometry]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>geometry</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood_short</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood_short]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>neighborhood_short</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood_long</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood_long]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>neighborhood_long</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seattle_city_council_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seattle_city_council_district]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>seattle_city_council_district</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urban_village</remote-name>
            <remote-type>129</remote-type>
            <local-name>[urban_village]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>urban_village</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>5</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[BlockGroupGeocoded.csv]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>block_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[block_group]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>block_group</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>driving</remote-name>
            <remote-type>5</remote-type>
            <local-name>[driving]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>driving</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bicycling</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bicycling]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>bicycling</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[transit]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>transit</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walking</remote-name>
            <remote-type>5</remote-type>
            <local-name>[walking]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>walking</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode_index]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>mode_index</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode_index_scaled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mode_index_scaled]</local-name>
            <parent-name>[sample_mode_choice_scaled.csv]</parent-name>
            <remote-alias>mode_index_scaled</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Blkgrp Int' datatype='integer' name='[BLKGRP_INT]' role='measure' type='quantitative' />
      <column caption='Blkgrp Lbl' datatype='string' name='[BLKGRP_LBL]' role='dimension' type='nominal' />
      <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
      <column caption='County Int' datatype='integer' name='[COUNTY_INT]' role='measure' type='quantitative' />
      <column caption='County Str' datatype='string' name='[COUNTY_STR]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Scaled_100' datatype='real' name='[Calculation_1819172801024282624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[scaled] * 100' />
      </column>
      <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
      </column>
      <column caption='Filter Neighborhood Null' datatype='boolean' name='[Calculation_1819172801032802307]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='NOT ISNULL([neighborhood_long])' />
      </column>
      <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
      </column>
      <column caption='Mode Index Scaled100' datatype='real' name='[Calculation_1819172801128611846]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[mode_index_scaled]*100' />
      </column>
      <column aggregation='None' datatype='integer' name='[Cost (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[cost]' peg='0' size='0.321' />
      </column>
      <column aggregation='Sum' caption='Feature Id' datatype='integer' name='[FEATURE_ID]' role='dimension' type='ordinal' />
      <column caption='Geo Id Grp' datatype='string' name='[GEO_ID_GRP]' role='dimension' type='nominal' />
      <column caption='Group Area' datatype='real' name='[GROUP_AREA]' role='measure' type='quantitative' />
      <column caption='Group Peri' datatype='real' name='[GROUP_PERI]' role='measure' type='quantitative' />
      <column caption='Grplabel C' datatype='string' name='[GRPLABEL_C]' role='dimension' type='nominal' />
      <column caption='Grplabel F' datatype='string' name='[GRPLABEL_F]' role='dimension' type='nominal' />
      <column caption='Grplabel T' datatype='string' name='[GRPLABEL_T]' role='dimension' type='nominal' />
      <column caption='Level 1' datatype='string' name='[LEVEL_1]' role='dimension' type='nominal' />
      <column caption='Level 2' datatype='string' name='[LEVEL_2]' role='dimension' type='nominal' />
      <column caption='Level 3' datatype='string' name='[LEVEL_3]' role='dimension' type='nominal' />
      <column caption='Level 4' datatype='string' name='[LEVEL_4]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State Int' datatype='integer' name='[STATE_INT]' role='measure' type='quantitative' />
      <column caption='State Str' datatype='string' name='[STATE_STR]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Shape area' datatype='real' name='[Shape_area]' role='measure' type='quantitative' />
      <column caption='Shape len' datatype='real' name='[Shape_len]' role='measure' type='quantitative' />
      <column caption='Tract Del' datatype='string' name='[TRACT_DEL]' role='dimension' type='nominal' />
      <column caption='Tract Flt' datatype='real' name='[TRACT_FLT]' role='measure' type='quantitative' />
      <column caption='Tract Int' datatype='integer' name='[TRACT_INT]' role='measure' type='quantitative' />
      <column caption='Tract Lbl' datatype='string' name='[TRACT_LBL]' role='dimension' type='nominal' />
      <column caption='Tract Str' datatype='string' name='[TRACT_STR]' role='dimension' type='nominal' />
      <column caption='Trtlabel C' datatype='string' name='[TRTLABEL_C]' role='dimension' type='nominal' />
      <column caption='Trtlabel F' datatype='string' name='[TRTLABEL_F]' role='dimension' type='nominal' />
      <column caption='Trtlabel T' datatype='string' name='[TRTLABEL_T]' role='dimension' type='nominal' />
      <column caption='Adjusted For Income' datatype='real' name='[adjusted_for_income]' role='measure' type='quantitative' />
      <column caption='Bicycling' datatype='real' name='[bicycling]' role='measure' type='quantitative' />
      <column caption='Block Group' datatype='string' default-role='measure' default-type='quantitative' name='[block_group]' role='dimension' type='nominal' />
      <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
      <column caption='Driving' datatype='real' name='[driving]' role='measure' type='quantitative' />
      <column caption='Geometry1' datatype='string' name='[geometry]' role='dimension' type='nominal' />
      <column caption='Key' datatype='string' name='[key]' role='dimension' type='nominal' />
      <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
      <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
      <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
      <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
      <column caption='Normalized' datatype='real' name='[normalized]' role='measure' type='quantitative' />
      <column caption='Scaled' datatype='real' name='[scaled]' role='measure' type='quantitative' />
      <column caption='Seattle City Council District' datatype='string' name='[seattle_city_council_district]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Transit' datatype='real' name='[transit]' role='measure' type='quantitative' />
      <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
      <column caption='Walking' datatype='real' name='[walking]' role='measure' type='quantitative' />
      <column caption='Zipcode' datatype='real' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Cost (bin)]' derivation='None' name='[none:Cost (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blkgrp Str)' hidden='true' name='[Action (Blkgrp Str)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BLKGRP_STR]' />
        </groupfilter>
      </group>
      <group caption='Action (Cost (bin))' hidden='true' name='[Action (Cost (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cost (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (In Urban Village)' hidden='true' name='[Action (In Urban Village)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1819172801032105986]' />
        </groupfilter>
      </group>
      <group caption='Action (Mode Index (bin))' hidden='true' name='[Action (Mode Index (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighborhood Long)' hidden='true' name='[Action (Neighborhood Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neighborhood_long]' />
        </groupfilter>
      </group>
      <group caption='Action (Show Neighborhood Short if No Broader Term)' hidden='true' name='[Action (Show Neighborhood Short if No Broader Term)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1819172801037238276]' />
        </groupfilter>
      </group>
      <group caption='Action (Show Neighborhood Short if No Broader Term,Neighborhood Long)' hidden='true' name='[Action (Show Neighborhood Short if No Broader Term,Neighborhood Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1819172801037238276]' />
          <groupfilter function='level-members' level='[neighborhood_long]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='STATE_STR, COUNTY_STR'>
          <field>[STATE_STR]</field>
          <field>[COUNTY_STR]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/dariu/Documents/My Tableau Repository/Datasources/blockgroup_geocoded_affordability.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/03/2018 12:53:13 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[BLKGRP_INT]' value='[Extract].[BLKGRP_INT]' />
            <map key='[BLKGRP_LBL]' value='[Extract].[BLKGRP_LBL]' />
            <map key='[BLKGRP_STR]' value='[Extract].[BLKGRP_STR]' />
            <map key='[COUNTY_INT]' value='[Extract].[COUNTY_INT]' />
            <map key='[COUNTY_STR]' value='[Extract].[COUNTY_STR]' />
            <map key='[FEATURE_ID]' value='[Extract].[FEATURE_ID]' />
            <map key='[GEO_ID_GRP]' value='[Extract].[GEO_ID_GRP]' />
            <map key='[GROUP_AREA]' value='[Extract].[GROUP_AREA]' />
            <map key='[GROUP_PERI]' value='[Extract].[GROUP_PERI]' />
            <map key='[GRPLABEL_C]' value='[Extract].[GRPLABEL_C]' />
            <map key='[GRPLABEL_F]' value='[Extract].[GRPLABEL_F]' />
            <map key='[GRPLABEL_T]' value='[Extract].[GRPLABEL_T]' />
            <map key='[Geometry]' value='[Extract].[Geometry]' />
            <map key='[LEVEL_1]' value='[Extract].[LEVEL_1]' />
            <map key='[LEVEL_2]' value='[Extract].[LEVEL_2]' />
            <map key='[LEVEL_3]' value='[Extract].[LEVEL_3]' />
            <map key='[LEVEL_4]' value='[Extract].[LEVEL_4]' />
            <map key='[STATE_INT]' value='[Extract].[STATE_INT]' />
            <map key='[STATE_STR]' value='[Extract].[STATE_STR]' />
            <map key='[Shape_area]' value='[Extract].[Shape_area]' />
            <map key='[Shape_len]' value='[Extract].[Shape_len]' />
            <map key='[TRACT_DEL]' value='[Extract].[TRACT_DEL]' />
            <map key='[TRACT_FLT]' value='[Extract].[TRACT_FLT]' />
            <map key='[TRACT_INT]' value='[Extract].[TRACT_INT]' />
            <map key='[TRACT_LBL]' value='[Extract].[TRACT_LBL]' />
            <map key='[TRACT_STR]' value='[Extract].[TRACT_STR]' />
            <map key='[TRTLABEL_C]' value='[Extract].[TRTLABEL_C]' />
            <map key='[TRTLABEL_F]' value='[Extract].[TRTLABEL_F]' />
            <map key='[TRTLABEL_T]' value='[Extract].[TRTLABEL_T]' />
            <map key='[adjusted_for_income]' value='[Extract].[adjusted_for_income]' />
            <map key='[bicycling]' value='[Extract].[bicycling]' />
            <map key='[block_group]' value='[Extract].[block_group]' />
            <map key='[cost]' value='[Extract].[cost]' />
            <map key='[driving]' value='[Extract].[driving]' />
            <map key='[geometry]' value='[Extract].[geometry1]' />
            <map key='[key (BlockGroupGeocoded.csv)]' value='[Extract].[key]' />
            <map key='[key]' value='[Extract].[key1]' />
            <map key='[mode_index]' value='[Extract].[mode_index]' />
            <map key='[mode_index_scaled]' value='[Extract].[mode_index_scaled]' />
            <map key='[neighborhood_long]' value='[Extract].[neighborhood_long]' />
            <map key='[neighborhood_short]' value='[Extract].[neighborhood_short]' />
            <map key='[normalized]' value='[Extract].[normalized]' />
            <map key='[scaled]' value='[Extract].[scaled]' />
            <map key='[seattle_city_council_district]' value='[Extract].[seattle_city_council_district]' />
            <map key='[transit]' value='[Extract].[transit]' />
            <map key='[urban_village]' value='[Extract].[urban_village]' />
            <map key='[walking]' value='[Extract].[walking]' />
            <map key='[zipcode]' value='[Extract].[zipcode]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='481' timestamp-start='2018-08-03 00:53:13.670' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>GEO_ID_GRP</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GEO_ID_GRP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GEO_ID_GRP</remote-alias>
              <ordinal>0</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FEATURE_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FEATURE_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FEATURE_ID</remote-alias>
              <ordinal>1</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_LBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BLKGRP_LBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_LBL</remote-alias>
              <ordinal>2</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BLKGRP_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_STR</remote-alias>
              <ordinal>3</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[BLKGRP_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_INT</remote-alias>
              <ordinal>4</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_F</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_F]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_F</remote-alias>
              <ordinal>5</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_C</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_C</remote-alias>
              <ordinal>6</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_T</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_T]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_T</remote-alias>
              <ordinal>7</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_LBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_LBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_LBL</remote-alias>
              <ordinal>8</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_STR</remote-alias>
              <ordinal>9</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TRACT_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_INT</remote-alias>
              <ordinal>10</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_FLT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TRACT_FLT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_FLT</remote-alias>
              <ordinal>11</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_DEL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_DEL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_DEL</remote-alias>
              <ordinal>12</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_F</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_F]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_F</remote-alias>
              <ordinal>13</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_C</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_C</remote-alias>
              <ordinal>14</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_T</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_T]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_T</remote-alias>
              <ordinal>15</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTY_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_STR</remote-alias>
              <ordinal>16</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[COUNTY_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_INT</remote-alias>
              <ordinal>17</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE_STR</remote-alias>
              <ordinal>18</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[STATE_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE_INT</remote-alias>
              <ordinal>19</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_1</remote-alias>
              <ordinal>20</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_2</remote-alias>
              <ordinal>21</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_3</remote-alias>
              <ordinal>22</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_4</remote-alias>
              <ordinal>23</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GROUP_AREA</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GROUP_AREA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GROUP_AREA</remote-alias>
              <ordinal>24</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GROUP_PERI</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GROUP_PERI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GROUP_PERI</remote-alias>
              <ordinal>25</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shape_area</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shape_area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shape_area</remote-alias>
              <ordinal>26</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shape_len</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shape_len]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shape_len</remote-alias>
              <ordinal>27</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Geometry</remote-name>
              <remote-type>128</remote-type>
              <local-name>[Geometry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Geometry</remote-alias>
              <ordinal>28</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>spatial</local-type>
              <aggregation>Collect</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cost</remote-alias>
              <ordinal>29</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>key1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>key1</remote-alias>
              <ordinal>30</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>adjusted_for_income</remote-name>
              <remote-type>5</remote-type>
              <local-name>[adjusted_for_income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>adjusted_for_income</remote-alias>
              <ordinal>31</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>normalized</remote-alias>
              <ordinal>32</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>scaled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[scaled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>scaled</remote-alias>
              <ordinal>33</ordinal>
              <family>cost_adjusted_median_income.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>key</remote-name>
              <remote-type>129</remote-type>
              <local-name>[key (BlockGroupGeocoded.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>key</remote-alias>
              <ordinal>34</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geometry1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geometry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geometry1</remote-alias>
              <ordinal>35</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighborhood_short</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighborhood_short]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighborhood_short</remote-alias>
              <ordinal>36</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>89</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighborhood_long</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighborhood_long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighborhood_long</remote-alias>
              <ordinal>37</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seattle_city_council_district</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seattle_city_council_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seattle_city_council_district</remote-alias>
              <ordinal>38</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>urban_village</remote-name>
              <remote-type>129</remote-type>
              <local-name>[urban_village]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>urban_village</remote-alias>
              <ordinal>39</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zipcode</remote-name>
              <remote-type>5</remote-type>
              <local-name>[zipcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zipcode</remote-alias>
              <ordinal>40</ordinal>
              <family>BlockGroupGeocoded.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>block_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[block_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>block_group</remote-alias>
              <ordinal>41</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>481</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>driving</remote-name>
              <remote-type>5</remote-type>
              <local-name>[driving]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>driving</remote-alias>
              <ordinal>42</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>128</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bicycling</remote-name>
              <remote-type>5</remote-type>
              <local-name>[bicycling]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bicycling</remote-alias>
              <ordinal>43</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>transit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[transit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>transit</remote-alias>
              <ordinal>44</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>88</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>walking</remote-name>
              <remote-type>5</remote-type>
              <local-name>[walking]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>walking</remote-alias>
              <ordinal>45</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mode_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mode_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mode_index</remote-alias>
              <ordinal>46</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>397</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mode_index_scaled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mode_index_scaled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mode_index_scaled</remote-alias>
              <ordinal>47</ordinal>
              <family>sample_mode_choice_scaled.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>397</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.51928' measure-ordering='alphabetic' measure-percentage='0.48072' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='GEO_ID_GRP' />
        <field-sort-custom-order field='FEATURE_ID' />
        <field-sort-custom-order field='BLKGRP_LBL' />
        <field-sort-custom-order field='BLKGRP_STR' />
        <field-sort-custom-order field='BLKGRP_INT' />
        <field-sort-custom-order field='GRPLABEL_F' />
        <field-sort-custom-order field='GRPLABEL_C' />
        <field-sort-custom-order field='GRPLABEL_T' />
        <field-sort-custom-order field='TRACT_LBL' />
        <field-sort-custom-order field='TRACT_STR' />
        <field-sort-custom-order field='TRACT_INT' />
        <field-sort-custom-order field='TRACT_FLT' />
        <field-sort-custom-order field='TRACT_DEL' />
        <field-sort-custom-order field='TRTLABEL_F' />
        <field-sort-custom-order field='TRTLABEL_C' />
        <field-sort-custom-order field='TRTLABEL_T' />
        <field-sort-custom-order field='COUNTY_STR' />
        <field-sort-custom-order field='COUNTY_INT' />
        <field-sort-custom-order field='STATE_STR' />
        <field-sort-custom-order field='STATE_INT' />
        <field-sort-custom-order field='LEVEL_1' />
        <field-sort-custom-order field='LEVEL_2' />
        <field-sort-custom-order field='LEVEL_3' />
        <field-sort-custom-order field='LEVEL_4' />
        <field-sort-custom-order field='GROUP_AREA' />
        <field-sort-custom-order field='GROUP_PERI' />
        <field-sort-custom-order field='Shape_area' />
        <field-sort-custom-order field='Shape_len' />
        <field-sort-custom-order field='Geometry' />
        <field-sort-custom-order field='key (BlockGroupGeocoded.csv)' />
        <field-sort-custom-order field='geometry' />
        <field-sort-custom-order field='neighborhood_short' />
        <field-sort-custom-order field='neighborhood_long' />
        <field-sort-custom-order field='Calculation_1819172801037238276' />
        <field-sort-custom-order field='Calculation_1819172801032802307' />
        <field-sort-custom-order field='seattle_city_council_district' />
        <field-sort-custom-order field='urban_village' />
        <field-sort-custom-order field='Calculation_1819172801032105986' />
        <field-sort-custom-order field='zipcode' />
        <field-sort-custom-order field='cost' />
        <field-sort-custom-order field='key' />
        <field-sort-custom-order field='adjusted_for_income' />
        <field-sort-custom-order field='normalized' />
        <field-sort-custom-order field='scaled' />
        <field-sort-custom-order field='Calculation_1819172801024282624' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affordability' type='sheet' worksheet='Affordability Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordability' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affordability' type='sheet' worksheet='Affordability Histogram' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordability' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affordability' type='sheet' worksheet='Affordability Neighborhoods' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordability' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affordability' type='sheet' worksheet='Affordability Urban Villages' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordability' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mode Choice' type='sheet' worksheet='Mode Index Neighborhoods' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mode Choice' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mode Choice' type='sheet' worksheet='Mode Choice Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mode Choice' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mode Choice' type='sheet' worksheet='Mode Choice Stats' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mode Choice' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mode Choice' type='sheet' worksheet='Mode Choice Histogram' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mode Choice' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Affordability Histogram'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column aggregation='None' datatype='integer' name='[Cost (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[cost]' peg='0' size='0.321' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cost]' derivation='Count' name='[cnt:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Cost (bin)]' derivation='None' name='[none:Cost (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[cnt:cost:qk]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Cost (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Affordability Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='Scaled_100' datatype='real' name='[Calculation_1819172801024282624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[scaled] * 100' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[BLKGRP_STR]' derivation='None' name='[none:BLKGRP_STR:nk]' pivot='key' type='nominal' />
            <column caption='Scaled' datatype='real' name='[scaled]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1819172801024282624]' derivation='Sum' name='[sum:Calculation_1819172801024282624:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Longitude (generated)]' field-type='quantitative' max='-13600313.591388131' min='-13635007.956226623' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Latitude (generated)]' field-type='quantitative' max='6064318.4906755844' min='6022479.2751931725' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801024282624:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801024282624:qk]' />
              <lod column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[clct:Geometry:nk]' />
              <lod column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:BLKGRP_STR:nk]' />
              <geometry column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[clct:Geometry:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Latitude (generated)]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Affordability Neighborhoods'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Filter Neighborhood Null' datatype='boolean' name='[Calculation_1819172801032802307]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='NOT ISNULL([neighborhood_long])' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1819172801032802307]' derivation='None' name='[none:Calculation_1819172801032802307:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighborhood_long]' derivation='None' name='[none:neighborhood_long:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]'>
            <groupfilter function='member' level='[none:Calculation_1819172801032802307:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]' value='232' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Affordability Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary Statistics&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[cost]' derivation='Median' name='[med:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Multiple Values]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Affordability Urban Villages'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[cost]' derivation='Median' name='[med:cost:qk]' pivot='key' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1819172801032105986]' derivation='None' name='[none:Calculation_1819172801032105986:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]' direction='DESC' using='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]' value='232' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='670' />
                <format attr='maxwidth' value='670' />
                <format attr='minheight' value='40' />
                <format attr='maxheight' value='40' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='2' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#000000' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]</rows>
        <cols>([federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk] + [federated.1vmhr2y11w0na212hwraf0n0hai7].[med:cost:qk])</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Mode Choice Histogram'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column aggregation='None' datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[mode_index]' derivation='Avg' name='[avg:mode_index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mode_index]' derivation='Count' name='[cnt:mode_index:qk]' pivot='key' type='quantitative' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Mode Index (bin):qk]' field-type='quantitative' max='0.90952500000000003' min='0.41177500000000006' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[cnt:mode_index:qk]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Mode Index (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Mode Index (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Mode Choice Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column caption='Mode Index Scaled100' datatype='real' name='[Calculation_1819172801128611846]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[mode_index_scaled]*100' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column aggregation='None' datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[BLKGRP_STR]' derivation='None' name='[none:BLKGRP_STR:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1819172801128611846]' derivation='Sum' name='[sum:Calculation_1819172801128611846:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mode_index]' derivation='Sum' name='[sum:mode_index:qk]' pivot='key' type='quantitative' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]'>
            <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Longitude (generated)]' field-type='quantitative' max='-13581783.099403005' min='-13648339.636031952' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Latitude (generated)]' field-type='quantitative' max='6065929.1294546528' min='6021837.0331385713' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801128611846:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801128611846:qk]' />
              <lod column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[clct:Geometry:nk]' />
              <lod column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:BLKGRP_STR:nk]' />
              <tooltip column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:mode_index:qk]' />
              <geometry column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[clct:Geometry:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Latitude (generated)]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Mode Choice Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary Statistics&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column aggregation='None' datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[mode_index_scaled]' derivation='Avg' name='[avg:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mode_index_scaled]' derivation='Median' name='[med:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]'>
            <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Multiple Values]' value='p0%' />
            <format attr='height' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]' value='240' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Mode Choice Urban Villages'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Show Neighborhood Short if No Broader Term' datatype='string' name='[Calculation_1819172801037238276]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neighborhood_long] = &quot;NO BROADER TERM&quot;&#13;&#10;THEN [neighborhood_short]&#13;&#10;END' />
            </column>
            <column aggregation='None' datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mode_index_scaled]' derivation='Avg' name='[avg:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column-instance column='[mode_index_scaled]' derivation='Median' name='[med:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1819172801032105986]' derivation='None' name='[none:Calculation_1819172801032105986:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]'>
            <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]'>
            <groupfilter function='level-members' level='[neighborhood_long]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801037238276]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]' direction='DESC' using='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' />
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Neighborhood Long)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Show Neighborhood Short if No Broader Term)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]' value='232' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='670' />
                <format attr='maxwidth' value='670' />
                <format attr='minheight' value='40' />
                <format attr='maxheight' value='40' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='2' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]</rows>
        <cols>([federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk] + [federated.1vmhr2y11w0na212hwraf0n0hai7].[med:mode_index_scaled:qk])</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Mode Index Neighborhoods'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='blkgrp10_shore' name='federated.1vmhr2y11w0na212hwraf0n0hai7' />
          </datasources>
          <datasource-dependencies datasource='federated.1vmhr2y11w0na212hwraf0n0hai7'>
            <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
            <column caption='In Urban Village' datatype='string' name='[Calculation_1819172801032105986]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([urban_village]) THEN &quot;Outside Urban Village&quot;&#13;&#10;ELSE &quot;In Urban Village&quot;&#13;&#10;END' />
            </column>
            <column caption='Filter Neighborhood Null' datatype='boolean' name='[Calculation_1819172801032802307]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='NOT ISNULL([neighborhood_long])' />
            </column>
            <column aggregation='None' datatype='integer' name='[Mode Index (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[mode_index]' peg='0' size='0.0181' />
            </column>
            <column-instance column='[mode_index_scaled]' derivation='Avg' name='[avg:mode_index_scaled:qk]' pivot='key' type='quantitative' />
            <column caption='Mode Index' datatype='real' name='[mode_index]' role='measure' type='quantitative' />
            <column caption='Mode Index Scaled' datatype='real' name='[mode_index_scaled]' role='measure' type='quantitative' />
            <column caption='Neighborhood Long' datatype='string' name='[neighborhood_long]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1819172801032802307]' derivation='None' name='[none:Calculation_1819172801032802307:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mode Index (bin)]' derivation='None' name='[none:Mode Index (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighborhood_long]' derivation='None' name='[none:neighborhood_long:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]'>
            <groupfilter function='level-members' level='[BLKGRP_STR]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]'>
            <groupfilter function='level-members' level='[Calculation_1819172801032105986]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]'>
            <groupfilter function='level-members' level='[none:Mode Index (bin):ok]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]'>
            <groupfilter function='member' level='[none:Calculation_1819172801032802307:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Blkgrp Str)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (In Urban Village)]</column>
            <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Action (Mode Index (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]' value='232' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</rows>
        <cols>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]</cols>
        <show-full-range>
          <column>[federated.1vmhr2y11w0na212hwraf0n0hai7].[Cost (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Affordability'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='94734' id='16' param='horz' type='layout-flow' w='95173' x='2412' y='4388'>
            <zone h='94734' id='13' param='horz' type='layout-flow' w='95173' x='2412' y='4388'>
              <zone h='94734' id='5' param='horz' type='layout-flow' w='95173' x='2412' y='4388'>
                <zone h='94734' id='3' type='layout-basic' w='95173' x='2412' y='4388'>
                  <zone h='85669' id='1' name='Affordability Map' show-title='false' w='42971' x='2412' y='4388'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9065' id='6' name='Affordability Map' pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801024282624:qk]' type='color' w='42971' x='2412' y='90057'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32712' id='9' name='Affordability Histogram' w='42244' x='55341' y='10318'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5930' id='10' name='Affordability Stats' show-title='false' w='42244' x='55341' y='4388'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='23600' id='11' name='Affordability Urban Villages' w='52202' x='45383' y='43030'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32492' id='14' name='Affordability Neighborhoods' w='52202' x='45383' y='66630'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32712' id='20' type='empty' w='9958' x='45383' y='10318'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5930' id='21' type='empty' w='9958' x='45383' y='4388'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='3510' id='17' type='empty' w='95173' x='2412' y='878'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98244' id='18' type='empty' w='1929' x='483' y='878'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98244' id='19' type='empty' w='1932' x='97585' y='878'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Mode Choice'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98244' id='30' param='horz' type='layout-flow' w='99034' x='483' y='878'>
            <zone h='98244' id='25' param='horz' type='layout-flow' w='99034' x='483' y='878'>
              <zone h='98244' id='23' type='layout-basic' w='99034' x='483' y='878'>
                <zone h='94734' id='16' param='horz' type='layout-flow' w='95170' x='2412' y='4388'>
                  <zone h='94734' id='13' param='horz' type='layout-flow' w='95170' x='2412' y='4388'>
                    <zone h='94734' id='5' param='horz' type='layout-flow' w='95170' x='2412' y='4388'>
                      <zone h='94734' id='3' type='layout-basic' w='95170' x='2412' y='4388'>
                        <zone h='3513' id='20' type='empty' w='47587' x='49995' y='95609'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='3515' id='21' type='empty' w='95170' x='2412' y='4388'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='87706' id='22' name='Mode Choice Map' show-title='false' w='47583' x='2412' y='7903'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='5050' id='27' name='Mode Choice Stats' show-title='false' w='44072' x='53510' y='7903'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='3513' id='26' name='Mode Choice Map' pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801128611846:qk]' show-title='false' type='color' w='47583' x='2412' y='95609'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='36992' id='28' name='Mode Choice Histogram' w='44072' x='53510' y='12953'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='12075' id='32' name='Mode Choice Urban Villages' w='44072' x='53510' y='49945'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='33589' id='34' name='Mode Index Neighborhoods' w='44072' x='53510' y='62020'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='38529' id='35' type='empty' w='3515' x='49995' y='57080'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='12404' id='36' type='empty' w='3515' x='49995' y='44676'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='27224' id='37' type='empty' w='3515' x='49995' y='17452'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='9549' id='38' type='empty' w='3515' x='49995' y='7903'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='3510' id='17' type='empty' w='95170' x='2412' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98244' id='18' type='empty' w='1929' x='483' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98244' id='19' type='empty' w='1935' x='97582' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Affordability Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801024282624:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09lp5xg06z8zjy11wyry712ss8ta].[none:key (BlockGroupGeocoded.csv):nk]</field>
            <field>[federated.09lp5xg06z8zjy11wyry712ss8ta].[none:key:nk]</field>
            <field>[federated.1amspho1o7bv7q1888a3t0h6g01t].[none:geometry:nk]</field>
            <field>[federated.1amspho1o7bv7q1888a3t0h6g01t].[none:key:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:BLKGRP_STR:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Affordability Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Affordability Neighborhoods'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801037238276:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Affordability Urban Villages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:urban_village:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Affordability Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Affordability'>
      <viewpoints>
        <viewpoint name='Affordability Histogram'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Affordability Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Affordability Neighborhoods' />
        <viewpoint name='Affordability Stats'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Affordability Urban Villages' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Mode Choice Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[sum:Calculation_1819172801128611846:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09lp5xg06z8zjy11wyry712ss8ta].[none:key (BlockGroupGeocoded.csv):nk]</field>
            <field>[federated.09lp5xg06z8zjy11wyry712ss8ta].[none:key:nk]</field>
            <field>[federated.1amspho1o7bv7q1888a3t0h6g01t].[none:geometry:nk]</field>
            <field>[federated.1amspho1o7bv7q1888a3t0h6g01t].[none:key:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:BLKGRP_STR:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mode Choice Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Mode Index (bin):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mode Index Neighborhoods'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:cost:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032802307:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801037238276:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mode Choice Urban Villages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[avg:mode_index_scaled:qk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:Calculation_1819172801032105986:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:neighborhood_long:nk]</field>
            <field>[federated.1vmhr2y11w0na212hwraf0n0hai7].[none:urban_village:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Mode Choice Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Mode Choice'>
      <viewpoints>
        <viewpoint name='Mode Choice Histogram'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mode Choice Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mode Choice Stats'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Mode Choice Urban Villages' />
        <viewpoint name='Mode Index Neighborhoods' />
      </viewpoints>
      <active id='22' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Affordability' width='192'>
      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
      vPe50nDrEAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Affordability Histogram' width='192'>
      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
      IsJX16IAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Affordability Map' width='192'>
      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
      68z2er0pZ3mjhJm9hnr3OLtjfL9nf++VPM/jrz3xEb7z9W/zwvJpFmdSwhVB3hHIngIl0KOC
      flMTJJq0KWgNfdO+sAyR0hvvBDVTVxoskeUXKTUynRTMbG00aB9p0eLeO31XE2LiOKbVbNFq
      Nmk2mjTimCgI8aVH4PnVGEurnW0e4G6YxmU8y9Au5scNw1phsdBniwNyF8iC4GxuwWKBXN/C
      HbZxO1/gtSra3qbbk5SSj3zow8aHVCZJJnLNMDY5grQDoRfiiwm0vSxLvNTUBng5xENJa0XS
      XDEJMK9cH6BBGCRqO/WIxrv//P57M3+gGl4/HZFxoyqWXEaxjmy9q8PtaKOCeFcr29fdMku3
      SMYmtOx7bgWYFYw0Tasstf1svSrMXoe99nsJ5b5N60lrTegH/PzHfoqWiEjCkkbmoQWkkSIe
      SESuUIGJ4MSppJ2H5E1MEswzYLikbYZrJC0NEuKBIOpDPBTEI4mfwW7V4vhjO1l4wEyh7DZm
      bn9xt6GqPbqriV2NuZETmef51ByvO6Esy6Y+72pjNyJjj99qtWi32xVj2zi93Q1cZKkrVO51
      1qNM7n3WgX1vC8HrozAMed/73kdRFCwOV/jUq39M3hS0i5ikUeDlkpGfEzQCmgNB2TClqHnT
      NGmPxhORSp/KQUYYpxisG6Bolx5b97YrPJBWmnceeNc9X7dvE0guM2xUV2v/tlrZYvndnju3
      I9u4yo221M0Z+7m5ubmpEks3C2y/4xbs2+t2yV6Xu7u4+QR7324E6W16/SSl5Kc+9km+9uK3
      uJkt4xcCmXuEKXhxgOhpPClAaYTQxCsGG+QVgqhvnmEwRst4qakRQGv0eDpBkAskUJaK7EaG
      l3gc/fjRe75e37Wt6z8u01hzwYYyrSZeXluh2WzRjDavCYbpjg6uELitTYqioNPpbFhfvNH3
      LQDO7eBWzyDXk2ZT+Y7xPQBvg+HeILp67Sp//M0/Y+BnjEKNlJqyVEjtkXUFItFQlhSxcWWj
      kQHAWf1jnpGBQwgFaWs6WhcMQSlIL46IZkMO7z7yuuo2/Lpm3aw0UQhBkiTkZWFqBwCtFaUy
      gLnA8wj8zS8kjmNWV1fX9fmBiY2fZdlrNqOyGtytCdioPYsbUarvEtbMcqdI2l6ib4dCXx9d
      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
      938BN6G2deP9qaUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Affordability Neighborhoods' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='46' name='Affordability Stats' width='164'>
      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
    </thumbnail>
    <thumbnail height='171' name='Affordability Urban Villages' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mode Choice' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5BkSX7Y98vM58p0tRu7M7Ozu7Oz5tacxZ7D3YE6CJCOAAKGAIEATwoJ
      CkkACYUCHxQhhD4wSElUiF9IKYIEKEFBCRShAAEGARKOONwdgLM4t97Mjt3xpqe7yz2bL/Xh
      Vb7Oel09Oz3Y2z1c1z9iprurnknz9y6FMcYwhznsUZDv9ADmMId3EuYEMIc9DXMCmMOehjkB
      zGFPw5wA5rCnYU4Ac9jTMCeAOexpmBPAHPY0zAlgDnsa5gQwhz0NcwKYw56GOQHMYU/DnADm
      sKdhTgBz2NMwJ4A57GmYE8Ac9jTMCWAOexq8u71wXjg2h+9GuGsCABgOh9+uccxhDu8IzFWg
      OexpmBPAHPY0zAlgDnsa5gQwhz0NcwKYw56GOQHMYU/DnADmsKdhTgBz2NMwJ4A57GmYE8Ac
      9jTMCWAOexrmBDCHPQ1zApjDnoY5AcxhT8OcAOawp2FOAHPY0zAngDnsaZgTwBz2NMwJYA57
      GuYEMIc9DXMCmMOehjkBzGFPw5wA5rCnYU4Ac9jTMCeAOexpmBPAHPY0zAlgDnsa5gQwhz0N
      cwKYw56GOQHMYU/DnADmsKdhTgBz2NMwJ4A57GmYE8Ac9jTMCWAOexrmBDCHPQ27OiRPaw2A
      lJKyLAEQQtQnSAohgOkTJe3vUsqpz5RS+L4PQJ7nFEVRP1dKiTFm6j3Nd70Z2LEIIQiCYDfT
      /EtDkiT1HIwx5EUBAnzPQyDqeSRJQhiGU/MejUa02+2p52mtUUrV8ynLsp6fC8YYsiyj3W7j
      ed6274qiIM0yhBAoKVFK1WMEKIoCYwye59XPb77LjtN+rrXG932MMfW88jzH87x6z40xlGU5
      NYc320f3eS4IIfB9HyllhTdaIydrYnHGHbv9rPlcC7s6JlVrXQ+qLMsp5HQn5g68LEt83992
      b6fTqQmgKArKspwiAru49rl2EvadOy2Q/VspVU80CIKpRfh2Qp7nU0hVYhglY3zPRwCe8mok
      SpIEA4QTAtVa0+/3awIotMZTijzPp8Zv77e/23kOBgMWFxdpt9vb5pumKeMkBmNACKTw672x
      YPdpNBqRZilRGFXEMkFc951lWaK1rgnAjkMIQZZlSCmn9jzPc3zfr5/njruJlO48LbiM1PM8
      PM8jSRLyPMNTXo3oWusah3SpKY1BIqbW454IwE7ObpTWuuYyLiJaCrQTtJzQfaklAgudTocw
      DInjeIq47ERcTjVLuriLaN/ZHOvbRQCWi7rE63s+SkoE1ZjcNfEdbmuModVqURQFQgjyIofJ
      nLMiR0lVPaeBOEII4jhmZWWFVqu1ba7GGNI0JclSlJC0oxZQIViaptsYlvIUi+0lNvt9FrsL
      DOIRGEMn2pJMSinG4zFBEExxWStBDKb+287ZjnWWdHEJyIIdlzEGXWqQgiLXeGlKHMfVWKWq
      18EdgzHVCEI/2KatuNJ5VxLAHexuEMoisUsY/X6fXq839WyXa1uktVLBIpX93V1cOzl3wSxE
      UbRNHfh2gqt6WWKO/KAmZnctLGG799r5eZ5HNEGavChI8wyATthCKTVF1EVR4Ps+nU5n23iM
      MYzHY7I8QwoJzjq5a2bfL4RACUWpS5YWemRFTuj5lMZgMEixtf4uh5/iqp5HlmW0Wq36Os/z
      pqR2E9GbEsDiipSSQmu0MQTSIy/ymvBcPLSSx/MqCWsAX1X77hKGJUT7+64ww26o7/sURbHt
      u1kTcTmLixxCCAaDAb1er9bRgyDY8X6o1IvhcLjtXXbSdkOsnhiG4ZQ++3ZAGIaVauNwGsuB
      pJRTBOxunjtHi8g1sgCRH5AVBbqs7AGrltjnLy4u7qhGjJOYLM8Ag5JqG8cXDaKwn5eA0RXB
      KkAwrXI21VGXAQVBwGg0otvt4nlereY2VZVZ0qD5uZISJSuEH49GFEXBYDAgCAKGwyHtdhsh
      BEVRoJRic3OTAwcOcPDgwSninqUx7EoFctWR5oRn6XPN61xjznL34XDI0tLSjhLF3VTf92up
      YRfM5e4uojXvfbtACEEURYzH4/rvphFp1yzLsikd3CLzLNtGCknkb2cQ9r6d5loUBb7y8JSi
      PxpWevEMw9ZKJXc/Zz3XVXcsTlgdX04Ma3uPXQdrkxgMpS4ptGaUxrSCCE+pbepRk2m4DKPX
      61EUBcvLy5RlydLSEgCtVqtWOw8ePDglXV3G21TJd6UCufp9U9XYaTOaC22vseJLa02e54Rh
      +KZjaCJ8EyxxvdMQBEFNAGaiOqRZpcJIKQk8f8or4m5Uq90iTVOiKCIvCjxnI+3alqYky/Pq
      HjNbhbDXZ5P3CgTtsDVlmzQlqfsea6hamMWgLBdXSqEdSWJVNIsrWZZVxDCKUUKhRKWbb9PZ
      HdxpjslCU/oBtcfJ87wpLcB9dvNvu/53rcjPEpPN792fLjTFpn2WXeB8spnfLSClrNW5Wt9U
      Cm1KckcVqPVVq46YSncdDodsbm7iOdwUoCg1SZ5hjCHJUtI8I0nTmW5PqBDUPr8sS3zPw58g
      S9OOKhsIbL+zktp+56px9RxMSZwlZEVev9NeG0UReV59LoVECMBAYB0DjtrTdFe6THaWjWDv
      c9Wlne7fJlGtrXW3m+o+wOparqhuWtez7hNCTFGoa/DeSYz/VYQgCMjzvJonAq3zSuoJWdtR
      7npApeakccLa2hoAi4uL9aZ6nrflR5eCXrtLmqb4ob/julkDWusCECBATwxmT3nbmNYs9XWW
      DWe/hy0E7HUWKherAy5Raa1pRy2SLJ1CWJcY3XE3EbdJCDtJjVkOmp00kl0RAFAbvnfS13dS
      jez31hvi6pLfjWCM4fypV0BrhNHoPGOUVW7NzlKEFAJdVtIvCn2yoiTwFVlesLZ2G4HP6SzG
      ALku8cIQhERIiVQKISRFkdNutVFKceToURYWFqbGIKUkKzLyvKjdkkIITA6+52/9PYP5zLJD
      mrbc1H1m2hXqIr/v+8RxTBRFlWplDKrhl28a4/bz5vub0FSxM10QCIFsPGcWQe3KCIbpCLB9
      SJNr2OuahGCvcY0ke43lht9N4Ps+fPl3ud/0qXDP8PIQQiU4+WMHQQg2BwXDsuToQsCZyykP
      HPKRHUG5aHj16xscO5UAcDUBT0kGBbQUdBRcTUqCUHF5X8iTGykXugd56G/9Eu1Otx6DEILe
      Qo+19dswsRXaYQRmmqO6+2GR2I36u65D9x5X7Woa0K4xK6UkDMNKDTKSOI4Jw7B2ALjG6Z00
      AZdxus8uy5JiYtxDZZArtRUzcaWZ/b3ONrjbDW2qLe7nLtiB7WQgW1+4TX+wLrPvNpBSopYP
      IgEpQAox+QlCgMCgpBXd4EnQpUEIUNL646n+YZAYFAZjoCUhUZJ+zycMJS1pWB5eZ+PWzW3j
      CBwvk92rTBdkE/XM/c5FkqY+bgmh6fuf5fSYxfjcCO7i4mK9967HxwU3eOX+s+NSjvdISomv
      PJSQSETlbTLltNTbwSO0Kx3EWuCzkNvlFLMW1gXrE1ZK1WLxuxHELI+VMbz0e7d47ZsDbm/m
      nL6Y8sLrMZtDzZlLObf7Extpcnlpqt98KRho6PkQl9BZ8vjgJ5aIwmoLQ2EY3biy7XW+59ec
      2hhDmmcYzJQt5nL4nTwxVvWx0rrpOrXXu/r9LHXYqjpqkuIxi1hgOlretBNcRuo+0/d9fK/K
      E/KUB8yWJMYYCl3QHw93ZwRbb4A7QNdIste5C9G0C6xohYqgWq3Wd536AxMPzO1rANzOYT0z
      XE8NgYDv7ZSYmwkvthUPHQm4/9CWBLx+u+DclRS73c8OKhfmYWlQwLiAFweGZVHy+W+M6LUF
      X/Z8PlzkZOdehO/56NQ4hBAsdhbIsoyirBLHQBCnMYPRECEFxkAUBLVd4BKCu7+u0WrVDAtN
      Z4gb+W6ClBLf90nTdOped8yzJEszXcJVqy1B57rAGEjzFCUrKeFJVXvctp4hCb1gdxKguSB3
      AhuZdZOmXI9Hp9Oh0+l81xrC5196liP5OgA3UsODHcHhZ5Z44K+t8rIWPBuX3B7o2nFi13Wp
      K7m+lnP2UpW6sOLD+3rVpm/mhpY0HAoNiYCVnuI9j7ZZPjAhoMUDdxyTJxVSyMoAFaLy3U+4
      ZJrn2/z+Tfe1RXiX87rXz3JHztrfWRJjFszyTtl73DGUZUlW5JSmrDJDTYkup7OIrR1i3dOm
      LAmDYHdG8KwoZZNSrah0E+UsWAKQUtZJW/lk4WelQfxVhvTKeQYFXIgNQ10VXly6kbMvL/nA
      pw7wwukx33s84huvxKS5odAGYwSbg5wHjoQsjHPMWlJLAonhyZ5g2ResBIIXpWChLYhTJ4Vg
      B1VyJyPTUHljQuVR3sFQdA1P2HJk9Pv9+vmw3VXpukDdscxyW7pc39X/m9fBFnO1OKbL6vla
      l3heFZRjcq0nVW1zNrNqd+0GtQErV/Q1EdwGR+wLZhGL1SPjOK7FYJ7ntFqt7xp7wCiPkTY8
      1JFcjKs1OHbQ576DAafeSBgnJUIY7tvvcfxwxcGFENxaV+QaOgdDvjo0dPd7PBdrsssJgYQz
      YwOrAevaML5dcPVCQtkv+NpmSfKNL3PkmU/Q6y1OjSWKIrIsm1JhQi9Aq5JcF4RBiGJ7HMBF
      6FmJiMZUNQ0238pljlprwjCsbYEm44TKOdbM9m16pVzEd9WrqfQJIyY6f3WNjTLPwj+XCcMu
      06FtcMcWXTTBFZNTE21ICev+StO0HmBRFKSTqOZ3A5TxEAWkpSEtDediuL2pWVo0dFuK/qji
      WmUJl29krG1qhIDhuOT4YZ9Dh33WE0OcGrSC423BPg/WCjBPLbAv0zx4JOTMH93iIVHyiid4
      TG5y9tRrvOcDz2wbTxzHtFqtLSbkechSU064s4u4TfsNmGJqFnkWFxdJ07T24rmIlRf5FFK7
      8R8LQkwHtOw1LpduumDtM6r0C02aZwRegD/JNnVxrdAF+cTbJKSsTWIhRKUO7iYb1F0IW4zQ
      brdrw9hdGJdz1MUJWlMUBe12mzAMGQ6HNQXbyPJ3C/Q3N/FOf50DIXxxveRYJDgWCdZ9aE9S
      nioPqGEw1ugS3vtolTq8MdQMRzkvn9U8eCRibTOn15ZcbnsUXcXmUHMkEMSp4KWzCUFhwIeu
      MnhS0H/jNDQIwNXPYYshxVmKcP6etYfNfB33/iAIiON46l2WgGzhT9MJMsUIPZ/xeDzlTdop
      ic19Tu1JkqqutbAwJYXKSsIBUG4RuhACFUbALksilVJTed3D4ZAoiuoHNzPtYKvcUQhBp9PB
      GMPt27e3VQV9t0Ce5/zpv/gV9o9i2iE83DKUovLpD4cltzY0CEGaV5t04WrGx99XrcuZSxmD
      ccnZSyntSOL7gqu3cjqRwCBQCtK85NSFhKWuwpNwLgOTGUZFRVT66rmZHpSVlRWGwyHalJRa
      o01Z+c5nuK5dvbzO9iyK+lqr6tpnp2laqTtmi8PPYmp2XEVRTEka+5xZ+r+bFeoa1xZ3As+f
      GotLdIVje7jvt78XWu9OBWq321M5LEAd1XOvs2An2mq1aLVa9b03b96c0vfsgK1BfCfP0CxO
      8p0ESikOjq9zvA1XU0Gq4UJaGZz7j0hO3l+tVZxoQHDy/pBuu0oVjtOSpa7khz7W49QbKU+e
      iPA92LfkU5aG/csV83n5c2s8eq1a/7wsObkgAcGpoSEdDeoCGRfCMGRzY4Os1OhSE/g+oR/U
      ++iqIk3fvM34dMEiZBRFbG5uVga18hCTNXDLJO3zd/LqzIIpjm9mB1Zhe8DMNZSVkGi2G+BV
      PKtKEd9VJNj11Cil6Ha7dZ6Hm2YL1OnAYRjWJY+WqwRBMFUQYcWerYl1AyTGmLoIRmvNxsYG
      4/F4xwV5p2GwuUlp4JWh5OsbJUkpOHGfT/HuRQpP8tLZmJfPJgzGWxVdUkgw1YYPxgW+B2Vp
      eOlMTJxW4f3zV1K+9dqYODWEg4LzKbyyGJEpx2gEWkmfG9euzhzbgYMH2b+yykK7QyuItqkY
      sD31QWtNEAS16muT8oQQ9d9BEFT1w1T2ne/7U9e5z5RSVkl5ZUnZYGa1euJoB0opPOVNGb3u
      3s/KIK0zVtmeWmGMoRVGLHS7VfH+3W6sq3vZlwZBwNLSEqPRiCzL6txzoHZzzkrVtSm2lkvY
      RbALbqt9bEmdrQAqy3JbFPk7BYypSg+v/PY/4VE/AR8iKTneljwbG46GktWWBKp0hys3S145
      F7Pe18TJmG5HkWSGdjSxmwzkBYSBxPckx+8LyXLDOCm5dl+HA6s+TzwY8vzvJ2S6RAnBogcX
      4pL1tVscOXb/zHFaJuYyEbfs1CJLlmeMkphWEE4lvqVZhlKyItrJvH3fJ0mSGuHt85r6P5Nn
      57og05VHUTKt/th0C9ie3uyqOC4xuEThqlH2b/c7Ywyj8biuo7hrCWCMYTAYkGXZlLVtFzQI
      AoIgIAxDwrBatDAMiaJoigJhi8vYibqGT+1FyPPaS1SWZf27Uoosz1nbXP+OkQLGGC6fOcUb
      v/6/cmhwGdjiahdSwwe+f5V9yx55UfLq+ZR2pGhHiqUFDynh/kMBJ4+F5IXh1nrBq+cTbq0X
      nDweYgwoCaaEgysel2/mnDzR4pGHqozSkVRcSQVvJJAhSErQ1y7sOFa7V65Xx83/z/OcKIpY
      WV5hZWkZz8kahSq3yJZVWjvw8uXLXLlypU7jdqW3vTfXBWmekumc0A/oRm26UXtKCtUS0XF1
      2n8298d+b++x9zUN5TvN37CVr7YrI1gIUXN6m3rr6o0uJTcNKxdsICxN03ojmum1lnCaFUxA
      VSgiJaUpUeKd8x4ZY9hYX+fPf//fwKmvE4kS1RLsDy0XMoAg8ODS9Zwb65qT94csdiWtSNJt
      Kx57IOLS9ZylnsehVZ/LNzKWFjw8JXjjas4b1zOyvLIPVhbbhL7g3OWUG7cnFWHacKxVZb0I
      IC4E8vzzaP0jd/SsWZe2TSOwP1dWVmpO3utWKRSDwaB2fliwUtjaf9bv7xKUu05CCAqtUVBn
      pjaZnmt0z/LjWyIoSk2SpUR+iOdUrrmSoSzLqVQgJRWtIKzHY2FXRrAdrKvSNN1jLuyULmG5
      up2stQfcjEErWWxRyTbDTAhKXbXFeCcgz3Ne//M/4vwXP8OjfkpvUXAtlYxLeGFgWPEBqjyb
      516PWen5rPSqvJ5vvDKm0LDYqYzXKzdztK4yPT/67iq//2JREqeaxY7iPY+2OHMp4/TFlHFS
      oqRgdVFx3/6Az58e89pQMywM71mUlMbQX18nSZKZXSIs2F5JWmvSNCXLMoIg2JaunuYZaZ5N
      SQlXdYqiiCNHjlCWZa2ywvYcfKsyCUTVYcLx+9trYDoJzmWqrgtUYr0/JUUJSmzvmWSMqQmt
      Gs+0O7UO2u5m022Jm0sAVjy57icrltwFsWBfbgfjGsM2R9xyo/F4XOv8rkSxf9vsxLcbjDF8
      5jf+L55Ze46VNpwfw4JXcfvjLQDBX3g+2a2Uo+9e4MTxiBvrW3k/xw8HXLye8/LZmMFYE6cG
      SPCUoNAGMAxGJU+fbPP5bwx48UzMrQ3NUydChPRY7CqefS3m8D6fJQ8e7wpupPDl2yVpCYti
      Z6+JC5bZ2IhtU2oPR0PW+5tgIMnSqqRRihrhXL29WQJqa4S3PEETotFbxTmuXWk5tu2ct9O6
      W8LxlUeSpegipxO2ZjJJHHy04JZs7qom2C6YG721L1pcXKw7kllOsVNag3WN2onY9Apb2Nzv
      99nc3KTf79fXukaaa+W/U7XEl8+cQp17HgmEssrZN6ZqX3Ixh1dQLB8OiO/vIns+569mXLmV
      c/12wdVbOUtdRa8jWV3yiQLF0QMBTz3c4tZGwZWbmovXc25uVKrfSk/x5IkWi12FlIJzlzNe
      OZeSZNNtAFuqUr0+vCKROufiuTO7mlMzWFaWJUVe0ApCwiCoAkpimtva+9x0Bpggn8O9688m
      MBgNa4O4LpSR0tLITJep3fOpZ4mt+FON0FPGvKm1BVOaWj1zJd2uvEBpms6s3tryrVaSII7j
      HfVPi7T2HisNbIexpoSw7ramB8p6H94J6L/ydY4Gmtu5YDWQCLG1YcPlkKc/tlxxmvMZDx6p
      OOOLp8d86MkuN9YLXj6XsN7XpJnh8QcDXj1f9etcXfSIAkEQKA4sV1x8va959lRMtyVohYKn
      Hm4RBpLXLlTVYmuZ4aWhYSM3fM+SpARkXPLiv/5XHDhwgNWDh+9pjpazK6Pwpazbl2AgzTNC
      fyv9YZaq67a/qRmX2HJNZkVGK4gIw7DugtG0BWwU12ukOdifnvLwnUDYtmuoUh58teWSbXqL
      dm0D6EZ0rQlWRdopmNXM/IuiiNFoNNO1ZTt92c/c5qpCiHeMAA59+Ae4/frXuDxIuJGWXEsN
      t9LKW9PfKJBnYkxZ0h8ZvvL8ECFAa3jpbEySlgS+oB1JlKzsg6IQfO2lEaNY88qawAsUUarx
      VEoUSvYt+5y6kfPy5REn9gccWlVcvJaRZoZxYVhtKboRfEkL5NmY/dcLDonLfO7//nV+9Jd+
      6Z464zULWmwLwikkm1zrGq3Tas/W9wBKVV3ehBBkeY6SHt6MBDu7v4Wu8njCST8k9/lSbrWX
      ad4LFZ5axHc/d5nurm0Aq7M19SoX3gwxXfeb/RlFUS1d7EK66a72vRbsArxTtQRLK6ucEyFP
      9SrOHUhDYQwnO5JTBh49HmFMNcZXzyd4Ch4+GiEVvHE1Z7knaUeKsoTX34h5/MGI195IOXYo
      5Nevloi24P0pPHI84re+1Oeb6wn9BZ9eEPAjJyKuruWsLvo8fbIFGJ56uNKBv/Znm0TXh1WO
      f2kIv/Yqn/uVX+PYJz5Ktr7Bwr5Vjj/26F2t2yzVBSYtX/wAg6k7xdnApeuxmyUZIj8Ef9pZ
      4vs+cZJMOULsMzpRe6qIxVV7dyq2sbjZarVql737udU87DN33Rv0zQjgzaDJGdznugax23bb
      HbwLO2WffjvBbvi1WPNQC27nldFqDMTaMCpKXruQcH0t5/A+nyw3aA2n3ki5cjPDU4L+SBH6
      lYeoNKBLWNvQPHA4hDRHdHwGRUX0o1Ay6ASY0aTTsRQcWvWIE6vTCr747JBHjkcY6Xr+DCuF
      4eqffYXOn3wFAawLOPeex3n80z/F4QcfuOM83aou1wtjdWpbSGPtM1cPv9PauZLevieKIpJJ
      tipsJzqL/BYntOPpkWK77996D2c9y5VOu8oGtTcDdaeve4Em97GDsT01bXcvV1S53MT+/U5J
      AKuKGSG5mMB6XhWtb+TQ9gSFhHc9GOErwSPHQ146m+B78Mj9VVCr05Lc3syRcssw+8ZrBYce
      +VFeOP276LhE3xY8t6FZETHxoHIC6FiTmip1ujQla5sFUQCegigUFdHdzDnoA6YKivV9yXJW
      Ikzld/EN+N98iRcu/iOW/vE/oNXe7qWz0EQcl+m539m253mjyL6pr9vPXLB76k0MU7vv9vok
      SynLknbUmpIChS5I85yi0IT+Viq0HVvTI2Q/dz+z2Qi7Vg6NMdsa4+4GmhzAPhMq33SSJLVL
      zS3AcLmQMeYdqSCz7z5/5jTZeAAteLgNuZEUxnAkgrHZ8lBUN1U/LlzNaEdbPmkpQAOvX9Q8
      8MAR3vO+D/NK1ObpF77GpfIMw+MdPn89xghFa9lHHYxQt1LCQHL6Yk7gS6JQceVmwYmjUZUH
      FCmOf98ir35pg/tiTfvZhE5RtWacxOQA8Nb7bN6+Tat9ZMe5Pvvss7WBurCwwObmZu09CYKA
      /fv3V3p6UbCwsFD/bkE0OfNkz2/fvs1wOKw7SC8sLEzFeoqi4OjRo5Vq6W0lXlq1t5yUcRaF
      JvC8ipE0kN2NMTRTbSwDsxJr15HgtwI8z6uT5VywalCT20y51ybwTnB/q6I998XPM8oNeUty
      LYWRropeXuiDlpqXv7rJ9aGmvJ6y2S+IpaC9GrDcU1y9VbDSUxgD40Tz2Pt/nBMPPYwQgsce
      f5rbt66wsn6Gz1yOMcKwIOBwrhGFJss1q4sR19ckSgn2LXmsbeSsLnkMRhoB7Fvy6IWS5UKz
      YQwYM02MAoKPPcOB++7sHTp27NhU6xoXyW0CJFTagD0Rx7qsYVrdsQUzlnG12+1anel0OoxG
      oyn1t+kMaZZNSilpheHUaTswzf3dNGr3We53uyYAC39Z5AvDkKIo6sWyVC6lpNPpkCTJlMsT
      ps8keLs5vwUpJa8++w30uRcRAg4F0PEEp0eGk23BVzcMJzqSA+sJelByf5ZzXMDrQvHY41Wl
      W5YbHnugUh9fOgtPPvkU3W6VVvLaqVf5g9N/hrfo0ToiGb0x5v4VxQ8/GiAEnLtc9Q6q/lFF
      j6l+9keaB+4L0CUYMSk3rBYLACMqozWJfJ74iR9+0z3cv38/UB33tLGxQbvdJslSFjrdqfW3
      6rDVu22CoxsbSJKE0hjarVbdDMG2TI+iqG5v3u/36XQ69b1CCJIkmWqgVevvM0JYriRoujub
      FWlWGuyaACyy7gZsDEEIUadFdzod+v3+lNvMboptmdEMrbvPu5tI51sNUkrMtXN8/3JJjuQr
      6yUrvuBmZujncKwlOTcqSbXAl/CVDcN9keCWMly6noGAm+sFnVaOEHDmsuGZiacrjmPOvvAH
      /MQxiTYl33wj5sKSz0aseflswuZQUxootOHaWo7WAt+Da7cKbq4PWWgrNtZzFm4kDMYlSkHw
      SMD5YclSAYONguXUYO6/j32HD931nMMwZHl5mfF4zIK/1TYFtqs5FlGbqqutSbaMzRapW0jT
      Ste3yG7tQPvPSpBmUwZbJ2Dbubh5RC40jXgX7qkrxJu1RHHBmMkJJROfvjV2Xb3Pujxr3+yM
      NtezUi3eTjDGUGrN/vd+L889/1Ue8hIOBIKHO4JwDEcjeLZvKKAuwbBZ+lIK9IQtl4UhjzWH
      DgWcPFpw5qU/YfW+93Dz7B8gi+tI4VMYqn49uaHtCR4+FnD5Ro5SgoeOVMZ0XmT43rQAACAA
      SURBVMDjD7bwvQqpVhcVNwUcux3jLVU5QV/LBE8c8jjekXzlhuL2+YInfvKHd+U5sypMHMdb
      LupSk+U5gedvu7bJnOx+2RQXu99WD7c1xfaeOI5RniIMQkpjttWfuwRgzHQgzvVawRZBuGpV
      U2XadRxgNy5QYwyjyYke7v3NUyGtu9MNalg902Ybugbw2w1JHPPC7/0R61/4C4peB558H5de
      /QKFgS+tl7QkDHLDoUiRajjZqZDdk4ITHYEIJCePBYBg9GKfE/2Yyy8ZskMtVo/9Bfmlr1KM
      Sj78dIeyhH/8rRh5sI1Yy/CDRrmiswfVesDhfT5Xb2VIJcjKKjXjxasF6lzBmUVF+6SPnxke
      /OQneOL977unNSiNActhJ72FxuMxYRhuc1jAbK7r2ncu4lrmZyWIlQZ5UdTdLLIix5uUcMLE
      G+eoxPZdTVXHRfzm57t2g05T350Jwao9WusqaDIZhC17bHKL5gK675l1qmBRFN/2nqLGGC6+
      dorXfvX/oXP+MgsGBis9nvqv/zO+9Oo3eDSIGWt4oqcYFlUcoOvB1zZKVn3BjbzKD7qcam49
      N2SpqzAlCAVHQhjIyoXZEpKL13LOX8nwPNDCUOoqD+pK3/DHp2AhLfCUIE40l28WSCkQZwxx
      UnJkv48x4Lclv5tJDm8WLJ8t6GpDOip57Vsp0Xue4P3/6c/ck+TM86qrtZvF6SmPQTag1WpN
      ZfbadWtK6UpylMRpTBSE9bVKqVoFsn173L4/tvNEFSSdHZzLi6LqvdpIpZhlILuEZ8wumuM2
      X3wnTmzFXJIkJFnKcDyq7Qar+tjqLje3x/60v4dhOFVl5n5ns0S/nXD90iVO/U//mM7ZS2Aq
      d+KgiPnC7/0u670jfLYfUvoRN773b5H+wM8RexFHI0HPgwda8OFlyUMdwdEFRbeleOzBFkEo
      STSkZaXPp5khyUrywnBw1SNJDUaAzjS60GwiOR0GHFj1ObwvwPcqImqFkgfv8zmw4nH6UsYw
      1hRFyc/+2H7C0COYGMiRDNj/A9/Hx/7bX7jnwwLrNddFjahWjbGqjG2YYP+VZUmabRUxGVMx
      g3bYqjo5TNSwNE0ZDofVXk66B9uES1tgZeMM0knEE0IgrRqVZ+S6mEJyt5hmFrO1uHxPKhCw
      47FGeZ7XOv7WPWAwUx2BXZfUVA638y7XN9x0bWmt2dzcpN1uv6UxAWOqyrfX/+yLrP/279Pu
      jyZfAAIWRjnpv/8qR56IOLAs+KZ/hOeef55P/oc/wMpP/R1e+ey/geGp6gZj6nyZw/t9vvL8
      ELk/5GK3je8J1q9nXLlZIARc2dB8Ls4x2pBvaFRXIRLJAV/zjJ9z5UZOGAhWex4PHgkmEWTB
      8cMhZQlffmHIu09W3pT0Zk4JxO9/gvf9/H/O8urKX2pN6rQBtdUAy12vsiynEtZgq4OIVW1c
      ZuV2lciyjJWVFQpdkOkCU5YE7aq+OC81Js8IPL9mqNbjVPv5zVYjLJfz27G5P+1cXBvons8P
      3QnhrJqz9Te1CtR0TVlX10zRNCEI3/frYo1ZQbSdMlTvFb7++T/lxq//NkvrA9pmMgEnitTV
      hgUNpjSsePBkcokrmxe59i9foDjxXh76gZ/k5d/8VV4e3eaxrsDHUJaGhbZCKVGpMXlJYQRZ
      UVV6tULBwRWP02GAKQ1+Cd6CooxLokjQ9QVrUqCkYGOgAcOBFY9vvjrm2MGAJCsxRnD6fIIC
      hkByyOfQ/ff9pZEftvK3XF2/NjQnkrEJpTGohtHpMjWo9q7b7dbfSSHILA4wYZpaV5VkUlLk
      xZTNaB0lbiTYgosPswjDXn/PBLCTLmnL5GwikkDWmYTugJqen+bgXU7SdLu6osxNo30r4P2f
      +DinO10u/Ppv0b54DeFEUScZ5higXxhOjQQjDU8uSEJZwpVvcPm5BT74X/33XLl0ibEwFJ/5
      dfK0z43bOa1Q0usqstyQZFWbE08JrtwsSHPDR/ZnFTcfF+hhgclL9i8qVhc9tIaHjgaUJZSl
      BiFZ6Xn0R5oTR0OkEJz79zc5LkuOnFTcTKF/9N5SoZtguW0T+aHqAJcVGQvtbs2Fh/EYrTXd
      VhXwiuOYOEsQQtb6v1WBo1ZEnCZIVTW5EqLKFLXX1MGviTvVutNnMTx3jC6SN691vUP3bAPs
      hHRCiNp/X/loPdphNKW/uUEtVyWyzxdi+tBs951Wp2y1WlNnDL9VIKXkkWc+wMf+4d+l+NB7
      pnibsf8bgy8ljy5I0hJeH5W8OCgZaiivnaPVanHhwhnWb73A+uPv5apqc+xggNZVq8OHj4Wk
      Wcn1tRzfg2MHAwJf8METEc+cCPnB+xWffnfAiY4gH2m+8OwI36saY/kehIEi8KmySluSP//W
      CCmrJLXNQvAH10u+dSvikaefekvWxCKj22ltKuVZCOI0qf5lyeS7LYlRXSfQpWaUjCnNVgap
      kop21CL0fHReBUcDP6iJwZUetvLMNklI07Q+kxkqdWo8Hk+p4O6+2ue4+HVPEuDNXJH2Ba7I
      c/W2ZrCiKQVcQ6b5eRiGdcuVt0rtmQVRFPHu/+LTPHv5GubSNUyTGAWMC0PPg3d1q85tLw0N
      h8UVXvjVv8+NzU2e+sEuV0aC4x/6IS7c/BJHDxZcuJbx8tmYvDDcdyBg/7LPmUsZ7VDywul4
      4i2pcuffeyTk2q0UzxP43pb4llJy47am1xEk5QrjVPGFz15jaaxJEbz/cI/FH/vbLO/b95as
      hZs7g7OfdjwIQVHquv0gTIr0p9ZsEnlVHrB1rrC1B6zRK4qqZWM7amFMWXd3a7fbdFrtuilD
      FEV16kXmHEFrY0jGVDEEKeVUJLkJwtylY70sSzY2NijLkjAM6Xa7d0TALMvq/p/NAglXAthF
      bPpy3e9sVLjVatV+57cL1q5e49/9D3+fA/2YoRIoA2FpuOlL9ucltx/wOdyRRLJSiw4Ele//
      q7c1+z6ywmJXMs5bvNF/mLz/Mg8eKuh1FNdv52wOSxa7krWNkpVFxUNHA9LM8PXTC6wefIiF
      5aO0ixfocIH+qOSB+yrud30dvvDKCu997wc4+ejTdBcWGA36nP/n/wuLZYz66/8lhx9+fFfz
      bKoLNgprkaff728LOPX7faIowvd9BvGofo6oDD8Wuwv138XklHshBFJIkqSqaOt2u1Mqi1Wh
      DIZWFNFuVYZ9O9qq+93c3Jxp7AohSPOqRkOYKjJta8ttukVTjdu18mzdXG8GNqQ9yyJv1hTM
      itQ1CcaYKqIcx/GbSqC3ElYPH+Lkhz/IcmE4mlXm3j4NvdKwWhgebAnaqgp+HY6qrNDSwLGW
      IAwUSSbY2BjQLr7BYDDim6fg5XMp3ZZgpSd48kTEUk9yayNnHBuu9g/yAz/8c9zO4LOvf479
      J36YcfABOi3JmUtVK/luC556+n289wMfpTtpT9NZ6NH+yA+xaTy6B+7b9TzdWu+yLBmNRlON
      b5v7Mmv/7O/Vz+k9F0IQ+EFVTDNxbkw7S7bUpdDzaQcR0lQZoZ3WdP8gPwim+n5a4qnUNF27
      aK3LvdPp1OcDuGOEXRKAtbzt4twJEYUQU/q56+lpnvTdvM9ViZpuK5tT8nYSwZFPfIRcVgaT
      bmQ7A3gCnuuXXEkMF2L4agxnpWKxKzl20KfTVjzzRJeT9/v8yMd8Op0uGyOPczfafP45Rafl
      c+xgwL4lxcEHP4IuBd+89HVG0Ygvv/YVTj79KZLwfYSBx9nLOZfXWjz59AeA6TU88tQHGC0f
      rVue7wZsAwJgqvnZeDxmHFf/rARwg153AtcQtWCf4Vb/iYY6a9sqGsdWcKEVRXVXawuWgEIv
      oBVGUwXyxpjafepWid2TDWDFXxzHdbvzWQarnYgrqprXuAPZyRNk9X7rA4aKW9m89LcDhJLc
      9gRhadBALAxXPYk64uMZeG9LUJiqPckprdg81ubBgx4Xr6QMr2cMPEFelFy5meN7gq/dLCj8
      Nj/6wR/nsUffxYXzp1k7/RucvSZ46hNP8m+/8G+hC3k/59n+t/jB7/mPUL138c//9CtkSca7
      Hn6I/le+RBAGXBlf4ZmHn+H4/cfxfZ8PfPoX79or5rZCsQEu3/frIKOUkv5wgPI8Ml1MeYOm
      +gcBkW06VZraY9Z0RUopySdZwG48yY6h2THaqr/NMyOklCwtLbG5ublNc2ge4mifV+iqfXZR
      FGTjDFMawjC893OCpZTVwWuTgohZdcBKKRYWFuj3+1O53nagO22K3UB3g2x8wSK9jQ28HSCl
      ZOBJZF7SVwKJ5KG05P59PusFvDwoyRYDsjJHHmvRaUmMgfDUkPsUXD3R4ckTLUpjeOyBFr9z
      c0x4UPCbX/xXfLrzn/DwiUdphz9DEvcBwRvXLqDjEuULSmVYW1vD93wW9y2xyQaXwjeIzyV0
      e13OxKc5sXyCwA9q+8w2I3abCMwCyw2jKJri1pbxlGWJKQ3xaISUClMahLe91ybG1EcRSU9N
      MTz3mZURrDATDm/jN1altpHboijqwFpRFGwO+iwu9Kbm4ft+nWW6kyfRvnecJnWsohVGeGFU
      azO7jgRbaB6ZMwvsgNzD1WZRumucuP5fN8Loed5UCN79/dsNqwcP0l5Z5sDlW8QSjmeGvqq4
      3ENtyfODkpPPLPKVP73NRx5t89obCcbAsjCkGpYWg9r4M6acJOpDqhL+8Lnf52/f/4scOvoo
      AF/4iy/xJxdeJEgFjz22n+H1Ib/1xd/EMx7pYow38kDBtegKwXnDYgSvv/CHXPyXMQMBh9/3
      FE9838frtfN9n1arVVdz2fUG6jW0XeLc9S+KopbyVocejUZ18KrpZ5+VewPbbT9X3XEZnL3O
      PVfAenCSJKHT7lQtMR28CcOwzlK173BVZ4ONmYDrz64S66o0jnuqB3DdmtYN5R6csVOQYpbR
      5H4PWz1C3UCZK3VcGAwG9Hq9b3tqdKvV4plf+DnO/M//G34acykQjATEI8NKXjJe8GkFko/9
      8H48VUVsD676fHYhQmxm7N/IubGRszHUjMaaR3zB2Ysxeqy5tXyTU2de49GHH6vmKAR+Cn4q
      yG7mkBku37wMAroPdiDRGG3wlz2eDDM++XjERj/ltd+7SqoEpTYc/pm/WY/dpqb0+31GoxG+
      79Pr9aaQeDAYEEUReZ7T7/fZ2NjA8zw6nU69H57n1ddsbm5u6w1bqzGlnhD69kM6ilIjzVa7
      FYvs1qaomSqmfgZAGFRnG3Q6nalmy57nsby8zMbGxjZ8GqcJ3iSIGii/6kZtIMur0yQ9WXGw
      e44EwxZSp2la642e59WLYxfIzQNxCacZC3AX1HL3pous7iI2gcFgMHX4xrcLjj7+KPzyL1L8
      w3+CvzHgKIIUeLInycuC028kPPmuSlcVGAJf8PCJiBNHFjlzKSXNDZ/8njavnk/44AMtfu25
      BHkkYnh2zFfVV3n04ccwxvDN558lD6BEY5Rg8Yke8bWE6EBIcjNFRYoyM8hAkJVVhFQIKIVA
      iypH3nUc2K7ddk+yLCNNU9Yn/UOt29lKA2trWSPV3Z9CF3Wd8Gg0mnJm2GvtYXXufVvF79UB
      GrnO6xb49nuLO5YAmqqTUorRaIQxprYJrPrU6/UYDAZTYylNSVlWR6ZiIPR8pJC1XWphV6zT
      zbBzBwdbDbOaKtEsNck1euzkm2cK177jSVDDTbktdFWQoXV12on1Su22Um23cPTxx3j67/13
      6AeOYIDb5zIujg2+FIzW3B401ZzHScmrF1Ku3y64uW5rIqh/lkmJ6kg2zWa9Lj/xqR/lsLdM
      OJYkedVH02BAQrAvQI+3EsmWo0qd6LQkWU8RSEF+aDYjsGsehiG9Xo/9+/eztLTE4uJi1ZYk
      SUiShF6vV9sE29RUUe19r9fbVtXl1tm675v6N7nOHq1lu0lbBK9zw5juMK6UqorqZVUi2WzP
      GQTBNjsm8HyKUmOweKvqIBlsHfW6KwKwvlS3n6eLqLMW3kbn3L8tldp/bhpt85/v+wRBUHOk
      Kr6gKEpNpnOySUQxyzJGo9FupnNPsP/oUT70P/4y3k//EF0Zcfmm5uK4pNNTbAwlV9cgKwT9
      oWa1p/A9ePcjVW/Pq7dybvcLrq5ljDYyhudGoE3dYwfg0KFDvOv+RzDC0B+l1dFDLUV6M0MP
      C4QvKNMSAbw+qhLtstwwUHDyEZ8HF/Su0sTtXtqzHLTWtTRw9zvLsjryaiV0HMcMh0OGwyFJ
      ktQ/XUZmNQNLMP1+n263W5fGWk1g1uF4rtu1LKukuNKU9YlBLjSrxtyu4UqqShKw/bTLXR+S
      Z1/gUpL9rOmzt7DNEJpMcFah8k4uralNNaCkrCdW64oz0rO/HdBqt/nAT/04t/+Dj/PK7/8x
      r//Jn+PtW2G1+0leeuEbrK/fJgxGPHifz59/a8RwXDIYaz7zhiQfwFcjSRoqOgdaDM4MWTi8
      pU8/f+olnr9+iuFSSbdw4iIY8s2iKpXUhlIbNnUlSQZ9zSNHFA/0JJf3Hb3rvH93jUdpjCfU
      VHmiW2DiqrJxEtdImCQJ+w7sryu3XCPWNY4tg2y32zUBWXXWlfru/jdVZyVk1UuJ7QVRVlJM
      SZRJN2t7kF7TO2XMPRbFu+7QpqicZZC6Orz9e9b1Vpo01Sq7KFZ/8zyP1sSVlesCXZYEE0nx
      dsLKvn185NM/zfBH/zrRxA555eUXMSLg6IGcs5dTFhckh1Z91jJDmRp0VlIkBcmtDNlS+D2P
      66NrrK2tcfHaZf7BH/4KG+WIbuqTULB+dgi5YeHwRO+VAq+jyDZyVpRBSli/EPPIgqCvJasf
      /dRdjd0imIE6wU0IZnJiFymFECjPw/N9hoMBKysrtKMWhVdsfe88o36WFLVh6yJ2830uA3Xx
      xpjqpMpwkgw3y/vo5hZhDO1oduMve++uvUBN0eRybDuoWaeDuIvhutvqoganNgAqcWafZ+MC
      9qjVPM+nCi1MBnGa0Gm3pwjx7QIhBAu9Xv338uphuosHuZmusbp8kbPrfcobKc9eLtCdKlai
      Wh7Sl6iWoogLbl68xS//o79H3DMMTExrJMlbBhFrTo828AvBEzrC6Co1W3gC5StuDnOG42qd
      /ngDHn/mYzxx39G7GnfNkMqSdJJMZtievtAEKSWeVOzbt0qn3a77BblOCHdvLfLGaYLveXU/
      UZgtsWcRnzGTcsqs6j8kYJuUa7pALbNs4pZLUELcY2Ms1yPjcgfXG3Cn++1C2s9cf7/9zuqI
      w+GwNpDtO7IsY3Fxsc4MDeO3v0vcTvDxv7bFgfv9Dd4l/5g/fe1rZF2fbJCxniWsn08Zr6WU
      65vEgUaWAnzw+5IwEHT6kryg8l4MQeVw7tU1tDKEWnJUrFCMClQg+dLLY5I1zeq7VnnwE5+6
      a5ewq4ZGQUCcpfU5wC6SuNdaMFStSGLimkHdaW+NMXWnZim21xYYU9Ub+9704dpAdZav2tLh
      payM5FnzdJtr7TR2d0xluYv26FAVP1gx1syvdim2+UI7GNsaI47jbRVhrrozHo/rNuutVos4
      jul0OuhSE0VR7aaz17fbbQaDwTbX3TsNvd4S7/7gT6BLj89e/AuulYprJgEtEMsGfwBJWOIZ
      iVdIcmlII0NLGoQRFJ6hDCr9XyuNzCFTgA8iEHhLPu+7L2Bjvw8SBhvX6wqru4Gt2IuHkgXC
      8b27DG3KDpt4adzyVhfZXI+dNW4tWBVFiKqe1+YsZXlOnCWs9Jbq91jVyLdnyElJO4wwpaHV
      bs3Es06nQ5qmU3Nz59pUt3ftBSocJHV1OWsX2J9NsJNpdoNzRZRdILtobjr1wsJCFeJvd2am
      XdhrvlOkgAtSSt77oR/howeeoNzIEYUBXSITQ+kDpanyZ4zBSyEaCBSCLDBIXXH/IBEUHmhp
      0AEoT5IPC0hLPCV46P4Q0Ky98cczdeOdoDZWJ+MUUHt/XOR1ObrN8XG/W1hY2LIpzFYfIFfF
      bba8NI6bUwpRBa1surSjJtdjlQolq7Opd2rMbBvsWlXcVc9he23wriVAWZbkRY7v+WRF1SrD
      F/6UC7RJAJZD2xzuJmVaw9dNl3C9COPxeCpvxBKJGyuYdRTrdxIopfjgx3+acyOPG8/+KcU4
      xUhQhcAPBUZCUEhGHY0REGQQJoJSGEQOeWhob0qMBC+DMjOoQEJpOHs1Y6mjuH674Pji3a+D
      RVKrcrSCcOrUyObhhBaJLbiSYjgcTuV6WULIihxfeVPPaHoLLbIGVCnOvpr2BFnCUkqxuLh4
      x9QXV0V341Kbm5u1i1eIKiM0DMPdHZQNVaGz1lWiUjHxHPhi67TBnYpVbB6KS4HudW71WFMi
      ZFlV4GBFmyt9LJW7eS7fqeB5Hj/7Q3+T9zz2NP/7b/wzbpkBpSgxQhB3ShhBFEvQBh0Yct8Q
      xIIsMoRjKEJDoQy+kYSrQdU2xcDnCo/41YSnVwQPtXZXB2CDR828/IWFBcYTNdXaZrosybKs
      rvMYj8dbHNxBfthyb6d5Vuv/rm3hMkkpJcnE/rDnD7sqlU2J6Xa7b6reunjhzmcwGHDr1i2E
      2GrTWJ9kb+5SZhpjuHztSn36n51M4E0CVKo62nTW0ZxaazY2NqYGZZ9pF6F5EN4sgmkaNpbw
      2u32zBMpvxPBGMOVa1f5P3/n19j0N7j0xiaJp2mNJeOFkmggkEqiAxCZoVSGoFAk7RIvF3gI
      evvbFGNNIBQHH14kvZ3ixZq/8ZGf5N3v/eCux2Oh3+9jjKHb7da22mA4IAhCBqMBazfXiCf2
      mc3Tt4Uttt35yUdO4ns+pTEMxkNCz6/re+2+uafBWKZnf3e1Cfv8drt9V7ZdnlcpFk0J4tqn
      VgOp2zPuarUmEUvLuy2V75QG4Q5sVnSyGVOA7XGBWRLFnSDwlzqv4O0GIQT3HTrMf/PTf4dj
      4RGEhiCVDLtV1qIRBq0MWhqMBCMgaZeoFLxMoIuSS9mQq2rM7SwmuZHgdz3o+By67/57Go/9
      5+bYQJUEuLS4RKk17bBqQnDgwAF6vR6rq6u0222WlpZY3beKH4WsrK4SZymlKcnzSZ3upDDF
      qr+zEhtdh4r70xq2d4P8WmsGg8EUDja9ks3nwz2URAJVSitV5qINOVtxudPgXEPKDsIisfud
      a0zfKcjW9Db8VQIhBMtLy/z83/gF3nv0XRReiacFKqsQ3pSGYMgk6lm5HZOuYXOfRisIBxAN
      BUEh6Rxv00k0vXXF8vLqX2pcNsferrnNr1pYWEAqyWKvx759+9i/fz/Ly8u0Wi0WFhZYXFrC
      b4W0FzqTfTFVHo6ZGPhMI3mhi8qGZMvb1PQ62eKcu7FprB0yK4axk3vefr8rG6AdRvVpI1rp
      OjnKGqM7HY7nqjqzPm9SretadcPbduDN3++15d87DVEU8TP/8U9w6p+e5mrQp/RhQXuMWyWh
      qNqkk5b42sfPJaIEqaG/WHHRIDeYpORkW3D4wOJbcmqm62GxeTxFUdQBrPr4qrJkcXGxdlF7
      SqFkdXKjpxRpbhF3a+/LsmqrYoSo7Ui/kaYAW16mu1FrjakaMNsOEPZ+N+UGmJI81qDftRtU
      KVV16FWqPp3DDWTtxImbepj9zA4yCIKpJCXrMgWm3KY7BVu+kz1Abwa9Xo+f/aGfQkYeYeGR
      RRDklWco0lWzKIUk6RpKD/IIWkNBOARvZPg4GZ98V8TC4upbvg5N1cRVPYuJM0RrTZqmdPwI
      wZZG0PQe1QxtYu/lRY4xW21VXBBCkDQyPncCm5TXrDhsMleLb0mW1u7WXROAfWHTGLVcuJrU
      9kG77jMXYYMgYGlpqc4OhOmU62ZQxqXqZoHNX1VYXl7mEx/6Xr7/2DOEWuEXEr9Q+JlAGJsn
      aqqIcFbFBBaikF4rpBd6rHQFL52JkZ13veVja7VadUNcmN4bm2Bmc/G73S6B5zMajxmMR5TG
      ujyng2m+59OJWnjSc9qkTO9fdZYwU96pWWBdnFN9i9juZHE/q1Kyt/Dqnori7QOt6pPr6l9/
      PGR1eaUukG6+3EVirTVLS0szubpSatuBa677s5l7bvXFv4pgjOHLX/sKz73+InloKjtAgjCC
      QavALyRZZ9IcIBH4UvDQk/sRSuCtZ6z3Ne1WxOGjD7/lY1NK0e10GY6GtYvSPdzCNiuw7mrf
      92m3WsRJXKlvBqRfdW8Og3C6t79SxFozGI8IgwBfeSRZSiusVDAhq8Mz3qwPVNPb02TObnBO
      iK0Gv5Yp39Mxqc3fbTYhwHA0ql2jFuwJI+7gmmkLYRhORQxtqZx9V6E1kVPobZse/VW2ASx8
      7vW/4FpvXG1US9CKJVqXZFLjl4La7zYxkJNrKTrReKFk+aDCCw+wtAsDeKd4zCxw98lWjrlF
      UUmeEYRB3URLKUUURqRZihQS3/NI8rSuBHJd6O0wIsmrMyR85REGVgsQoKfbmM8CKyGaafV2
      jm7MYVZVohC7PCjb/nT/AXSjdl14bI+2dMFWHLluy8XFxW3BMFunOhqN6oW2A7bE0e1279jq
      7p2CS6de5ua3vsCxj3+KfYfvLiMTqk08dePclJQLCsmxIytoo0lu5txej8lCg68FJoTwQEi+
      kRMs+hQ6R3m70/+11ty6dav2sbdarWrd4/FUEyqYII6pmJyQYqpJwZZ6tD24FUxalkPVMqVp
      T0AVHPRNSTZptR9FUXWikC7Qhb4jYzPG1D7/Jvd3vT72d9eZ4noPd90WpWnQuotlmH1+rxCC
      brdLv9+vA1c7Tc76o+21btBLCFEXQAsh6hYg77Qb9NrlS2S//39wvEx447cvsvzzf/euI9OX
      r15h04xrnRkg8zTtgyEoaEWa1fYiz5++QuFrFhOfYlRQjKp00RhDtLg9h38W2Fyszc1NLl68
      iFKKpaUlDh48WH0+GuApj8hJU7aVeZWxWu1DmqWM04Qg8KsC9kZipA1QAlMpD03EhOqQbFtw
      bwtjqqrqnTOLjTF1WaSLg01CaK6H616v5/fmW7QFrj7lvtwlip10cd/3ayx5OQAAIABJREFU
      WV5enkphsBmFbgtFqBa51Wpxe2O9qt53FtLNE4rjmCzL6j4474RE0Fpz5fO/QzJIuWhAsMbm
      xgYrq3dWScbjMVfeuMBmEnOwWOCSXIcJzQgpkUpihKHMSlRLcaS7wOnROlKV6KLA2+/xQJLj
      S8mFsy8TLJ9GiK1kQtcr56oCm5ub+L5Pt9utW03GcVztAVXGr0sAliFZP7sxhsAPyIoRQljV
      aPu5DbN+r202XVAyOdhCyNqTY+2JsixnNNedBrehlkt4TSJwUyMsoVl1fFcqEExXaDVVobIs
      3zRk7Xp30jStD8u26k/TbjAY4qzKAeo4zVFrF9bkWaPRqG75cSfp8laDMYZTX/wMG6df4okF
      uBIbNhdDvvwnv8Enf+TniBoVSaPRiP/v//0XfN8nv59LX/8zoiunKD/xo1zxNhGT8r2KS26V
      QW6mGeMLA44cXiKIBwSeR2u1hRHQEvD4QyGXbhST6Oy+KdXUjtGtyd23bx9CCJaWluqaXStV
      l1eWpwxKC8qJ5lrffeD5JGlC4PuUeitPyGBqF7mrw1tpXifb6WISO6iePYrHVZ4/EPg+NObh
      gpX+bn5YkxG7Y1dK1biZpCmjeFyfcHnXmCKEmEKsWWLmzVQRq8ePx+Mpo8Vtxec+s9PusNHf
      xJTbRaf7XgtFUbC+vo6Ucsq1+u2CC6de4Y3P/zvWM8PhXPBiJvnkhxZR6iZ/+Jv/jE/99M/X
      vnLf9xmNRtx39UXG//oVHlcZl2WPQnloSpRQLKc+QgkCIUlupCDBz0XVI+hWzmHVQZVVeSHG
      sCSqSPHV9YiHFpfeVO0qiqJee4s0QRCwb98+xuMxa7fWWF5eJg/CbXEdm+tj/fye8sjs6Z9U
      UWO3bf2sFGSYZAwoRTFxbBhjSPMMX/lINa0F3Km43xrczXc1maQQ1XkVtqJQa40n1e4lgOUk
      s3Ir7IDfzBVpO4tZXdAO1nKYJnTabQbDIYUptlH4nXy+RVGQJMlbenZYE65fv87/X92bxth1
      5Yl9v3Pu+rbai2RJxUWkSO1qdaujlnubds/0zBiTCeyBl8CB7SCBPzhAvsRwvgUYIB8MfzGC
      LAgSBHYC2GMbiZ2xM4vddqNtQ9ObultLS1RTolgkVSSLVaxi1dvvdk4+3HdunXfqPpKlkeSe
      P1Coqvfucpb/+e/Ld/7x/8WvNHOituSK7/O5L7a4d5DzxGMhj919nyu/9zuweJLiZ68xWFrn
      87/11xgpWPcPG//dPdgp56Hh/BMrBAuH4mCe5STbKSurHfym5NzJDqO7Y1SuEJ4g8gVo8Oee
      f6TDXkeozJq2Wi2azSY7OzsMh0MWFxerEviG+KVpOiWKlvZ7gVKlcWIwGFSGDFckmX6fRIiJ
      mIMg8sMpbmGL2g+ai7EUutECLp6acG2t9XRR3uOKQHWLaajJw+I2iqKoQpvN/RV7dNzWBnzP
      p91qVUWPbHA9fVLKKizabtD2SUNRFFx+66dc+Vf/lG+1erzb1ZyMFLt+wVyhuXJjDFrh5ZrH
      rv8Ifb3s27t354DxeMS52KFqYrYnW3qS+ETE6NaYcLFNup8hfcng5oigIdkPFMNxQHbwNnu7
      f4ql5RMPHLudS2EQoFCKIs/K6msHB9Uabm1tsby8TBiG1b4FQUCSJFWDijiMyFRRrX2/3ycI
      S5HI4IOh0IaAFUVBMukYXyDxIx8NFFrhcbRK9IOg1WoxHA4rfQCOcgHzmeESxnRqRLJjH4C6
      0/0oB8A0RHCfVagyCaQutxRKLmB0BXty9t92vPinRfHTNOWdt9/i5uv/nmd71/AGBWpO4gk4
      FQn6gWD9ZMiZUyUl/mEoeYKi8nK2pKK7f3DE9X56+TGisSSPwcTNTHG6QBC0fFRSoDLNhZbg
      2XWP9ZPlel/9aMxy22Nr4zWWln/rgXMw4oDdQkgKgZjIw6b7SpIktFotNjbKdk92NK/hAPPz
      86VuoRVaQzZOy/pBSZkDYMqkuAiZ53lF0DqdDp1Op4w/EqLSHcyePkykM7rjeDyucASOWivt
      0HrbOnWsjDCD9Hb2VsVGfP+BJUmM3G/LbFprFJpcKUCzs3uPubm5I6UsAj+g3WxVMpwdAmFY
      mqlh+WmAUor3v/9vSd/8Lt1793jcg5UmLPjQ8sETglSD7wmiQLDfV2zeTbmZCL4UA9ZGjMYj
      Im/iMJlAmo051WqxWQyows1tC4oUxI/FFOOirHETSp4+F7Jxa8zFMzH9keb8esD94UZVVflB
      YILMjN4lRBmfo7VmdXX18L3isEWtOSytVmuq7GWW59y9t40vPeKwtMLNzc1V+QG2qAuHplBD
      DBcXF8myjK2tLTqdThWOXUyKYM3puYcSNCHEET+TLQ65v+3DeKyyKMYcZjsfzINniRtal2Gt
      9um0T6IW5f+hHxAE0/ZnG5rN5pFEeiPqfJpyPpT6hN54m/V0j8SDTE+sEJ5GonksFkgBg0Tx
      /o2Erd2cr7/cZjBSbN3os+ZN1okSvUUYgz5cjyRPWFhpEvR9vHiag2ldliMv+gX5IC8baIce
      vgeTcBZWFnzmWh6B3+f25jXOnLv00DmZvRyPx5U45NZcNdcZSux5Hq1WawqZizxnvtWZivVy
      KzPU+Y1Onz495RNQSrG1tUWj0aDZbFZGg+vXr9NqtRiPx1UKo/1sIQ6bai8sLBwZu22ltC2H
      hphqfYxYIENtTeKxgQc1qiiKouoNYJ5hK2JCCKIwxPf8qcV1wS64+ygOn08SwjDkwl/8r7j6
      nX/O1g/+LcNM0fZhPxOMCtjNNLkG2fF46lxMmo+QQtBuSkbrTfTtAVorfAT9P/j7DFfOEN+/
      RkcniGzEB3eu0FgOaa3GU7KqmatsCNLdnHAxRMYSmef0hor73YJ3PhzSGyh++E6BJ2EcvsHp
      sxcfiWoakdVYhUzRKRth3NRCex8NcbPzbA0hNMhVF6JgE084VMiNBakoCvr9fvVuExM2HA6r
      cBmgqmNq8ns9zyOO46qQggtGxD6ScKVnGVtrHmDqQ5oanEIIFhcXa9mu1qWr2qTOGWuPfTLh
      sInGL3pOr9aan/zoh4Tf/QesBIo3DzSxhAJ4LBbcaYcsX2rSHSjaTcnuQc4Xnoq4/of3eCLQ
      DBVsnmgi9jN6rQucHdzidm/Edy7NI1tiSqw0UBQFMpeM7owJ5gMupinfeCZirwsbtxL+9Mst
      rm5mnH88JMk0r/0sJowf51v/8Z+j1e7MmMk02JlUrvJoEFhKOeVfMXgAVM6r7e1tlifOP/cQ
      mP12D5B5hz1vg+AHBwdVF3k49EgbA4d92GzY39+filcqioJRMiYOo8pKadJvhThGOLTWms3N
      zSpv1JSlnlULtNfrVS+yJ+kqRqb8yWg0otfrVVlIj3guPzMQQvDyK19iM1yiIeFECM92JCuh
      YDkAlSp27ueMEsWZkwELHY8s1wx1Of8PlMfzryxw5itLLOxeRX3pN1Ev/yp+a3ojDaU1G1SM
      C+JTMeFSwDj2mGt5pJni5JLP5k4ZDuH7glYsWdm9zZdvfZ+b/+R/5sMr7z3SGhpF0p6nshRW
      OGx4aMBwD7OPRkRxRWPXVG1CHWzkd+V1c+3CwgLLy8sMBgPG43FVgNmUZu92u5UjzIa5uTkW
      FhaqZBqlFFpAkqVHUme11sc7AGmacu/evSrBvS78wCg5JszhQc4MI1saM5apTz8YDH4hDwGA
      v/I4RRkWw7DQbCcKX0CrIXn1hSbn1iKULqM2b9zJEMDtRDP3dBshoNOS6JWA/Pq7rJw5i/SP
      UjH7/2Kk8GKJBnYnHfo8KYhCQZJqFjoe3b6iP1KspDm+gFPdTZq//79w4503HmlOU6XJRRmf
      P8uRZcanlGI4HFbVoeM4nqrr6s7DHGzzDluXML/t74zEMDc3h9ZlyqOLS3UN9Iw/qtlsMjc3
      VzkNFZokT0kmmWMVl3ukFZos0lNPPcXzzz/PpUuXWFxcrL3OmLnqZMY654abX2D+/7Rr/X8c
      EELwym/+Rd4d+ZyI4I1E0Hy6w5VTTfZijzJwUtMfFmxup5xYChBPNrk8H3PxybJHmNYatRDQ
      uPUeu/u7tkEImF4roDwgskyM8ToB/aEi8AWdZslhpBS8+dMuV9/scWesudLX3BkrYqEY3d18
      5HlNVeLWZU0fsyd1Trbd3V1u377N7u7ulNnSFaPseZl31YUoVyKJxf3M5+12m0ajwfb29lT1
      ELuzpfuuJE1KLqYUSk2yDIsCKafneuwGGe4JtiHP86pziD1h1/zpLorneYwnzhEhRBXG8Fkp
      useB+YUFeOZVUgXrUvHkpSajwOP0esy/+2mfW9sZ3YFibSVkad7jhedanD4z6aCoy9LeS6sB
      d5sn+dLnX6XoTsep2yCEgHGBtzUm2E1JCs3lawlRAP2hYjgu2Lmf0ellPNMdc6YheLojUUJw
      bQQ3Nq6x9dGN6t1vf/cPee9f/24tV56qmy8EUVAaNtzcWgNhGFbRpeaAmOtmxeYbsEMx7GuM
      Naqu14SUkuXlZbrdbpUCaRJxXOgN+ty9t8PO3i5pliKloBU1aEUNPOlNSRfHMoM+CLTWlX5g
      /jf32cpQncPLWBSMQvwfOrz5QSCE4JVf/7O8dvVtRskB2WbCM0/EzLc9huOCxTmfxY7k2i2z
      MRqt4ac/HzLoFyxJzSj0SE68SBRHnJ47wy0+qn2X1ppLCx5Pxppnz8e8tTHmoK+5divj0pmQ
      nX1BFEh21xpsLgdc/1mPjfs5ZYS+ZmnrCm9/+59z8r/4r0tv7hv/hnYx5Nb5Zzl94dKRd5nf
      dVY7F5aXl+n1eiwsLEwVNhNCVHtpnlGn8NqcwuCFrU/aLbRsJ9zCwgL7+/sURUGr1TpymG2T
      7jgZV34O83z7mcdSgh8GbtsaM2H7INhKkp3WaH4exfv3iwCNZpOzX/8zNCTcuTrkw7d6fHBt
      VOaaas2VGwkHfVMrqbzn8083WU0Knt4Z8bnNPuv5Pt1ej2dPPYccTJsbDWilWWuU//ue4PPn
      YxY6HmsrAXNtj5cuxfieYG014OzjASebkkttwTNtQT+HJ1uCkztXuP7h1ZJix22aHvSuvFk7
      L4OsphIEzO73YPKATdCcTegKFKPxaMr6YyQAwx3sit9m3vbncFin1OgDBhYXFyvL02AwqJ5z
      0OuyvbtTpmRaolHkhxWO2e8tiuKTOQDG0+suknmRTQVca4dZ7Fk6wi8qnP/iV2gvLDHXzXiu
      m3Di8j47d1P2ugVLc6VzSohSdjedI0893+HyapPtFE5svsWN177Nqox4Pvd4bpTw7Cjl6WHK
      2kGCLjSe9NgbFsx3fP79T/u8cWXIQV+xuuhx5UZCqyHpDRVSCnxPlH18KRX0+UAwLOB0pNl+
      /50SAUWJRNnO5hFi5Yol6aR2T1EjLmlddpA33WTcHG0hJHmV3DKNCwbqFOGxleRimztt0dsc
      yDAMWVxcZDQasbm5ye7eLr1+H6301Jht7mMfiipv4mPtvgPGDW1TeDM5k+BeJwPaMeLm/z8p
      h8D3febOPQW977E9LoikYK7tcW7Nx/clm3dTLl8bc2cnY2XR5/tvD3j2fMzF59tsfTQkFJoz
      V77LRxtv8+QXn+J056oVwyL5ow/HvH8npbUoGSeKpTmPQmkKBe2mZKHt8eFmynCsSNJSH9js
      FQxTzZkGPN+RbI4U8x1Jeu1tuvvfIAp8GIG8f2eq6bjWZfeVQhVkeU7oBzTCqGw16mjpWpeV
      GGZx9slFpfWFw712qbh7AIui7PkWxxFSHBXB6vwUvu9XMUm7u7v4QYBolEn1cmLOtd9Vh1t/
      7ANgR3m67MwsgC0K2eEMcBiUZFikKYb6JwG8E2c43/wBbyjJE19aYPxRwuWNlNWlAM8TvPBk
      kzQb8NKlBje3UrZ2czpNb6pvs+rdZ/uu5nTHRiLNVy5EPLvqMRoXnFwuKeEHN8dceNzjh+8M
      mGuVVqfHVnyubiZ88dkOamPI2khxYwzzhWZzrMl1waDYYuP//Nusqy4aQfDiL02Frg8Gg7Jc
      OWWfX0T5XeQHBN7Rvej3+5XnPsvLxBaw9t2IO1pVyFzn6KucosA4Tcp1mRgK6qQGG2wck1Ky
      srJSNfM2fSVszlFnnhXimNGgJsLPsCezeO7AHmTXtgdlwD6hjxLQ9YsCIgjwBcxHksdWAw76
      ZUjC2VMhW/dS3rk6ojsoUBq6A8XNrYyTywErmBoCmsUA8qUz3L1/nZOL09aPhY5Hd6i5cy9n
      eQHWVgIGI8WJxYAnT0doDZvbGQudcr2EhtsJnG/C+wN4aU6yPIlS2Y4ibp94hXD1cS5+5Vem
      KKvhvFLKMqiNaeJUB0YUCXyfYpLkYsCTkgwYpQmNMEYyHe3rUn+tVRXTZSrQ2eOrky5cB5op
      ob+wsFA5ykykqQnoM/cZL7Lv+8eLBRqNRsB0Bpet/bunzMhcVZ6ndfKMA8y+x60H9KiQ5Tmj
      SWfwKAynWmR+mpBu3SDVcH8/42ff3eN26IEUnF8v62tGoeDE4oSaBoKXn25w8+50sac5qdh/
      81+z99KriPs/4ORSMJGZ4cadDF/Cu+8NmVsNEAKascdgpBiONcUkIm73IOetK0Nu9wpEotlJ
      IUBxZyy4l8JKJCme+Rwv/PqfPzIH11npTbKl7KC2untsy550kDP0g7LvmNZorRCeD7o0lNiG
      DvMMpVRVTcTgiW0FqtMP7XvhML5fiDLkuzXJI9nd3a3avPq+z/r6ejW3NE2PdwBsBcVG/Fky
      u/nOVbDqFGL7PY86nnt7u2XDbHVIwYIgYGl+Ad+bXarxk4L48QsMLr/G2QCSfsYXvzbHzn6B
      ADpNSRRKuoOc/V7O+smA3YOCS2cjDj6YzHky1dV0n+t5yNykuoOUkrv3Mho/2SOU8A1Pc3VX
      ceHL89zcyvE9yThVdFplIvtz52M2vr3Dt1qabiR5s6v46pLH5Z4i9gRbY42vZxcuttffRjyo
      z86aFe1pQAhBaxLWnhc5/dFwclAkCk1g7bH7fPu3wYUkTymUmvgnIiTT5lX7ehsn5+bm6HQ6
      HBwcsLe3hxDTYRtKqUe3ArksaZZVx0Z0+6CYe821brcR83McM2gURRXym8VM05Sdvd0jVqlP
      A9YuPceVNGQlFOyfaLC84FdmTyEEvW5O917CQsejGXsc9Aq0Kr2P2lIuG0IR/PQ7vHnrBX7/
      97r0Bzm72wmrsWQuKMWlc4MxG+8M8aRmnMJLTzWZa0kO+jnvXhuTL0coBO+EpVg2scJytiE4
      tdDmmVe/fmT8eZ4fSSw3yG9+2/qaARvxH0QEhRBVAr2YlDpJ84xxlpKpfGY2nO2LyIucPDem
      y0lpl6KgUOZn2pFY5ZroQ8vU3Nwcq6urrK2tVcGcBmc+VmU4++TZ5iXb5msj9ayEdjeZ+UEV
      pl0QQtBptRkMh1VNUvP8oiiQn4E/QQhBv4CfDzT9IOf1P7jHWArSbsbOWBN6gjMHKe++3uOF
      V+ZBlHH8YqIFd3PYSjR3E7jQ7NK79i5PPv0K17/9PeZFBvGkrr7WCK05dXdIdnaJ7fspb/x8
      yNpKQBRKwkCQBRHvzAdcXAm48brih3sZUsBFDXztLzC/uDQ1dq31Ef3NFitMweNZ87Z9BuYz
      lysYEcn0/4JSxMqLnCRNyWRellwE0qLcwyiIyq6QSjHOkipxHkyiTH5E5G7HZSKNKUCQZhnj
      JKEZNfAmHmMTTh+GIePxmL29vTKS+VE32xVNfN+fcpbYMqFN6WcpPq4Wr5Q6EnX4KBBFIVk+
      LVd32h0aMxqpfZLQarV4+vQpvLvX2d9OeHFJ4gE3rpXN8NYbkv1Mc3FvzNs/hruFpN2Y2J4F
      3Bkrnu54PBZr7owUg+3brIcF/adf4cSNH5AqhdKSUGhyURAVOXd/ss+LX1skzTVFAffvJsy3
      JFtDzbnHIk4s+2ycivHvZ6zFglxDY+FojSKzd7YiCdOcwBQxM6C1rkIP6qo2uGZK8xmUucda
      T2z0uvRXqKL8LPSCiprnxZBm1DiiV9T9bSArcuIwOsQnUZZd9D3vyPVal3ktJivu2EKyQXBj
      OahzdrmyoSuvTS9OCUqpY2d3CSGIo/hIkkP4iI0V/rigtUYunGAtguVQcLmn+NG+ZieZrlgW
      CHhyZ8zZEwHXbk3MfQjUxNrS9mCgBL0cVse7zN19n43Tr/CztEmiJyKJKEWIs1nGjZ/2mWt5
      rCwGtFLFs3eGfPNgxN7lHm/+tAcf9AkmUZC7jVVOnj7aOcaupDDLIlemYB7uiS0+2Ahpi0m2
      SGSu8aSsugoZs6emTPqXQpJkyZQoM0rHDJLRVLGEWaISMIWDlQgnjlaLtu8xjRuPXRjLtd/b
      A7DFGiEEo/GYJCt9BL7nEQVhJf+7ps84jh+YVzwLojAiDEJGxaj6LElTmvHRXrKfNNzdvEl8
      4y0QglDCiUhyZ6y52JJcHSgiqbmdQHa+hecJ0kzz5OmYH93LeOpii+F7XaDc5HNNgY9iY1Bw
      Qewhdj7Af/FV/J//u9KuXmiKvECJglP3+nz4oU+awP2hIgMCCetpTnynYD/Q3Euh0KAXT+LV
      2PKllFNV0lydTmtNs3mYpWfCn40SWcXSODFe5ne73abf71fPNBXDkyydQnYpBUofbZziis2z
      FOXyj6Oh1+49eZ6zvb09VVwZjqkDmGAiO7PeHAQ7nNUsWBD4jNJxVf3Ljgp1B2m+Py54UrKy
      uMRwNGI4HpFl6ZRN+tOC7v4++7/7v7JKyvfva0JZ5gZDuQFjBb4QPBbD6edaBL7gw82UKJQs
      rAY892TM25sDxLhEvo4PoRSEUtDNFCvcR278hNvPfYt4YZksSdjf26W98WNOp/c4uDZASsEX
      CsXrPQjmfObPxlx9fwi5JpaCrRTiW7d5zgk0M2DSW9M0rfbBIFyj0SCyqH+SJCil6Pf7nDhx
      YsrDa8A2je93D6oCVIbqe1LSipsUEydZGXJd1ghyxZTqgAlR5lM7hpRKCQc8cSh629zHjMeI
      X2EYVqE3JgL5WAfAlvHs2A6bFU1ZgjTEQQTi0BNoDo8bFfqo/aDqQEpJu9WiXdOh8tOCqNEg
      XV5H3Tmgm2tOhnA30fRzyFXB7ZHm2Y7moxSSjxKkFGzv5Vw8I9Ea3v1wxJ2h5ilRKrgSgRCS
      xxuCKz1F29csZF02t27w7Fd/GaUU29vbXG12kD/+F7QPMpYDCCOfUxHo5YCLL7bx7oxZyjUf
      DjSnY8GK6HLjx69x/ku/VLtuVcnASaUGgyhu72UXAW2oOwRpkuJF8dQ1SikKFL70kMIjiPyy
      rIpS5Lo+rn+WUfyQC0h8z58yqNiRpVpreqM+geeztLxU1SI1XMz77d/+7d9+wD5PDWacJIyT
      MVmRkys11SPM/rEPh5zI5J6c9iq6dmXf9/9ENbnwfZ+VZ19m82DI7uYGz3U8LrZKahV7glOx
      YGMEZ76+xIXTESsLPr1hQTMuoznProX4LR//1gh/IgHspJrVSND24Xv3FWMF6uAee1ffpbl+
      gYXlVVrtNnub1zlHj51MsBhKDgrB0JMEiwFbBwWj/ZxuDk+1JftpQdo/4MQXvjrbVDmplpZN
      ypS7BQqM8quUYjQa0Ww2D+3ojq/F4IOxvhwaOkovr+95jNIx4zQhzTMyJ4vMjKkOan0OUhwJ
      13Cv8z2fKCiLLxgx3ohZx8oH0FpV3f8EAn+Ghce9r65LpO0dVkpVCTEmwrCyA0+SLsJwunze
      LwJ4nsf6138Ddfn7fNgb8/KC5EJL8F5f80wL5gLBO7dS9vsFAkFvqNg9GBMFgq3djK2bCV/1
      JeiCTIHUCpA0fMnFFrS8MqqT8R1u/H9/j3N/5W8ReD79uTU+CCL6Gcz3b3KQ5Xw+y7h8bUR7
      wediHz4YQNODKxm0/Ic3mzMV4erWWClV1QZyrUVwaAqvs7hUuc1FWddITWKOfOmVPQdqLEc2
      1Mn+0xdM/+vimita2xHIcAwdoJKxJu/UHPUEu3KkQW47Q8y1FAFThUvtCFH7Ob1eb6pw0y8K
      SClBCJYjwffuKxYDwW6qGTcEIwXn1kLWVgOkKKu47XYLzj8esTTvU4w16caQhifRaAoNuQah
      y3pDV3oFO/EJ5MIKOZJkPKbRaHDpy3+aQTJiVXr0fu/voelyewzv30z4lV9eZGtzBJQbfD+c
      53P/yV996DyEELUmaEP9XYuevdd1+oDrFzD3AkRBWJo81cOjf13R6wgHcCyJttndLqVvi0a2
      hHJMR5jGEx5SHA2RNRNxPbx1E3EXc6rgqqX92/4FIcoiSOZUm836D8kRtNZ88KMfs9cd0wzg
      lflSEX4slrzZ1ZxuQP69HTaU4qb0uPSVRdZDya1v3+W+VPQywS1f0/YVN1KfUSF561bOuZbk
      hY7giZbHa8ESX/21/5QwDOl0OiRJQjNLSYuccTJGac3zHcGPDzTnI8X+fs7B6Qbh+31+1i1o
      5ff5F//T3+a5b/4G/9HXvnHs9bIrw0F9qMKs6g71PoGj7YpcnKj72z5M9j2uxaiOW9hcwSaw
      eZ4fszy651XOBfMwG9ykB9s0ZpvM7O/dXAAbXG5hZ52ZCX2W/QBcuPXBVe7/77/DvXZB55TH
      ewVcbAkOUsW4gPupJppbQgKBEHhewEe7gqi9gJaaZa3Y6o7Y6Sp+a02gNfyrHUHLF7x+AGca
      mufyD9j43ne4+PVfqxKHAj+gGcVkeUaOJhAgENwfKc797IBAw56Clu/x4rzgcm/Ayg//b94M
      Al569SvHOgS2jO9aWcxnbkKM+7dNvSvCNukQiTau8aP3SSGnQkZmPd82x8+yJNpcyhbdjm0F
      cn+7C2CQ1R6MLSYZcEvx2UqVbWmyF9wuz22uSZKkNl7ls4CFkyfQywu07u7wuacCPAG3xrCd
      wjdXJcNCc/Ct/4xTj69zSUreeP07PP+VV2n/Wruaf/T7/5Cv3X2nWoNLLcljMXygNRea5frM
      XfsjPogaPPvVX56ysGldhhmoXPGlBY+bw1JEPRnAzhgO8rJdBRoDC9RfAAATPklEQVSWAsHt
      H/wh3WeeLxP7HxFMLVFTcc2l0K6o6tZ9someHbHpez6taLqIbaEUhVYEns8oGdOI4ipsfJym
      VdzXlKlTKwbjEZEfTJXoVErRHw2qpBgjugtKpdh4jo9VF8gopKYchftjPrflyTrkN8+royZ1
      39v32+/Psoxer8fe3t4D6w99WtCen6fzjT9FqDRbVvHrlgeF1kRSVKEDSile+uI3aTabU36Q
      YecEqRZkWvBe+xz58uPcGmtORoIPh/DeAK4XMeloyN7eHlEU0Wg0aLdatMIYaXqLaUU7EBST
      NQyE5ukW/KyrGCj4cKiht8f3f+d/Y3Pj2rHWy/d9oni6Soft13HFIfO5HVhnK9e23mCD1gpv
      0lnS9/2ycrUQSCFpRjHtuDkd3qBLzhcH4ZQUUBFQWyybfKcsAi3EMRNibMo/C7HrRB2bcrhW
      oVkWpLpnu1UC4CgnsUHrw0rEpqPIrGd/XDjz5S/R+3/+gMubOWrdQ2nwBfxkX7McanRNfkNZ
      qkMS+AEXXvka26cvoIVgfXERKQQ//vt/l1+KUk4Ar93XrP3qX+LC2bMopdjb26PdbhPHMc1G
      k7va50B5eBM7+qCAjl8G3cUS1mPBIFesxYICwV73Oq//H3+Hk+tnaK2cZPkLX+fx8w+uJypE
      GdWZjJMjBMv+/8FJL/oIXtSZKw1+BE6NIXNf6JexX7kqCH3/wWHv1hBm+S+O3SXSZm3mFNlh
      EbboYr9YCFHbCsnAw5Qq+/329cbtPmsDTbivqWHZbDY/UX/DibVTXP/NX2bld/8l45MesQ++
      B8tSsJVoTtVwOrPRWmuiOOb0E+en5vnYN3+L8Q/+EbEneK6lGTUbxHFceWJN2l8URaz+xn9O
      qhRZltI9OEC99s/ovvBrDLduIu69xZwP7/Xh5kjR9MuQjb0xFD/YIJYbfPAvf8yzf+Ov88zL
      X3jgIfB9H+EgsAGXss/SG+w52vcanLHBTmqy7/GkRAYhcfhwIuZaoQ6/sOb10KdY4Jouba+u
      PdA6CmDLh7Y2737v3u/qFXbsSZqmVdrbrM2zoxaVUvR6vbK7SRzPphzHhBf/3G/yRz98A/32
      XW4Egi98McIXcCISbI96M5GmKAqYGBfM+LTWrJ19gnt/5PG4LAikIPF8BuOyiVwUlZ1cVlZW
      yjDfublK7IgbTUbf+susrD3Ols7g3lsMJyEZlzqCg0xzuiHYHsHiQBEpOGgJrr35NqfOP8HC
      wsJMzg6lLO62s7IR3C43YhfaMuHVbjSAWQdXPHIlBtcEauOB+90Uh5ntR67+OtYBMOKEvUh2
      qbo6E9TUa50J2afedorZh8E+MO7imA4jMzdsshnm+WacaVp2M2m1Wp+IBSluNHjiv/zLfPjf
      /w+kfhnd6YmJ0lVkR9bEzDFTZaKHJ+NqvKWJ1yOXAQXl2IsiJ8vL2HnPL4PYoihiMBhUnAGo
      +nzFjQbjpNQ9tsaal+YglJAUgp1E89FA0/YE49UFXvzv/ib9bhchBJubm6ytrR3p96B1GQUw
      Go8Ow4gtacAmUkYasFNbTcyY8fdUfYdhqr2RjcS2M8vef7fIwgNxDao4oikiZOHSscygrVZr
      WmufFBmqO8HGrGnEDZcVuSe7zltcxxVMm02YFonqwC6z4vv+lJn2k65A8cQLz/PuN14h33ij
      Coq7689x8qkXZsrJcRCSFwVK66qVEoDn+SRf+HVuhT4qL5ibVDouzdA+RGX5cJjkZajS0xzH
      cdXna5xlvNtT3M9gN5Msv/gqXrPN1o0Nop33GZ7wSJMBG2++zQtf/TJFUdDpdNjb26PVatGa
      xFUppbi7s0MchoRegJZlIk2z2aw89EKIqTIrrs0dDi1Gtv5o1t82nMwSlcxnRqE2/9uHZZY+
      +SCx7dgikAE7C8wenB0pahKP3dRIMwBXxrdPu30ozEGwOY0QYipZ40HjtUUgA+12+xPVBYQQ
      /Mbf+Ou8/YPvsf/6/8uCGjF86Vd5rDN3hDva8/Zm6EOnn36+KlteqILecIAUh8XEkiSpFPvW
      JJAwz3Pa7XZZtU0lXOxIlIafpyFnvvKrZbjDwipn+h8RCs3dxSd48uXPT40vjmMGgwH94YBW
      o0mSpkRBUCGpLf6YsBUTXekimptz4IrBFRJOiJARlez3uLjh2vldnHK+LP0MEzDvLLPMkuMX
      xrIRvA60PqwS3Ol06PV6R9zRru3fHpidZWbeZ7M/G0wZjAeBrYybepUmDv7TCLyTUvLSl7/K
      3oULXP1H/yNzJ9ZKi48TNFgUxWEHlCKvKjHYB8P+kULSCOOpw9Lv9wmCoBIrTJ80z/dpNpuk
      E3FVClgIZGWsWL/4DMPH/xsAnoqiSoRyxZCqzaw1N5v7mhwO2xjiIrrtE3CR0+Xu9o8RXV0l
      1uyZqzTX6ZyThTzyTih1g1yVsUnHToiZxU7sQRnKUNcW1ZUZ7QnYLvfDORwNnTCN8R4EZhHt
      9xkk/LQbaC+dXOPSX/tv8Sbs3QazRqaRnO/5R0S7ugOvlcKbUPooijh58iRZlpUdFoFut1vW
      zKSk4o31C7yfDgmCgLEXcXJCjU1jk9GkcCxwBIkNkcryjNALphojmoNk8gjMXrucrU45dfUK
      wyHqooRtPcHm5PY+2u+qU5oP3V/14xB8DD+Auzmubd6O/rPvcwf8INndfpcrOghRyrqPkjzj
      UiaXA32asLC4WEW5moQTW2a1i1EZkLIs62LKf8NsFh8EQUUwhBBVcovhcuc/90UOzl2s2k8Z
      RDPihZTySCSleX4Yhhx0DxgMNfH8dB8IpRT37t2r5P7z589PjXXWehuOUDcvsJxXM0Lm7WvM
      8+zvbWvf4XvrY9bsZx/LE2xeZE/WHoAto49GoyOI77Iqm+25/7vfme+PK77YSOeazj5tkFLS
      aDSmWgrZ62g+M8hhvOmGO9jjr+Oa9nyCIGA4GpXNNCZUutlssr+/X5u+aFPyOvErDCMGwyHd
      Qa+61t4PQ/3Nutom0Lp9tr3Bri5h1sO+FqZjy+yDYa+H/S7b82zDLN1TiI/ZKNv+22VBtsnL
      HYRNEWY9x1x7xDHieZX572HcAw6tPHXv/6y4gHlvo9GoxmIQxCSCGKTMsgw1USjNOk5lOWlF
      XhSVz8AgvRGDpJR0u13Gk8oafuBXUbMGkUylZa01UXDYEdIYG2xi4XkSpdWRbCvP81hZWSHP
      czqdzhTSF0qR5RmBI9LB9IF3RRXXmufqI/Y1dfK+62E2YxWWEmzj1tRzj7OZswZsD9ymtLPA
      pfgPA3MgZvUjnjXWOnHLUNvPEqSUVQqeOXz+hFAY5TIMw9LMOaH8Blk9z0MDSZYxTg+bwtmU
      0hCbxcVFhsMheZ6TJmXzQdPI0F0P+28pZeWlh8nh8oNKOTcirVm7LMumvO9mrwtVlM3oVEGa
      T4dQu1zG7gPgiiX2Pfb3LqG0oe7Q1IHWpVGhFTUIvGPUBnUfYiiFi0x2yW33oLiDr5u4/bn5
      zpaZjwvmfiOHe57HYDB4YPjEpwKiLBarJtGOpgVRnbhgwHye5zll5YPDa8yP6ZJuW9/u379P
      URQsLS2V4qIA0tKyY8QxN6zEWODMYcnznFMrq3jSqwhPnuekkyZzdlVvsz++9Gg3mlUYg0vt
      68SVOnwwnMO+t+66uv+nDriZmyyJiLnOs6SAYznC6oKZzGeG8tvyeZ28Xwf2QaibnEHc41SN
      MF5re5yGkyRJUsUFfVaHQClFoYqqBLhSCgRIps3CNseyx+ZJr8yr1rrq4uhScHMI2u02w+EQ
      6Ul2D+6zODePlLKqiuCKh4YT2ZYXz/NI0pRgYqUy4+8edGl32lNikw2msrSLvFprEGXIs1YK
      ISWeE0Fg7nMPp+tPMO81Y6gzuAhR5iAjqEqyuGKQ1scIhzbgsiFbVnXbz9QpwHVsrO6guAr0
      w2R/s0lpmjIajRgl4yP2bfs9pt/sZyUOpROXf6fZLkuQi9IhY4+/jr0rNamzP6FYaZZO3TNK
      xyWyTrLlzOelDb8MJe72e2gxLaLaMnWWZVMmRijNtMmoDCBUujRp97o9lpaXaDQaR9bTVoTt
      8dm/87xgmIwY5ynjNDmy9jZSV3O3HGf23Iz5t+4AmfE0wqgsz+4YbmxC87Fqg9pgBmzbis0A
      Zim6ddzABEvNYmcPqhqndRn2bGrXAEima8OYd9jUxXQ8n5ub+1Q5QaEUg9EQKQRpnlVVDHxH
      VDBxMW7Sj1mbwPPLEoKWuTP0ginuaJRdE/3abjQruXdcpPiytOaUFRmyskKbEHhqeu3zPOf9
      99+v2uEaR6JpUL2+vl6FQ8B0jSjb/GzPw/c8Oo1D/40b/2Wut/+3D6V5liGIw+GwVscDS+LQ
      R9sz2eL7x6oN6pqSzCSiKKo2wg2Qsw+APUjz27UP28+PouiBlpssy6YC9epYnRGj3GAqk1jz
      carSPSoMBoOyDiaaUTKm8AMaUVxyTH1IVNI0ZTAY0Gq1jpgTTSJI4AdTa+QquOYzN04rS1Pi
      8HB/PN8nVGFVIMrdg0ajwRNPPFGZOofDYVU+xYi6plGKa6I0CrCp+W9zG/s6d8/NfM247X2y
      CadpqO7qFbOkiiNimji0Mh7bEzzLAgTTruogCBiPx1MhsGZz7IG4g7cPjZSSVqv10JqhNktz
      FS5b/jfXuu95UHjHHxf0RHxoRjHjNCEKAwI/qD6P45i8yPE9nzAMq/Ik9v3NeLqsiTsXu0O7
      bQt3CRCUzUSKotRFlNbEYUThB2VzPXHoZILSquT7fuVw63Q6VfCaEVfscRoFO1cFSZqUlUMo
      G2bYeGArwPbBsPfPHocrbpmGF+b6KIoqEbDuMLhrN0VYHrh7M8BWfu2XGZZk/ABGQTETnqXE
      1iG3EGW486M4vepCp2fJ/nVimBEXjluc91GgTInUSOmVVF8dIs3ly5c5deoUQgpGw1EZ2NZq
      Mb8wX4lEWZZNjc2lokKU1plGozH1uSkDbopceZ5HmqYkE+rcCCOkKHOq4yia8j4bXcqYbs0z
      zXdZnhH40/tiqKpSinazVdYvGpXh2khRHaQoisiybEpHdImVSwxd6m/fAyXhNYlPrkfY1SXt
      31IeIynePvHuJhgoiqIqiGqLIa7IU/ds89sM2lglHgbGLm0mZFioO2nz/kr7t6xXAKNR2Vv2
      k0yUMeOzN9XmRmfPnq08tsN4SJZlpdMsLyjycq0NVTXExUSI1h1s+2+TyO6uRzgRY+yO6WZv
      Tb61EGKqVKLRk8y1Jn7J3ivbv6JUWel7wfdJs4zBcEgRlXrLcDSkETeqe1ycsudhI7N9EGzQ
      +rB1l/l/llJcpwscOxbIuMRnDcZGLpulupRk1vNtJH4YaF02bHZjQOpkPnd85nPzGZScoCiK
      T9RHIKWcKtVtm2NXVlaqdYrjmG63W1JyIaoozHxSPqTRaoLW7O3tMT8/X1nFbIXYUG4jn5uA
      NWPeNBw5CMqkc6NzGAOGIThxHOP7fhVhaszG7rq64S+2V9vog15REAchnpDkWY5SxVQVQM/z
      KuXfKPtANa8wDCvjhu1NNo7CNE2P9Kmwia/Zd1fRBj6+EuwuhP1CW4mxB1MHdbL7ccClbsCR
      xTDX2RvkjsGGT7rGkDsvI+dnWcZoNKrGb0SCJElQlKEK0pN0B/0JcpeJM2EjYjgeVS2gzIEd
      DAYVB+n3+4RhSBAEbGxs0Gg0qoaE5vAvLy+X/dSWlirONxqNKpHL5Za2uds8w3VO2lzBbp1r
      FHVPlhUfjIhsKmaYZ9v+CJNyaw606R5kDqQR6cIwrJ7j4uGs/TC/j3UAzAtcK4uL5O5nrsJW
      x57ce4WoL9NnQ5ZllVjgKnsV59EKIWTlfHLfY/42i/Fp6AEGeYxOlCRJtWEG8iIvlcUw5ODg
      gMXFxXJeSpNmKXEUk2al2TL3c6SQzLXaCF2KboaCmwQhgzCj0ahCdLtZuQnQs3Uyg2BumypD
      OOxQbTvByebyNsLbjjpDsY2yXhejZT43Iq0trhg90g6vN2KPLZHMgjpJxYz9WAcgz3OiKKoe
      YCbtUvA6iv6wg+L+/aB2qYbN2gtsj8VcMxqPacQxUnozD4AtYxoz3ycJbjac2WgzViklqjgc
      uzHHCiEmXt8J9Veqqq4c+AFFXuB5ZbSpETcq5BJl26Awiuj3eiwuLlbiq03tYTon16yH2ynS
      jNsef513FpgSt2xR1sYZV/9yCauZvzsuF8eM3mJzqroxm+vrCOUj77Yt0riOCXfAsxB71uDc
      v81gZ5knDWuc9f7qOlWWcHff78bFGyr9SYdGGAXNVRBdymkHnbVarUq8EYIya8kPpsaajRIU
      iizLq4oYSqmJ6bEMm2jGDVrN5tRhM2MyhczMusFhgo6NKK5TyyUcZm/d68177DHbCfH2e11J
      AaZDo+3vjWhmfgdBaU42hMuMyQ14tK+1cVepY7ZJrTtlddq7OyH3M3tDbOphf14nrxuoQ3r3
      2UIIgomi5B4O2xJjnvUwZ9txQevSO20nrZj1qxPXzG+bgk4uQimrC+ekwQM1Bz4Mwipt0kVk
      QzFtubpOWazWbhJqbRDYgF0WxV1X8505FDYSSikR8qgvxgZbKpglOtv7a4uv5nm26GQ/3w35
      NvD/A+yOgHG5D4RCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Mode Choice Histogram' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mode Choice Map' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='44' name='Mode Choice Stats' width='192'>
      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
      HVrHfzP/D6eucQ49hyPCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='Mode Choice Urban Villages' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mode Index Neighborhoods' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
